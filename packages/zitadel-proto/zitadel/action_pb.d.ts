// @generated by protoc-gen-es v1.8.0
// @generated from file zitadel/action.proto (package zitadel.action.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ObjectDetails, TextQueryMethod } from "./object_pb.js";
import type { LocalizedMessage } from "./message_pb.js";

/**
 * @generated from enum zitadel.action.v1.ActionState
 */
export declare enum ActionState {
  /**
   * @generated from enum value: ACTION_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACTION_STATE_INACTIVE = 1;
   */
  INACTIVE = 1,

  /**
   * @generated from enum value: ACTION_STATE_ACTIVE = 2;
   */
  ACTIVE = 2,
}

/**
 * @generated from enum zitadel.action.v1.ActionFieldName
 */
export declare enum ActionFieldName {
  /**
   * @generated from enum value: ACTION_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACTION_FIELD_NAME_NAME = 1;
   */
  NAME = 1,

  /**
   * @generated from enum value: ACTION_FIELD_NAME_ID = 2;
   */
  ID = 2,

  /**
   * @generated from enum value: ACTION_FIELD_NAME_STATE = 3;
   */
  STATE = 3,
}

/**
 * @generated from enum zitadel.action.v1.FlowState
 */
export declare enum FlowState {
  /**
   * @generated from enum value: FLOW_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FLOW_STATE_INACTIVE = 1;
   */
  INACTIVE = 1,

  /**
   * @generated from enum value: FLOW_STATE_ACTIVE = 2;
   */
  ACTIVE = 2,
}

/**
 * @generated from message zitadel.action.v1.Action
 */
export declare class Action extends Message<Action> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.action.v1.ActionState state = 3;
   */
  state: ActionState;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string script = 5;
   */
  script: string;

  /**
   * @generated from field: google.protobuf.Duration timeout = 6;
   */
  timeout?: Duration;

  /**
   * @generated from field: bool allowed_to_fail = 7;
   */
  allowedToFail: boolean;

  constructor(data?: PartialMessage<Action>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.action.v1.Action";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Action;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Action;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Action;

  static equals(a: Action | PlainMessage<Action> | undefined, b: Action | PlainMessage<Action> | undefined): boolean;
}

/**
 * @generated from message zitadel.action.v1.ActionIDQuery
 */
export declare class ActionIDQuery extends Message<ActionIDQuery> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<ActionIDQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.action.v1.ActionIDQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionIDQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionIDQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionIDQuery;

  static equals(a: ActionIDQuery | PlainMessage<ActionIDQuery> | undefined, b: ActionIDQuery | PlainMessage<ActionIDQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.action.v1.ActionNameQuery
 */
export declare class ActionNameQuery extends Message<ActionNameQuery> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<ActionNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.action.v1.ActionNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionNameQuery;

  static equals(a: ActionNameQuery | PlainMessage<ActionNameQuery> | undefined, b: ActionNameQuery | PlainMessage<ActionNameQuery> | undefined): boolean;
}

/**
 * ActionStateQuery always equals
 *
 * @generated from message zitadel.action.v1.ActionStateQuery
 */
export declare class ActionStateQuery extends Message<ActionStateQuery> {
  /**
   * @generated from field: zitadel.action.v1.ActionState state = 1;
   */
  state: ActionState;

  constructor(data?: PartialMessage<ActionStateQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.action.v1.ActionStateQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionStateQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionStateQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionStateQuery;

  static equals(a: ActionStateQuery | PlainMessage<ActionStateQuery> | undefined, b: ActionStateQuery | PlainMessage<ActionStateQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.action.v1.Flow
 */
export declare class Flow extends Message<Flow> {
  /**
   * id of the flow type
   *
   * @generated from field: zitadel.action.v1.FlowType type = 1;
   */
  type?: FlowType;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.action.v1.FlowState state = 3;
   */
  state: FlowState;

  /**
   * @generated from field: repeated zitadel.action.v1.TriggerAction trigger_actions = 4;
   */
  triggerActions: TriggerAction[];

  constructor(data?: PartialMessage<Flow>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.action.v1.Flow";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Flow;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Flow;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Flow;

  static equals(a: Flow | PlainMessage<Flow> | undefined, b: Flow | PlainMessage<Flow> | undefined): boolean;
}

/**
 * @generated from message zitadel.action.v1.FlowType
 */
export declare class FlowType extends Message<FlowType> {
  /**
   * identifier of the type
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * key and name of the type
   *
   * @generated from field: zitadel.v1.LocalizedMessage name = 2;
   */
  name?: LocalizedMessage;

  constructor(data?: PartialMessage<FlowType>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.action.v1.FlowType";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlowType;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlowType;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlowType;

  static equals(a: FlowType | PlainMessage<FlowType> | undefined, b: FlowType | PlainMessage<FlowType> | undefined): boolean;
}

/**
 * @generated from message zitadel.action.v1.TriggerType
 */
export declare class TriggerType extends Message<TriggerType> {
  /**
   * identifier of the type
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * key and name of the type
   *
   * @generated from field: zitadel.v1.LocalizedMessage name = 2;
   */
  name?: LocalizedMessage;

  constructor(data?: PartialMessage<TriggerType>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.action.v1.TriggerType";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TriggerType;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TriggerType;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TriggerType;

  static equals(a: TriggerType | PlainMessage<TriggerType> | undefined, b: TriggerType | PlainMessage<TriggerType> | undefined): boolean;
}

/**
 * @generated from message zitadel.action.v1.TriggerAction
 */
export declare class TriggerAction extends Message<TriggerAction> {
  /**
   * id of the trigger type
   *
   * @generated from field: zitadel.action.v1.TriggerType trigger_type = 1;
   */
  triggerType?: TriggerType;

  /**
   * @generated from field: repeated zitadel.action.v1.Action actions = 2;
   */
  actions: Action[];

  constructor(data?: PartialMessage<TriggerAction>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.action.v1.TriggerAction";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TriggerAction;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TriggerAction;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TriggerAction;

  static equals(a: TriggerAction | PlainMessage<TriggerAction> | undefined, b: TriggerAction | PlainMessage<TriggerAction> | undefined): boolean;
}

