// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/feature/v2beta/user.proto (package zitadel.feature.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Details } from "../../object/v2beta/object_pb.js";

/**
 * @generated from message zitadel.feature.v2beta.SetUserFeatureRequest
 */
export class SetUserFeatureRequest extends Message<SetUserFeatureRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<SetUserFeatureRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.feature.v2beta.SetUserFeatureRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetUserFeatureRequest {
    return new SetUserFeatureRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetUserFeatureRequest {
    return new SetUserFeatureRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetUserFeatureRequest {
    return new SetUserFeatureRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetUserFeatureRequest | PlainMessage<SetUserFeatureRequest> | undefined, b: SetUserFeatureRequest | PlainMessage<SetUserFeatureRequest> | undefined): boolean {
    return proto3.util.equals(SetUserFeatureRequest, a, b);
  }
}

/**
 * @generated from message zitadel.feature.v2beta.SetUserFeaturesResponse
 */
export class SetUserFeaturesResponse extends Message<SetUserFeaturesResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<SetUserFeaturesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.feature.v2beta.SetUserFeaturesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetUserFeaturesResponse {
    return new SetUserFeaturesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetUserFeaturesResponse {
    return new SetUserFeaturesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetUserFeaturesResponse {
    return new SetUserFeaturesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetUserFeaturesResponse | PlainMessage<SetUserFeaturesResponse> | undefined, b: SetUserFeaturesResponse | PlainMessage<SetUserFeaturesResponse> | undefined): boolean {
    return proto3.util.equals(SetUserFeaturesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.feature.v2beta.ResetUserFeaturesRequest
 */
export class ResetUserFeaturesRequest extends Message<ResetUserFeaturesRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<ResetUserFeaturesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.feature.v2beta.ResetUserFeaturesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetUserFeaturesRequest {
    return new ResetUserFeaturesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetUserFeaturesRequest {
    return new ResetUserFeaturesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetUserFeaturesRequest {
    return new ResetUserFeaturesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetUserFeaturesRequest | PlainMessage<ResetUserFeaturesRequest> | undefined, b: ResetUserFeaturesRequest | PlainMessage<ResetUserFeaturesRequest> | undefined): boolean {
    return proto3.util.equals(ResetUserFeaturesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.feature.v2beta.ResetUserFeaturesResponse
 */
export class ResetUserFeaturesResponse extends Message<ResetUserFeaturesResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<ResetUserFeaturesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.feature.v2beta.ResetUserFeaturesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetUserFeaturesResponse {
    return new ResetUserFeaturesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetUserFeaturesResponse {
    return new ResetUserFeaturesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetUserFeaturesResponse {
    return new ResetUserFeaturesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetUserFeaturesResponse | PlainMessage<ResetUserFeaturesResponse> | undefined, b: ResetUserFeaturesResponse | PlainMessage<ResetUserFeaturesResponse> | undefined): boolean {
    return proto3.util.equals(ResetUserFeaturesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.feature.v2beta.GetUserFeaturesRequest
 */
export class GetUserFeaturesRequest extends Message<GetUserFeaturesRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: bool inheritance = 2;
   */
  inheritance = false;

  constructor(data?: PartialMessage<GetUserFeaturesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.feature.v2beta.GetUserFeaturesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "inheritance", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserFeaturesRequest {
    return new GetUserFeaturesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserFeaturesRequest {
    return new GetUserFeaturesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserFeaturesRequest {
    return new GetUserFeaturesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserFeaturesRequest | PlainMessage<GetUserFeaturesRequest> | undefined, b: GetUserFeaturesRequest | PlainMessage<GetUserFeaturesRequest> | undefined): boolean {
    return proto3.util.equals(GetUserFeaturesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.feature.v2beta.GetUserFeaturesResponse
 */
export class GetUserFeaturesResponse extends Message<GetUserFeaturesResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<GetUserFeaturesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.feature.v2beta.GetUserFeaturesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserFeaturesResponse {
    return new GetUserFeaturesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserFeaturesResponse {
    return new GetUserFeaturesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserFeaturesResponse {
    return new GetUserFeaturesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserFeaturesResponse | PlainMessage<GetUserFeaturesResponse> | undefined, b: GetUserFeaturesResponse | PlainMessage<GetUserFeaturesResponse> | undefined): boolean {
    return proto3.util.equals(GetUserFeaturesResponse, a, b);
  }
}

