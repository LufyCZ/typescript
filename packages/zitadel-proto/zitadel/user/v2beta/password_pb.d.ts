// @generated by protoc-gen-es v1.9.0
// @generated from file zitadel/user/v2beta/password.proto (package zitadel.user.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum zitadel.user.v2beta.NotificationType
 */
export declare enum NotificationType {
  /**
   * @generated from enum value: NOTIFICATION_TYPE_Unspecified = 0;
   */
  Unspecified = 0,

  /**
   * @generated from enum value: NOTIFICATION_TYPE_Email = 1;
   */
  Email = 1,

  /**
   * @generated from enum value: NOTIFICATION_TYPE_SMS = 2;
   */
  SMS = 2,
}

/**
 * @generated from message zitadel.user.v2beta.Password
 */
export declare class Password extends Message<Password> {
  /**
   * @generated from field: string password = 1;
   */
  password: string;

  /**
   * @generated from field: bool change_required = 2;
   */
  changeRequired: boolean;

  constructor(data?: PartialMessage<Password>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v2beta.Password";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Password;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Password;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Password;

  static equals(a: Password | PlainMessage<Password> | undefined, b: Password | PlainMessage<Password> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v2beta.HashedPassword
 */
export declare class HashedPassword extends Message<HashedPassword> {
  /**
   * @generated from field: string hash = 1;
   */
  hash: string;

  /**
   * @generated from field: bool change_required = 2;
   */
  changeRequired: boolean;

  constructor(data?: PartialMessage<HashedPassword>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v2beta.HashedPassword";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HashedPassword;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HashedPassword;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HashedPassword;

  static equals(a: HashedPassword | PlainMessage<HashedPassword> | undefined, b: HashedPassword | PlainMessage<HashedPassword> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v2beta.SendPasswordResetLink
 */
export declare class SendPasswordResetLink extends Message<SendPasswordResetLink> {
  /**
   * @generated from field: zitadel.user.v2beta.NotificationType notification_type = 1;
   */
  notificationType: NotificationType;

  /**
   * @generated from field: optional string url_template = 2;
   */
  urlTemplate?: string;

  constructor(data?: PartialMessage<SendPasswordResetLink>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v2beta.SendPasswordResetLink";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendPasswordResetLink;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendPasswordResetLink;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendPasswordResetLink;

  static equals(a: SendPasswordResetLink | PlainMessage<SendPasswordResetLink> | undefined, b: SendPasswordResetLink | PlainMessage<SendPasswordResetLink> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v2beta.ReturnPasswordResetCode
 */
export declare class ReturnPasswordResetCode extends Message<ReturnPasswordResetCode> {
  constructor(data?: PartialMessage<ReturnPasswordResetCode>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v2beta.ReturnPasswordResetCode";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReturnPasswordResetCode;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReturnPasswordResetCode;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReturnPasswordResetCode;

  static equals(a: ReturnPasswordResetCode | PlainMessage<ReturnPasswordResetCode> | undefined, b: ReturnPasswordResetCode | PlainMessage<ReturnPasswordResetCode> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v2beta.SetPassword
 */
export declare class SetPassword extends Message<SetPassword> {
  /**
   * @generated from oneof zitadel.user.v2beta.SetPassword.password_type
   */
  passwordType: {
    /**
     * @generated from field: zitadel.user.v2beta.Password password = 1;
     */
    value: Password;
    case: "password";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.HashedPassword hashed_password = 2;
     */
    value: HashedPassword;
    case: "hashedPassword";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from oneof zitadel.user.v2beta.SetPassword.verification
   */
  verification: {
    /**
     * @generated from field: string current_password = 3;
     */
    value: string;
    case: "currentPassword";
  } | {
    /**
     * @generated from field: string verification_code = 4;
     */
    value: string;
    case: "verificationCode";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<SetPassword>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v2beta.SetPassword";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPassword;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPassword;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPassword;

  static equals(a: SetPassword | PlainMessage<SetPassword> | undefined, b: SetPassword | PlainMessage<SetPassword> | undefined): boolean;
}

