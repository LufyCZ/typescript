// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/settings/v2beta/password_settings.proto (package zitadel.settings.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { ResourceOwnerType } from "./settings_pb.js";

/**
 * @generated from message zitadel.settings.v2beta.PasswordComplexitySettings
 */
export class PasswordComplexitySettings extends Message<PasswordComplexitySettings> {
  /**
   * @generated from field: uint64 min_length = 1;
   */
  minLength = protoInt64.zero;

  /**
   * @generated from field: bool requires_uppercase = 2;
   */
  requiresUppercase = false;

  /**
   * @generated from field: bool requires_lowercase = 3;
   */
  requiresLowercase = false;

  /**
   * @generated from field: bool requires_number = 4;
   */
  requiresNumber = false;

  /**
   * @generated from field: bool requires_symbol = 5;
   */
  requiresSymbol = false;

  /**
   * resource_owner_type returns if the settings is managed on the organization or on the instance
   *
   * @generated from field: zitadel.settings.v2beta.ResourceOwnerType resource_owner_type = 6;
   */
  resourceOwnerType = ResourceOwnerType.UNSPECIFIED;

  constructor(data?: PartialMessage<PasswordComplexitySettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.PasswordComplexitySettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "min_length", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "requires_uppercase", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "requires_lowercase", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "requires_number", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "requires_symbol", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "resource_owner_type", kind: "enum", T: proto3.getEnumType(ResourceOwnerType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PasswordComplexitySettings {
    return new PasswordComplexitySettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PasswordComplexitySettings {
    return new PasswordComplexitySettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PasswordComplexitySettings {
    return new PasswordComplexitySettings().fromJsonString(jsonString, options);
  }

  static equals(a: PasswordComplexitySettings | PlainMessage<PasswordComplexitySettings> | undefined, b: PasswordComplexitySettings | PlainMessage<PasswordComplexitySettings> | undefined): boolean {
    return proto3.util.equals(PasswordComplexitySettings, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.PasswordExpirySettings
 */
export class PasswordExpirySettings extends Message<PasswordExpirySettings> {
  /**
   * Amount of days after which a password will expire. The user will be forced to change the password on the following authentication.
   *
   * @generated from field: uint64 max_age_days = 1;
   */
  maxAgeDays = protoInt64.zero;

  /**
   * Amount of days after which the user should be notified of the upcoming expiry. ZITADEL will not notify the user.
   *
   * @generated from field: uint64 expire_warn_days = 2;
   */
  expireWarnDays = protoInt64.zero;

  /**
   * resource_owner_type returns if the settings is managed on the organization or on the instance
   *
   * @generated from field: zitadel.settings.v2beta.ResourceOwnerType resource_owner_type = 3;
   */
  resourceOwnerType = ResourceOwnerType.UNSPECIFIED;

  constructor(data?: PartialMessage<PasswordExpirySettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.PasswordExpirySettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "max_age_days", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "expire_warn_days", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "resource_owner_type", kind: "enum", T: proto3.getEnumType(ResourceOwnerType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PasswordExpirySettings {
    return new PasswordExpirySettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PasswordExpirySettings {
    return new PasswordExpirySettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PasswordExpirySettings {
    return new PasswordExpirySettings().fromJsonString(jsonString, options);
  }

  static equals(a: PasswordExpirySettings | PlainMessage<PasswordExpirySettings> | undefined, b: PasswordExpirySettings | PlainMessage<PasswordExpirySettings> | undefined): boolean {
    return proto3.util.equals(PasswordExpirySettings, a, b);
  }
}

