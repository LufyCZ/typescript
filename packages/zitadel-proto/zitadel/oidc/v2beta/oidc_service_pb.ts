// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/oidc/v2beta/oidc_service.proto (package zitadel.oidc.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { AuthorizationError, AuthRequest } from "./authorization_pb.js";
import { Details } from "../../object/v2beta/object_pb.js";

/**
 * @generated from message zitadel.oidc.v2beta.GetAuthRequestRequest
 */
export class GetAuthRequestRequest extends Message<GetAuthRequestRequest> {
  /**
   * @generated from field: string auth_request_id = 1;
   */
  authRequestId = "";

  constructor(data?: PartialMessage<GetAuthRequestRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.oidc.v2beta.GetAuthRequestRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "auth_request_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAuthRequestRequest {
    return new GetAuthRequestRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAuthRequestRequest {
    return new GetAuthRequestRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAuthRequestRequest {
    return new GetAuthRequestRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAuthRequestRequest | PlainMessage<GetAuthRequestRequest> | undefined, b: GetAuthRequestRequest | PlainMessage<GetAuthRequestRequest> | undefined): boolean {
    return proto3.util.equals(GetAuthRequestRequest, a, b);
  }
}

/**
 * @generated from message zitadel.oidc.v2beta.GetAuthRequestResponse
 */
export class GetAuthRequestResponse extends Message<GetAuthRequestResponse> {
  /**
   * @generated from field: zitadel.oidc.v2beta.AuthRequest auth_request = 1;
   */
  authRequest?: AuthRequest;

  constructor(data?: PartialMessage<GetAuthRequestResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.oidc.v2beta.GetAuthRequestResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "auth_request", kind: "message", T: AuthRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAuthRequestResponse {
    return new GetAuthRequestResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAuthRequestResponse {
    return new GetAuthRequestResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAuthRequestResponse {
    return new GetAuthRequestResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAuthRequestResponse | PlainMessage<GetAuthRequestResponse> | undefined, b: GetAuthRequestResponse | PlainMessage<GetAuthRequestResponse> | undefined): boolean {
    return proto3.util.equals(GetAuthRequestResponse, a, b);
  }
}

/**
 * @generated from message zitadel.oidc.v2beta.CreateCallbackRequest
 */
export class CreateCallbackRequest extends Message<CreateCallbackRequest> {
  /**
   * @generated from field: string auth_request_id = 1;
   */
  authRequestId = "";

  /**
   * @generated from oneof zitadel.oidc.v2beta.CreateCallbackRequest.callback_kind
   */
  callbackKind: {
    /**
     * @generated from field: zitadel.oidc.v2beta.Session session = 2;
     */
    value: Session;
    case: "session";
  } | {
    /**
     * @generated from field: zitadel.oidc.v2beta.AuthorizationError error = 3;
     */
    value: AuthorizationError;
    case: "error";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CreateCallbackRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.oidc.v2beta.CreateCallbackRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "auth_request_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "session", kind: "message", T: Session, oneof: "callback_kind" },
    { no: 3, name: "error", kind: "message", T: AuthorizationError, oneof: "callback_kind" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateCallbackRequest {
    return new CreateCallbackRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateCallbackRequest {
    return new CreateCallbackRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateCallbackRequest {
    return new CreateCallbackRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateCallbackRequest | PlainMessage<CreateCallbackRequest> | undefined, b: CreateCallbackRequest | PlainMessage<CreateCallbackRequest> | undefined): boolean {
    return proto3.util.equals(CreateCallbackRequest, a, b);
  }
}

/**
 * @generated from message zitadel.oidc.v2beta.Session
 */
export class Session extends Message<Session> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId = "";

  /**
   * @generated from field: string session_token = 2;
   */
  sessionToken = "";

  constructor(data?: PartialMessage<Session>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.oidc.v2beta.Session";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "session_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Session {
    return new Session().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Session {
    return new Session().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Session {
    return new Session().fromJsonString(jsonString, options);
  }

  static equals(a: Session | PlainMessage<Session> | undefined, b: Session | PlainMessage<Session> | undefined): boolean {
    return proto3.util.equals(Session, a, b);
  }
}

/**
 * @generated from message zitadel.oidc.v2beta.CreateCallbackResponse
 */
export class CreateCallbackResponse extends Message<CreateCallbackResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: string callback_url = 2;
   */
  callbackUrl = "";

  constructor(data?: PartialMessage<CreateCallbackResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.oidc.v2beta.CreateCallbackResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "callback_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateCallbackResponse {
    return new CreateCallbackResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateCallbackResponse {
    return new CreateCallbackResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateCallbackResponse {
    return new CreateCallbackResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateCallbackResponse | PlainMessage<CreateCallbackResponse> | undefined, b: CreateCallbackResponse | PlainMessage<CreateCallbackResponse> | undefined): boolean {
    return proto3.util.equals(CreateCallbackResponse, a, b);
  }
}

