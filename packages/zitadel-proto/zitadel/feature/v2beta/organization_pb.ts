// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/feature/v2beta/organization.proto (package zitadel.feature.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Details } from "../../object/v2beta/object_pb.js";

/**
 * @generated from message zitadel.feature.v2beta.SetOrganizationFeaturesRequest
 */
export class SetOrganizationFeaturesRequest extends Message<SetOrganizationFeaturesRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  constructor(data?: PartialMessage<SetOrganizationFeaturesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.feature.v2beta.SetOrganizationFeaturesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetOrganizationFeaturesRequest {
    return new SetOrganizationFeaturesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetOrganizationFeaturesRequest {
    return new SetOrganizationFeaturesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetOrganizationFeaturesRequest {
    return new SetOrganizationFeaturesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetOrganizationFeaturesRequest | PlainMessage<SetOrganizationFeaturesRequest> | undefined, b: SetOrganizationFeaturesRequest | PlainMessage<SetOrganizationFeaturesRequest> | undefined): boolean {
    return proto3.util.equals(SetOrganizationFeaturesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.feature.v2beta.SetOrganizationFeaturesResponse
 */
export class SetOrganizationFeaturesResponse extends Message<SetOrganizationFeaturesResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<SetOrganizationFeaturesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.feature.v2beta.SetOrganizationFeaturesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetOrganizationFeaturesResponse {
    return new SetOrganizationFeaturesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetOrganizationFeaturesResponse {
    return new SetOrganizationFeaturesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetOrganizationFeaturesResponse {
    return new SetOrganizationFeaturesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetOrganizationFeaturesResponse | PlainMessage<SetOrganizationFeaturesResponse> | undefined, b: SetOrganizationFeaturesResponse | PlainMessage<SetOrganizationFeaturesResponse> | undefined): boolean {
    return proto3.util.equals(SetOrganizationFeaturesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.feature.v2beta.ResetOrganizationFeaturesRequest
 */
export class ResetOrganizationFeaturesRequest extends Message<ResetOrganizationFeaturesRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  constructor(data?: PartialMessage<ResetOrganizationFeaturesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.feature.v2beta.ResetOrganizationFeaturesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetOrganizationFeaturesRequest {
    return new ResetOrganizationFeaturesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetOrganizationFeaturesRequest {
    return new ResetOrganizationFeaturesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetOrganizationFeaturesRequest {
    return new ResetOrganizationFeaturesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetOrganizationFeaturesRequest | PlainMessage<ResetOrganizationFeaturesRequest> | undefined, b: ResetOrganizationFeaturesRequest | PlainMessage<ResetOrganizationFeaturesRequest> | undefined): boolean {
    return proto3.util.equals(ResetOrganizationFeaturesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.feature.v2beta.ResetOrganizationFeaturesResponse
 */
export class ResetOrganizationFeaturesResponse extends Message<ResetOrganizationFeaturesResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<ResetOrganizationFeaturesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.feature.v2beta.ResetOrganizationFeaturesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetOrganizationFeaturesResponse {
    return new ResetOrganizationFeaturesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetOrganizationFeaturesResponse {
    return new ResetOrganizationFeaturesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetOrganizationFeaturesResponse {
    return new ResetOrganizationFeaturesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetOrganizationFeaturesResponse | PlainMessage<ResetOrganizationFeaturesResponse> | undefined, b: ResetOrganizationFeaturesResponse | PlainMessage<ResetOrganizationFeaturesResponse> | undefined): boolean {
    return proto3.util.equals(ResetOrganizationFeaturesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.feature.v2beta.GetOrganizationFeaturesRequest
 */
export class GetOrganizationFeaturesRequest extends Message<GetOrganizationFeaturesRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: bool inheritance = 2;
   */
  inheritance = false;

  constructor(data?: PartialMessage<GetOrganizationFeaturesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.feature.v2beta.GetOrganizationFeaturesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "inheritance", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationFeaturesRequest {
    return new GetOrganizationFeaturesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationFeaturesRequest {
    return new GetOrganizationFeaturesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationFeaturesRequest {
    return new GetOrganizationFeaturesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationFeaturesRequest | PlainMessage<GetOrganizationFeaturesRequest> | undefined, b: GetOrganizationFeaturesRequest | PlainMessage<GetOrganizationFeaturesRequest> | undefined): boolean {
    return proto3.util.equals(GetOrganizationFeaturesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.feature.v2beta.GetOrganizationFeaturesResponse
 */
export class GetOrganizationFeaturesResponse extends Message<GetOrganizationFeaturesResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<GetOrganizationFeaturesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.feature.v2beta.GetOrganizationFeaturesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationFeaturesResponse {
    return new GetOrganizationFeaturesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationFeaturesResponse {
    return new GetOrganizationFeaturesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationFeaturesResponse {
    return new GetOrganizationFeaturesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationFeaturesResponse | PlainMessage<GetOrganizationFeaturesResponse> | undefined, b: GetOrganizationFeaturesResponse | PlainMessage<GetOrganizationFeaturesResponse> | undefined): boolean {
    return proto3.util.equals(GetOrganizationFeaturesResponse, a, b);
  }
}

