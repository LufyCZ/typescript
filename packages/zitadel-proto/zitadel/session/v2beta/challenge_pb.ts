// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/session/v2beta/challenge.proto (package zitadel.session.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Struct } from "@bufbuild/protobuf";

/**
 * @generated from enum zitadel.session.v2beta.UserVerificationRequirement
 */
export enum UserVerificationRequirement {
  /**
   * @generated from enum value: USER_VERIFICATION_REQUIREMENT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_VERIFICATION_REQUIREMENT_REQUIRED = 1;
   */
  REQUIRED = 1,

  /**
   * @generated from enum value: USER_VERIFICATION_REQUIREMENT_PREFERRED = 2;
   */
  PREFERRED = 2,

  /**
   * @generated from enum value: USER_VERIFICATION_REQUIREMENT_DISCOURAGED = 3;
   */
  DISCOURAGED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(UserVerificationRequirement)
proto3.util.setEnumType(UserVerificationRequirement, "zitadel.session.v2beta.UserVerificationRequirement", [
  { no: 0, name: "USER_VERIFICATION_REQUIREMENT_UNSPECIFIED" },
  { no: 1, name: "USER_VERIFICATION_REQUIREMENT_REQUIRED" },
  { no: 2, name: "USER_VERIFICATION_REQUIREMENT_PREFERRED" },
  { no: 3, name: "USER_VERIFICATION_REQUIREMENT_DISCOURAGED" },
]);

/**
 * @generated from message zitadel.session.v2beta.RequestChallenges
 */
export class RequestChallenges extends Message<RequestChallenges> {
  /**
   * @generated from field: optional zitadel.session.v2beta.RequestChallenges.WebAuthN web_auth_n = 1;
   */
  webAuthN?: RequestChallenges_WebAuthN;

  /**
   * @generated from field: optional zitadel.session.v2beta.RequestChallenges.OTPSMS otp_sms = 2;
   */
  otpSms?: RequestChallenges_OTPSMS;

  /**
   * @generated from field: optional zitadel.session.v2beta.RequestChallenges.OTPEmail otp_email = 3;
   */
  otpEmail?: RequestChallenges_OTPEmail;

  constructor(data?: PartialMessage<RequestChallenges>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.session.v2beta.RequestChallenges";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "web_auth_n", kind: "message", T: RequestChallenges_WebAuthN, opt: true },
    { no: 2, name: "otp_sms", kind: "message", T: RequestChallenges_OTPSMS, opt: true },
    { no: 3, name: "otp_email", kind: "message", T: RequestChallenges_OTPEmail, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestChallenges {
    return new RequestChallenges().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestChallenges {
    return new RequestChallenges().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestChallenges {
    return new RequestChallenges().fromJsonString(jsonString, options);
  }

  static equals(a: RequestChallenges | PlainMessage<RequestChallenges> | undefined, b: RequestChallenges | PlainMessage<RequestChallenges> | undefined): boolean {
    return proto3.util.equals(RequestChallenges, a, b);
  }
}

/**
 * @generated from message zitadel.session.v2beta.RequestChallenges.WebAuthN
 */
export class RequestChallenges_WebAuthN extends Message<RequestChallenges_WebAuthN> {
  /**
   * @generated from field: string domain = 1;
   */
  domain = "";

  /**
   * @generated from field: zitadel.session.v2beta.UserVerificationRequirement user_verification_requirement = 2;
   */
  userVerificationRequirement = UserVerificationRequirement.UNSPECIFIED;

  constructor(data?: PartialMessage<RequestChallenges_WebAuthN>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.session.v2beta.RequestChallenges.WebAuthN";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_verification_requirement", kind: "enum", T: proto3.getEnumType(UserVerificationRequirement) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestChallenges_WebAuthN {
    return new RequestChallenges_WebAuthN().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestChallenges_WebAuthN {
    return new RequestChallenges_WebAuthN().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestChallenges_WebAuthN {
    return new RequestChallenges_WebAuthN().fromJsonString(jsonString, options);
  }

  static equals(a: RequestChallenges_WebAuthN | PlainMessage<RequestChallenges_WebAuthN> | undefined, b: RequestChallenges_WebAuthN | PlainMessage<RequestChallenges_WebAuthN> | undefined): boolean {
    return proto3.util.equals(RequestChallenges_WebAuthN, a, b);
  }
}

/**
 * @generated from message zitadel.session.v2beta.RequestChallenges.OTPSMS
 */
export class RequestChallenges_OTPSMS extends Message<RequestChallenges_OTPSMS> {
  /**
   * @generated from field: bool return_code = 1;
   */
  returnCode = false;

  constructor(data?: PartialMessage<RequestChallenges_OTPSMS>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.session.v2beta.RequestChallenges.OTPSMS";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "return_code", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestChallenges_OTPSMS {
    return new RequestChallenges_OTPSMS().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestChallenges_OTPSMS {
    return new RequestChallenges_OTPSMS().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestChallenges_OTPSMS {
    return new RequestChallenges_OTPSMS().fromJsonString(jsonString, options);
  }

  static equals(a: RequestChallenges_OTPSMS | PlainMessage<RequestChallenges_OTPSMS> | undefined, b: RequestChallenges_OTPSMS | PlainMessage<RequestChallenges_OTPSMS> | undefined): boolean {
    return proto3.util.equals(RequestChallenges_OTPSMS, a, b);
  }
}

/**
 * @generated from message zitadel.session.v2beta.RequestChallenges.OTPEmail
 */
export class RequestChallenges_OTPEmail extends Message<RequestChallenges_OTPEmail> {
  /**
   * if no delivery_type is specified, an email is sent with the default url
   *
   * @generated from oneof zitadel.session.v2beta.RequestChallenges.OTPEmail.delivery_type
   */
  deliveryType: {
    /**
     * @generated from field: zitadel.session.v2beta.RequestChallenges.OTPEmail.SendCode send_code = 2;
     */
    value: RequestChallenges_OTPEmail_SendCode;
    case: "sendCode";
  } | {
    /**
     * @generated from field: zitadel.session.v2beta.RequestChallenges.OTPEmail.ReturnCode return_code = 3;
     */
    value: RequestChallenges_OTPEmail_ReturnCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<RequestChallenges_OTPEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.session.v2beta.RequestChallenges.OTPEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "send_code", kind: "message", T: RequestChallenges_OTPEmail_SendCode, oneof: "delivery_type" },
    { no: 3, name: "return_code", kind: "message", T: RequestChallenges_OTPEmail_ReturnCode, oneof: "delivery_type" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestChallenges_OTPEmail {
    return new RequestChallenges_OTPEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestChallenges_OTPEmail {
    return new RequestChallenges_OTPEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestChallenges_OTPEmail {
    return new RequestChallenges_OTPEmail().fromJsonString(jsonString, options);
  }

  static equals(a: RequestChallenges_OTPEmail | PlainMessage<RequestChallenges_OTPEmail> | undefined, b: RequestChallenges_OTPEmail | PlainMessage<RequestChallenges_OTPEmail> | undefined): boolean {
    return proto3.util.equals(RequestChallenges_OTPEmail, a, b);
  }
}

/**
 * @generated from message zitadel.session.v2beta.RequestChallenges.OTPEmail.SendCode
 */
export class RequestChallenges_OTPEmail_SendCode extends Message<RequestChallenges_OTPEmail_SendCode> {
  /**
   * @generated from field: optional string url_template = 1;
   */
  urlTemplate?: string;

  constructor(data?: PartialMessage<RequestChallenges_OTPEmail_SendCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.session.v2beta.RequestChallenges.OTPEmail.SendCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "url_template", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestChallenges_OTPEmail_SendCode {
    return new RequestChallenges_OTPEmail_SendCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestChallenges_OTPEmail_SendCode {
    return new RequestChallenges_OTPEmail_SendCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestChallenges_OTPEmail_SendCode {
    return new RequestChallenges_OTPEmail_SendCode().fromJsonString(jsonString, options);
  }

  static equals(a: RequestChallenges_OTPEmail_SendCode | PlainMessage<RequestChallenges_OTPEmail_SendCode> | undefined, b: RequestChallenges_OTPEmail_SendCode | PlainMessage<RequestChallenges_OTPEmail_SendCode> | undefined): boolean {
    return proto3.util.equals(RequestChallenges_OTPEmail_SendCode, a, b);
  }
}

/**
 * @generated from message zitadel.session.v2beta.RequestChallenges.OTPEmail.ReturnCode
 */
export class RequestChallenges_OTPEmail_ReturnCode extends Message<RequestChallenges_OTPEmail_ReturnCode> {
  constructor(data?: PartialMessage<RequestChallenges_OTPEmail_ReturnCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.session.v2beta.RequestChallenges.OTPEmail.ReturnCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestChallenges_OTPEmail_ReturnCode {
    return new RequestChallenges_OTPEmail_ReturnCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestChallenges_OTPEmail_ReturnCode {
    return new RequestChallenges_OTPEmail_ReturnCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestChallenges_OTPEmail_ReturnCode {
    return new RequestChallenges_OTPEmail_ReturnCode().fromJsonString(jsonString, options);
  }

  static equals(a: RequestChallenges_OTPEmail_ReturnCode | PlainMessage<RequestChallenges_OTPEmail_ReturnCode> | undefined, b: RequestChallenges_OTPEmail_ReturnCode | PlainMessage<RequestChallenges_OTPEmail_ReturnCode> | undefined): boolean {
    return proto3.util.equals(RequestChallenges_OTPEmail_ReturnCode, a, b);
  }
}

/**
 * @generated from message zitadel.session.v2beta.Challenges
 */
export class Challenges extends Message<Challenges> {
  /**
   * @generated from field: optional zitadel.session.v2beta.Challenges.WebAuthN web_auth_n = 1;
   */
  webAuthN?: Challenges_WebAuthN;

  /**
   * @generated from field: optional string otp_sms = 2;
   */
  otpSms?: string;

  /**
   * @generated from field: optional string otp_email = 3;
   */
  otpEmail?: string;

  constructor(data?: PartialMessage<Challenges>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.session.v2beta.Challenges";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "web_auth_n", kind: "message", T: Challenges_WebAuthN, opt: true },
    { no: 2, name: "otp_sms", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "otp_email", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Challenges {
    return new Challenges().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Challenges {
    return new Challenges().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Challenges {
    return new Challenges().fromJsonString(jsonString, options);
  }

  static equals(a: Challenges | PlainMessage<Challenges> | undefined, b: Challenges | PlainMessage<Challenges> | undefined): boolean {
    return proto3.util.equals(Challenges, a, b);
  }
}

/**
 * @generated from message zitadel.session.v2beta.Challenges.WebAuthN
 */
export class Challenges_WebAuthN extends Message<Challenges_WebAuthN> {
  /**
   * @generated from field: google.protobuf.Struct public_key_credential_request_options = 1;
   */
  publicKeyCredentialRequestOptions?: Struct;

  constructor(data?: PartialMessage<Challenges_WebAuthN>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.session.v2beta.Challenges.WebAuthN";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "public_key_credential_request_options", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Challenges_WebAuthN {
    return new Challenges_WebAuthN().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Challenges_WebAuthN {
    return new Challenges_WebAuthN().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Challenges_WebAuthN {
    return new Challenges_WebAuthN().fromJsonString(jsonString, options);
  }

  static equals(a: Challenges_WebAuthN | PlainMessage<Challenges_WebAuthN> | undefined, b: Challenges_WebAuthN | PlainMessage<Challenges_WebAuthN> | undefined): boolean {
    return proto3.util.equals(Challenges_WebAuthN, a, b);
  }
}

