// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/management.proto (package zitadel.management.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Duration, Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";
import { AccessTokenType, AuthFactor, Email, Gender, Membership, MembershipQuery, PersonalAccessToken, Phone, Profile, SearchQuery, User, UserFieldName, UserGrant, UserGrantQuery, WebAuthNToken } from "./user_pb.js";
import { ListDetails, ListQuery, ObjectDetails } from "./object_pb.js";
import { Change, ChangeQuery } from "./change_pb.js";
import { Metadata, MetadataQuery } from "./metadata_pb.js";
import { Key, KeyType } from "./auth_n_key_pb.js";
import { AzureADTenant, IDP, IDPFieldName, IDPIDQuery, IDPLoginPolicyLink, IDPNameQuery, IDPOwnerType, IDPOwnerTypeQuery, IDPStylingType, IDPUserLink, LDAPAttributes, OIDCMappingField, Options, Provider, SAMLBinding, SAMLNameIDFormat } from "./idp_pb.js";
import { Domain, DomainSearchQuery, DomainValidationType, Org } from "./org_pb.js";
import { Member, SearchQuery as SearchQuery$1 } from "./member_pb.js";
import { AllProjectGrantQuery, GrantedProject, PrivateLabelingSetting, Project, ProjectGrantQuery, ProjectQuery, Role, RoleQuery } from "./project_pb.js";
import { APIAuthMethodType, App, AppQuery, OIDCAppType, OIDCAuthMethodType, OIDCGrantType, OIDCResponseType, OIDCTokenType, OIDCVersion } from "./app_pb.js";
import { LocalizedMessage } from "./message_pb.js";
import { DomainPolicy, LabelPolicy, LockoutPolicy, LoginPolicy, MultiFactorType, NotificationPolicy, OrgIAMPolicy, PasswordAgePolicy, PasswordComplexityPolicy, PasswordlessType, PrivacyPolicy, SecondFactorType, ThemeMode } from "./policy_pb.js";
import { EmailVerificationDoneScreenText, EmailVerificationScreenText, ExternalRegistrationUserOverviewScreenText, ExternalUserNotFoundScreenText, FooterText, InitializeUserDoneScreenText, InitializeUserScreenText, InitMFADoneScreenText, InitMFAOTPScreenText, InitMFAPromptScreenText, InitMFAU2FScreenText, InitPasswordDoneScreenText, InitPasswordScreenText, LinkingUserDoneScreenText, LinkingUserPromptScreenText, LoginCustomText, LoginScreenText, LogoutDoneScreenText, MessageCustomText, MFAProvidersText, PasswordChangeDoneScreenText, PasswordChangeScreenText, PasswordlessPromptScreenText, PasswordlessRegistrationDoneScreenText, PasswordlessRegistrationScreenText, PasswordlessScreenText, PasswordResetDoneScreenText, PasswordScreenText, RegistrationOptionScreenText, RegistrationOrgScreenText, RegistrationUserScreenText, SelectAccountScreenText, SuccessLoginScreenText, UsernameChangeDoneScreenText, UsernameChangeScreenText, VerifyMFAOTPScreenText, VerifyMFAU2FScreenText } from "./text_pb.js";
import { Action, ActionFieldName, ActionIDQuery, ActionNameQuery, ActionStateQuery, Flow, FlowType, TriggerType } from "./action_pb.js";

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.HealthzRequest
 */
export class HealthzRequest extends Message<HealthzRequest> {
  constructor(data?: PartialMessage<HealthzRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.HealthzRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HealthzRequest {
    return new HealthzRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HealthzRequest {
    return new HealthzRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HealthzRequest {
    return new HealthzRequest().fromJsonString(jsonString, options);
  }

  static equals(a: HealthzRequest | PlainMessage<HealthzRequest> | undefined, b: HealthzRequest | PlainMessage<HealthzRequest> | undefined): boolean {
    return proto3.util.equals(HealthzRequest, a, b);
  }
}

/**
 * This is an empty response
 *
 * @generated from message zitadel.management.v1.HealthzResponse
 */
export class HealthzResponse extends Message<HealthzResponse> {
  constructor(data?: PartialMessage<HealthzResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.HealthzResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HealthzResponse {
    return new HealthzResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HealthzResponse {
    return new HealthzResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HealthzResponse {
    return new HealthzResponse().fromJsonString(jsonString, options);
  }

  static equals(a: HealthzResponse | PlainMessage<HealthzResponse> | undefined, b: HealthzResponse | PlainMessage<HealthzResponse> | undefined): boolean {
    return proto3.util.equals(HealthzResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetOIDCInformationRequest
 */
export class GetOIDCInformationRequest extends Message<GetOIDCInformationRequest> {
  constructor(data?: PartialMessage<GetOIDCInformationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetOIDCInformationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOIDCInformationRequest {
    return new GetOIDCInformationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOIDCInformationRequest {
    return new GetOIDCInformationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOIDCInformationRequest {
    return new GetOIDCInformationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOIDCInformationRequest | PlainMessage<GetOIDCInformationRequest> | undefined, b: GetOIDCInformationRequest | PlainMessage<GetOIDCInformationRequest> | undefined): boolean {
    return proto3.util.equals(GetOIDCInformationRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetOIDCInformationResponse
 */
export class GetOIDCInformationResponse extends Message<GetOIDCInformationResponse> {
  /**
   * @generated from field: string issuer = 1;
   */
  issuer = "";

  /**
   * @generated from field: string discovery_endpoint = 2;
   */
  discoveryEndpoint = "";

  constructor(data?: PartialMessage<GetOIDCInformationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetOIDCInformationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "discovery_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOIDCInformationResponse {
    return new GetOIDCInformationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOIDCInformationResponse {
    return new GetOIDCInformationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOIDCInformationResponse {
    return new GetOIDCInformationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOIDCInformationResponse | PlainMessage<GetOIDCInformationResponse> | undefined, b: GetOIDCInformationResponse | PlainMessage<GetOIDCInformationResponse> | undefined): boolean {
    return proto3.util.equals(GetOIDCInformationResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetIAMRequest
 */
export class GetIAMRequest extends Message<GetIAMRequest> {
  constructor(data?: PartialMessage<GetIAMRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetIAMRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetIAMRequest {
    return new GetIAMRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetIAMRequest {
    return new GetIAMRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetIAMRequest {
    return new GetIAMRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetIAMRequest | PlainMessage<GetIAMRequest> | undefined, b: GetIAMRequest | PlainMessage<GetIAMRequest> | undefined): boolean {
    return proto3.util.equals(GetIAMRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetIAMResponse
 */
export class GetIAMResponse extends Message<GetIAMResponse> {
  /**
   * deprecated: use default_org_id instead
   *
   * @generated from field: string global_org_id = 1;
   */
  globalOrgId = "";

  /**
   * @generated from field: string iam_project_id = 2;
   */
  iamProjectId = "";

  /**
   * @generated from field: string default_org_id = 3;
   */
  defaultOrgId = "";

  constructor(data?: PartialMessage<GetIAMResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetIAMResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "global_org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "iam_project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "default_org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetIAMResponse {
    return new GetIAMResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetIAMResponse {
    return new GetIAMResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetIAMResponse {
    return new GetIAMResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetIAMResponse | PlainMessage<GetIAMResponse> | undefined, b: GetIAMResponse | PlainMessage<GetIAMResponse> | undefined): boolean {
    return proto3.util.equals(GetIAMResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetSupportedLanguagesRequest
 */
export class GetSupportedLanguagesRequest extends Message<GetSupportedLanguagesRequest> {
  constructor(data?: PartialMessage<GetSupportedLanguagesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetSupportedLanguagesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSupportedLanguagesRequest {
    return new GetSupportedLanguagesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSupportedLanguagesRequest {
    return new GetSupportedLanguagesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSupportedLanguagesRequest {
    return new GetSupportedLanguagesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSupportedLanguagesRequest | PlainMessage<GetSupportedLanguagesRequest> | undefined, b: GetSupportedLanguagesRequest | PlainMessage<GetSupportedLanguagesRequest> | undefined): boolean {
    return proto3.util.equals(GetSupportedLanguagesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetSupportedLanguagesResponse
 */
export class GetSupportedLanguagesResponse extends Message<GetSupportedLanguagesResponse> {
  /**
   * @generated from field: repeated string languages = 1;
   */
  languages: string[] = [];

  constructor(data?: PartialMessage<GetSupportedLanguagesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetSupportedLanguagesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "languages", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSupportedLanguagesResponse {
    return new GetSupportedLanguagesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSupportedLanguagesResponse {
    return new GetSupportedLanguagesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSupportedLanguagesResponse {
    return new GetSupportedLanguagesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSupportedLanguagesResponse | PlainMessage<GetSupportedLanguagesResponse> | undefined, b: GetSupportedLanguagesResponse | PlainMessage<GetSupportedLanguagesResponse> | undefined): boolean {
    return proto3.util.equals(GetSupportedLanguagesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetUserByIDRequest
 */
export class GetUserByIDRequest extends Message<GetUserByIDRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetUserByIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetUserByIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserByIDRequest {
    return new GetUserByIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserByIDRequest {
    return new GetUserByIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserByIDRequest {
    return new GetUserByIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserByIDRequest | PlainMessage<GetUserByIDRequest> | undefined, b: GetUserByIDRequest | PlainMessage<GetUserByIDRequest> | undefined): boolean {
    return proto3.util.equals(GetUserByIDRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetUserByIDResponse
 */
export class GetUserByIDResponse extends Message<GetUserByIDResponse> {
  /**
   * @generated from field: zitadel.user.v1.User user = 1;
   */
  user?: User;

  constructor(data?: PartialMessage<GetUserByIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetUserByIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserByIDResponse {
    return new GetUserByIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserByIDResponse {
    return new GetUserByIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserByIDResponse {
    return new GetUserByIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserByIDResponse | PlainMessage<GetUserByIDResponse> | undefined, b: GetUserByIDResponse | PlainMessage<GetUserByIDResponse> | undefined): boolean {
    return proto3.util.equals(GetUserByIDResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetUserByLoginNameGlobalRequest
 */
export class GetUserByLoginNameGlobalRequest extends Message<GetUserByLoginNameGlobalRequest> {
  /**
   * @generated from field: string login_name = 1;
   */
  loginName = "";

  constructor(data?: PartialMessage<GetUserByLoginNameGlobalRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetUserByLoginNameGlobalRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "login_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserByLoginNameGlobalRequest {
    return new GetUserByLoginNameGlobalRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserByLoginNameGlobalRequest {
    return new GetUserByLoginNameGlobalRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserByLoginNameGlobalRequest {
    return new GetUserByLoginNameGlobalRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserByLoginNameGlobalRequest | PlainMessage<GetUserByLoginNameGlobalRequest> | undefined, b: GetUserByLoginNameGlobalRequest | PlainMessage<GetUserByLoginNameGlobalRequest> | undefined): boolean {
    return proto3.util.equals(GetUserByLoginNameGlobalRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetUserByLoginNameGlobalResponse
 */
export class GetUserByLoginNameGlobalResponse extends Message<GetUserByLoginNameGlobalResponse> {
  /**
   * @generated from field: zitadel.user.v1.User user = 1;
   */
  user?: User;

  constructor(data?: PartialMessage<GetUserByLoginNameGlobalResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetUserByLoginNameGlobalResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserByLoginNameGlobalResponse {
    return new GetUserByLoginNameGlobalResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserByLoginNameGlobalResponse {
    return new GetUserByLoginNameGlobalResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserByLoginNameGlobalResponse {
    return new GetUserByLoginNameGlobalResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserByLoginNameGlobalResponse | PlainMessage<GetUserByLoginNameGlobalResponse> | undefined, b: GetUserByLoginNameGlobalResponse | PlainMessage<GetUserByLoginNameGlobalResponse> | undefined): boolean {
    return proto3.util.equals(GetUserByLoginNameGlobalResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListUsersRequest
 */
export class ListUsersRequest extends Message<ListUsersRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.user.v1.UserFieldName sorting_column = 2;
   */
  sortingColumn = UserFieldName.UNSPECIFIED;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.user.v1.SearchQuery queries = 3;
   */
  queries: SearchQuery[] = [];

  constructor(data?: PartialMessage<ListUsersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListUsersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(UserFieldName) },
    { no: 3, name: "queries", kind: "message", T: SearchQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersRequest {
    return new ListUsersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersRequest {
    return new ListUsersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersRequest {
    return new ListUsersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListUsersRequest | PlainMessage<ListUsersRequest> | undefined, b: ListUsersRequest | PlainMessage<ListUsersRequest> | undefined): boolean {
    return proto3.util.equals(ListUsersRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListUsersResponse
 */
export class ListUsersResponse extends Message<ListUsersResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: zitadel.user.v1.UserFieldName sorting_column = 2;
   */
  sortingColumn = UserFieldName.UNSPECIFIED;

  /**
   * @generated from field: repeated zitadel.user.v1.User result = 3;
   */
  result: User[] = [];

  constructor(data?: PartialMessage<ListUsersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListUsersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(UserFieldName) },
    { no: 3, name: "result", kind: "message", T: User, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined, b: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined): boolean {
    return proto3.util.equals(ListUsersResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListUserChangesRequest
 */
export class ListUserChangesRequest extends Message<ListUserChangesRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.change.v1.ChangeQuery query = 1;
   */
  query?: ChangeQuery;

  /**
   * @generated from field: string user_id = 2;
   */
  userId = "";

  constructor(data?: PartialMessage<ListUserChangesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListUserChangesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ChangeQuery },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUserChangesRequest {
    return new ListUserChangesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUserChangesRequest {
    return new ListUserChangesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUserChangesRequest {
    return new ListUserChangesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListUserChangesRequest | PlainMessage<ListUserChangesRequest> | undefined, b: ListUserChangesRequest | PlainMessage<ListUserChangesRequest> | undefined): boolean {
    return proto3.util.equals(ListUserChangesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListUserChangesResponse
 */
export class ListUserChangesResponse extends Message<ListUserChangesResponse> {
  /**
   * zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary info)
   *
   * @generated from field: repeated zitadel.change.v1.Change result = 2;
   */
  result: Change[] = [];

  constructor(data?: PartialMessage<ListUserChangesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListUserChangesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "result", kind: "message", T: Change, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUserChangesResponse {
    return new ListUserChangesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUserChangesResponse {
    return new ListUserChangesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUserChangesResponse {
    return new ListUserChangesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListUserChangesResponse | PlainMessage<ListUserChangesResponse> | undefined, b: ListUserChangesResponse | PlainMessage<ListUserChangesResponse> | undefined): boolean {
    return proto3.util.equals(ListUserChangesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.IsUserUniqueRequest
 */
export class IsUserUniqueRequest extends Message<IsUserUniqueRequest> {
  /**
   * @generated from field: string user_name = 1;
   */
  userName = "";

  /**
   * @generated from field: string email = 2;
   */
  email = "";

  constructor(data?: PartialMessage<IsUserUniqueRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.IsUserUniqueRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsUserUniqueRequest {
    return new IsUserUniqueRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsUserUniqueRequest {
    return new IsUserUniqueRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsUserUniqueRequest {
    return new IsUserUniqueRequest().fromJsonString(jsonString, options);
  }

  static equals(a: IsUserUniqueRequest | PlainMessage<IsUserUniqueRequest> | undefined, b: IsUserUniqueRequest | PlainMessage<IsUserUniqueRequest> | undefined): boolean {
    return proto3.util.equals(IsUserUniqueRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.IsUserUniqueResponse
 */
export class IsUserUniqueResponse extends Message<IsUserUniqueResponse> {
  /**
   * @generated from field: bool is_unique = 1;
   */
  isUnique = false;

  constructor(data?: PartialMessage<IsUserUniqueResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.IsUserUniqueResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_unique", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsUserUniqueResponse {
    return new IsUserUniqueResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsUserUniqueResponse {
    return new IsUserUniqueResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsUserUniqueResponse {
    return new IsUserUniqueResponse().fromJsonString(jsonString, options);
  }

  static equals(a: IsUserUniqueResponse | PlainMessage<IsUserUniqueResponse> | undefined, b: IsUserUniqueResponse | PlainMessage<IsUserUniqueResponse> | undefined): boolean {
    return proto3.util.equals(IsUserUniqueResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddHumanUserRequest
 */
export class AddHumanUserRequest extends Message<AddHumanUserRequest> {
  /**
   * @generated from field: string user_name = 1;
   */
  userName = "";

  /**
   * @generated from field: zitadel.management.v1.AddHumanUserRequest.Profile profile = 2;
   */
  profile?: AddHumanUserRequest_Profile;

  /**
   * @generated from field: zitadel.management.v1.AddHumanUserRequest.Email email = 3;
   */
  email?: AddHumanUserRequest_Email;

  /**
   * @generated from field: zitadel.management.v1.AddHumanUserRequest.Phone phone = 4;
   */
  phone?: AddHumanUserRequest_Phone;

  /**
   * @generated from field: string initial_password = 5;
   */
  initialPassword = "";

  constructor(data?: PartialMessage<AddHumanUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddHumanUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "profile", kind: "message", T: AddHumanUserRequest_Profile },
    { no: 3, name: "email", kind: "message", T: AddHumanUserRequest_Email },
    { no: 4, name: "phone", kind: "message", T: AddHumanUserRequest_Phone },
    { no: 5, name: "initial_password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddHumanUserRequest {
    return new AddHumanUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddHumanUserRequest {
    return new AddHumanUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddHumanUserRequest {
    return new AddHumanUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddHumanUserRequest | PlainMessage<AddHumanUserRequest> | undefined, b: AddHumanUserRequest | PlainMessage<AddHumanUserRequest> | undefined): boolean {
    return proto3.util.equals(AddHumanUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddHumanUserRequest.Profile
 */
export class AddHumanUserRequest_Profile extends Message<AddHumanUserRequest_Profile> {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName = "";

  /**
   * @generated from field: string last_name = 2;
   */
  lastName = "";

  /**
   * @generated from field: string nick_name = 3;
   */
  nickName = "";

  /**
   * @generated from field: string display_name = 4;
   */
  displayName = "";

  /**
   * @generated from field: string preferred_language = 5;
   */
  preferredLanguage = "";

  /**
   * @generated from field: zitadel.user.v1.Gender gender = 6;
   */
  gender = Gender.UNSPECIFIED;

  constructor(data?: PartialMessage<AddHumanUserRequest_Profile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddHumanUserRequest.Profile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "nick_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "preferred_language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "gender", kind: "enum", T: proto3.getEnumType(Gender) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddHumanUserRequest_Profile {
    return new AddHumanUserRequest_Profile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddHumanUserRequest_Profile {
    return new AddHumanUserRequest_Profile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddHumanUserRequest_Profile {
    return new AddHumanUserRequest_Profile().fromJsonString(jsonString, options);
  }

  static equals(a: AddHumanUserRequest_Profile | PlainMessage<AddHumanUserRequest_Profile> | undefined, b: AddHumanUserRequest_Profile | PlainMessage<AddHumanUserRequest_Profile> | undefined): boolean {
    return proto3.util.equals(AddHumanUserRequest_Profile, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddHumanUserRequest.Email
 */
export class AddHumanUserRequest_Email extends Message<AddHumanUserRequest_Email> {
  /**
   * @generated from field: string email = 1;
   */
  email = "";

  /**
   * @generated from field: bool is_email_verified = 2;
   */
  isEmailVerified = false;

  constructor(data?: PartialMessage<AddHumanUserRequest_Email>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddHumanUserRequest.Email";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "is_email_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddHumanUserRequest_Email {
    return new AddHumanUserRequest_Email().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddHumanUserRequest_Email {
    return new AddHumanUserRequest_Email().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddHumanUserRequest_Email {
    return new AddHumanUserRequest_Email().fromJsonString(jsonString, options);
  }

  static equals(a: AddHumanUserRequest_Email | PlainMessage<AddHumanUserRequest_Email> | undefined, b: AddHumanUserRequest_Email | PlainMessage<AddHumanUserRequest_Email> | undefined): boolean {
    return proto3.util.equals(AddHumanUserRequest_Email, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddHumanUserRequest.Phone
 */
export class AddHumanUserRequest_Phone extends Message<AddHumanUserRequest_Phone> {
  /**
   * has to be a global number
   *
   * @generated from field: string phone = 1;
   */
  phone = "";

  /**
   * @generated from field: bool is_phone_verified = 2;
   */
  isPhoneVerified = false;

  constructor(data?: PartialMessage<AddHumanUserRequest_Phone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddHumanUserRequest.Phone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "is_phone_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddHumanUserRequest_Phone {
    return new AddHumanUserRequest_Phone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddHumanUserRequest_Phone {
    return new AddHumanUserRequest_Phone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddHumanUserRequest_Phone {
    return new AddHumanUserRequest_Phone().fromJsonString(jsonString, options);
  }

  static equals(a: AddHumanUserRequest_Phone | PlainMessage<AddHumanUserRequest_Phone> | undefined, b: AddHumanUserRequest_Phone | PlainMessage<AddHumanUserRequest_Phone> | undefined): boolean {
    return proto3.util.equals(AddHumanUserRequest_Phone, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddHumanUserResponse
 */
export class AddHumanUserResponse extends Message<AddHumanUserResponse> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddHumanUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddHumanUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddHumanUserResponse {
    return new AddHumanUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddHumanUserResponse {
    return new AddHumanUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddHumanUserResponse {
    return new AddHumanUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddHumanUserResponse | PlainMessage<AddHumanUserResponse> | undefined, b: AddHumanUserResponse | PlainMessage<AddHumanUserResponse> | undefined): boolean {
    return proto3.util.equals(AddHumanUserResponse, a, b);
  }
}

/**
 * Describe my Import Human User Request
 *
 * @generated from message zitadel.management.v1.ImportHumanUserRequest
 */
export class ImportHumanUserRequest extends Message<ImportHumanUserRequest> {
  /**
   * @generated from field: string user_name = 1;
   */
  userName = "";

  /**
   * @generated from field: zitadel.management.v1.ImportHumanUserRequest.Profile profile = 2;
   */
  profile?: ImportHumanUserRequest_Profile;

  /**
   * @generated from field: zitadel.management.v1.ImportHumanUserRequest.Email email = 3;
   */
  email?: ImportHumanUserRequest_Email;

  /**
   * @generated from field: zitadel.management.v1.ImportHumanUserRequest.Phone phone = 4;
   */
  phone?: ImportHumanUserRequest_Phone;

  /**
   * @generated from field: string password = 5;
   */
  password = "";

  /**
   * @generated from field: zitadel.management.v1.ImportHumanUserRequest.HashedPassword hashed_password = 6;
   */
  hashedPassword?: ImportHumanUserRequest_HashedPassword;

  /**
   * @generated from field: bool password_change_required = 7;
   */
  passwordChangeRequired = false;

  /**
   * @generated from field: bool request_passwordless_registration = 8;
   */
  requestPasswordlessRegistration = false;

  /**
   * @generated from field: string otp_code = 9;
   */
  otpCode = "";

  /**
   * @generated from field: repeated zitadel.management.v1.ImportHumanUserRequest.IDP idps = 10;
   */
  idps: ImportHumanUserRequest_IDP[] = [];

  constructor(data?: PartialMessage<ImportHumanUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ImportHumanUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "profile", kind: "message", T: ImportHumanUserRequest_Profile },
    { no: 3, name: "email", kind: "message", T: ImportHumanUserRequest_Email },
    { no: 4, name: "phone", kind: "message", T: ImportHumanUserRequest_Phone },
    { no: 5, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "hashed_password", kind: "message", T: ImportHumanUserRequest_HashedPassword },
    { no: 7, name: "password_change_required", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "request_passwordless_registration", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "otp_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "idps", kind: "message", T: ImportHumanUserRequest_IDP, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportHumanUserRequest {
    return new ImportHumanUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportHumanUserRequest {
    return new ImportHumanUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportHumanUserRequest {
    return new ImportHumanUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ImportHumanUserRequest | PlainMessage<ImportHumanUserRequest> | undefined, b: ImportHumanUserRequest | PlainMessage<ImportHumanUserRequest> | undefined): boolean {
    return proto3.util.equals(ImportHumanUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ImportHumanUserRequest.Profile
 */
export class ImportHumanUserRequest_Profile extends Message<ImportHumanUserRequest_Profile> {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName = "";

  /**
   * @generated from field: string last_name = 2;
   */
  lastName = "";

  /**
   * @generated from field: string nick_name = 3;
   */
  nickName = "";

  /**
   * @generated from field: string display_name = 4;
   */
  displayName = "";

  /**
   * @generated from field: string preferred_language = 5;
   */
  preferredLanguage = "";

  /**
   * @generated from field: zitadel.user.v1.Gender gender = 6;
   */
  gender = Gender.UNSPECIFIED;

  constructor(data?: PartialMessage<ImportHumanUserRequest_Profile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ImportHumanUserRequest.Profile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "nick_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "preferred_language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "gender", kind: "enum", T: proto3.getEnumType(Gender) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportHumanUserRequest_Profile {
    return new ImportHumanUserRequest_Profile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportHumanUserRequest_Profile {
    return new ImportHumanUserRequest_Profile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportHumanUserRequest_Profile {
    return new ImportHumanUserRequest_Profile().fromJsonString(jsonString, options);
  }

  static equals(a: ImportHumanUserRequest_Profile | PlainMessage<ImportHumanUserRequest_Profile> | undefined, b: ImportHumanUserRequest_Profile | PlainMessage<ImportHumanUserRequest_Profile> | undefined): boolean {
    return proto3.util.equals(ImportHumanUserRequest_Profile, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ImportHumanUserRequest.Email
 */
export class ImportHumanUserRequest_Email extends Message<ImportHumanUserRequest_Email> {
  /**
   * @generated from field: string email = 1;
   */
  email = "";

  /**
   * @generated from field: bool is_email_verified = 2;
   */
  isEmailVerified = false;

  constructor(data?: PartialMessage<ImportHumanUserRequest_Email>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ImportHumanUserRequest.Email";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "is_email_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportHumanUserRequest_Email {
    return new ImportHumanUserRequest_Email().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportHumanUserRequest_Email {
    return new ImportHumanUserRequest_Email().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportHumanUserRequest_Email {
    return new ImportHumanUserRequest_Email().fromJsonString(jsonString, options);
  }

  static equals(a: ImportHumanUserRequest_Email | PlainMessage<ImportHumanUserRequest_Email> | undefined, b: ImportHumanUserRequest_Email | PlainMessage<ImportHumanUserRequest_Email> | undefined): boolean {
    return proto3.util.equals(ImportHumanUserRequest_Email, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ImportHumanUserRequest.Phone
 */
export class ImportHumanUserRequest_Phone extends Message<ImportHumanUserRequest_Phone> {
  /**
   * @generated from field: string phone = 1;
   */
  phone = "";

  /**
   * @generated from field: bool is_phone_verified = 2;
   */
  isPhoneVerified = false;

  constructor(data?: PartialMessage<ImportHumanUserRequest_Phone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ImportHumanUserRequest.Phone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "is_phone_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportHumanUserRequest_Phone {
    return new ImportHumanUserRequest_Phone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportHumanUserRequest_Phone {
    return new ImportHumanUserRequest_Phone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportHumanUserRequest_Phone {
    return new ImportHumanUserRequest_Phone().fromJsonString(jsonString, options);
  }

  static equals(a: ImportHumanUserRequest_Phone | PlainMessage<ImportHumanUserRequest_Phone> | undefined, b: ImportHumanUserRequest_Phone | PlainMessage<ImportHumanUserRequest_Phone> | undefined): boolean {
    return proto3.util.equals(ImportHumanUserRequest_Phone, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ImportHumanUserRequest.HashedPassword
 */
export class ImportHumanUserRequest_HashedPassword extends Message<ImportHumanUserRequest_HashedPassword> {
  /**
   * @generated from field: string value = 1;
   */
  value = "";

  constructor(data?: PartialMessage<ImportHumanUserRequest_HashedPassword>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ImportHumanUserRequest.HashedPassword";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportHumanUserRequest_HashedPassword {
    return new ImportHumanUserRequest_HashedPassword().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportHumanUserRequest_HashedPassword {
    return new ImportHumanUserRequest_HashedPassword().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportHumanUserRequest_HashedPassword {
    return new ImportHumanUserRequest_HashedPassword().fromJsonString(jsonString, options);
  }

  static equals(a: ImportHumanUserRequest_HashedPassword | PlainMessage<ImportHumanUserRequest_HashedPassword> | undefined, b: ImportHumanUserRequest_HashedPassword | PlainMessage<ImportHumanUserRequest_HashedPassword> | undefined): boolean {
    return proto3.util.equals(ImportHumanUserRequest_HashedPassword, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ImportHumanUserRequest.IDP
 */
export class ImportHumanUserRequest_IDP extends Message<ImportHumanUserRequest_IDP> {
  /**
   * @generated from field: string config_id = 1;
   */
  configId = "";

  /**
   * @generated from field: string external_user_id = 2;
   */
  externalUserId = "";

  /**
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  constructor(data?: PartialMessage<ImportHumanUserRequest_IDP>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ImportHumanUserRequest.IDP";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "config_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "external_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportHumanUserRequest_IDP {
    return new ImportHumanUserRequest_IDP().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportHumanUserRequest_IDP {
    return new ImportHumanUserRequest_IDP().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportHumanUserRequest_IDP {
    return new ImportHumanUserRequest_IDP().fromJsonString(jsonString, options);
  }

  static equals(a: ImportHumanUserRequest_IDP | PlainMessage<ImportHumanUserRequest_IDP> | undefined, b: ImportHumanUserRequest_IDP | PlainMessage<ImportHumanUserRequest_IDP> | undefined): boolean {
    return proto3.util.equals(ImportHumanUserRequest_IDP, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ImportHumanUserResponse
 */
export class ImportHumanUserResponse extends Message<ImportHumanUserResponse> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.management.v1.ImportHumanUserResponse.PasswordlessRegistration passwordless_registration = 3;
   */
  passwordlessRegistration?: ImportHumanUserResponse_PasswordlessRegistration;

  constructor(data?: PartialMessage<ImportHumanUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ImportHumanUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
    { no: 3, name: "passwordless_registration", kind: "message", T: ImportHumanUserResponse_PasswordlessRegistration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportHumanUserResponse {
    return new ImportHumanUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportHumanUserResponse {
    return new ImportHumanUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportHumanUserResponse {
    return new ImportHumanUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ImportHumanUserResponse | PlainMessage<ImportHumanUserResponse> | undefined, b: ImportHumanUserResponse | PlainMessage<ImportHumanUserResponse> | undefined): boolean {
    return proto3.util.equals(ImportHumanUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ImportHumanUserResponse.PasswordlessRegistration
 */
export class ImportHumanUserResponse_PasswordlessRegistration extends Message<ImportHumanUserResponse_PasswordlessRegistration> {
  /**
   * @generated from field: string link = 1;
   */
  link = "";

  /**
   * deprecated: use expiration instead
   *
   * @generated from field: google.protobuf.Duration lifetime = 2;
   */
  lifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration expiration = 3;
   */
  expiration?: Duration;

  constructor(data?: PartialMessage<ImportHumanUserResponse_PasswordlessRegistration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ImportHumanUserResponse.PasswordlessRegistration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "lifetime", kind: "message", T: Duration },
    { no: 3, name: "expiration", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportHumanUserResponse_PasswordlessRegistration {
    return new ImportHumanUserResponse_PasswordlessRegistration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportHumanUserResponse_PasswordlessRegistration {
    return new ImportHumanUserResponse_PasswordlessRegistration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportHumanUserResponse_PasswordlessRegistration {
    return new ImportHumanUserResponse_PasswordlessRegistration().fromJsonString(jsonString, options);
  }

  static equals(a: ImportHumanUserResponse_PasswordlessRegistration | PlainMessage<ImportHumanUserResponse_PasswordlessRegistration> | undefined, b: ImportHumanUserResponse_PasswordlessRegistration | PlainMessage<ImportHumanUserResponse_PasswordlessRegistration> | undefined): boolean {
    return proto3.util.equals(ImportHumanUserResponse_PasswordlessRegistration, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddMachineUserRequest
 */
export class AddMachineUserRequest extends Message<AddMachineUserRequest> {
  /**
   * @generated from field: string user_name = 1;
   */
  userName = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: zitadel.user.v1.AccessTokenType access_token_type = 4;
   */
  accessTokenType = AccessTokenType.BEARER;

  constructor(data?: PartialMessage<AddMachineUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddMachineUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "access_token_type", kind: "enum", T: proto3.getEnumType(AccessTokenType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMachineUserRequest {
    return new AddMachineUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMachineUserRequest {
    return new AddMachineUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMachineUserRequest {
    return new AddMachineUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddMachineUserRequest | PlainMessage<AddMachineUserRequest> | undefined, b: AddMachineUserRequest | PlainMessage<AddMachineUserRequest> | undefined): boolean {
    return proto3.util.equals(AddMachineUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddMachineUserResponse
 */
export class AddMachineUserResponse extends Message<AddMachineUserResponse> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddMachineUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddMachineUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMachineUserResponse {
    return new AddMachineUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMachineUserResponse {
    return new AddMachineUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMachineUserResponse {
    return new AddMachineUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddMachineUserResponse | PlainMessage<AddMachineUserResponse> | undefined, b: AddMachineUserResponse | PlainMessage<AddMachineUserResponse> | undefined): boolean {
    return proto3.util.equals(AddMachineUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateUserRequest
 */
export class DeactivateUserRequest extends Message<DeactivateUserRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeactivateUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateUserRequest {
    return new DeactivateUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateUserRequest {
    return new DeactivateUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateUserRequest {
    return new DeactivateUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateUserRequest | PlainMessage<DeactivateUserRequest> | undefined, b: DeactivateUserRequest | PlainMessage<DeactivateUserRequest> | undefined): boolean {
    return proto3.util.equals(DeactivateUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateUserResponse
 */
export class DeactivateUserResponse extends Message<DeactivateUserResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<DeactivateUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateUserResponse {
    return new DeactivateUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateUserResponse {
    return new DeactivateUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateUserResponse {
    return new DeactivateUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateUserResponse | PlainMessage<DeactivateUserResponse> | undefined, b: DeactivateUserResponse | PlainMessage<DeactivateUserResponse> | undefined): boolean {
    return proto3.util.equals(DeactivateUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateUserRequest
 */
export class ReactivateUserRequest extends Message<ReactivateUserRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<ReactivateUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateUserRequest {
    return new ReactivateUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateUserRequest {
    return new ReactivateUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateUserRequest {
    return new ReactivateUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateUserRequest | PlainMessage<ReactivateUserRequest> | undefined, b: ReactivateUserRequest | PlainMessage<ReactivateUserRequest> | undefined): boolean {
    return proto3.util.equals(ReactivateUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateUserResponse
 */
export class ReactivateUserResponse extends Message<ReactivateUserResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ReactivateUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateUserResponse {
    return new ReactivateUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateUserResponse {
    return new ReactivateUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateUserResponse {
    return new ReactivateUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateUserResponse | PlainMessage<ReactivateUserResponse> | undefined, b: ReactivateUserResponse | PlainMessage<ReactivateUserResponse> | undefined): boolean {
    return proto3.util.equals(ReactivateUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.LockUserRequest
 */
export class LockUserRequest extends Message<LockUserRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<LockUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.LockUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LockUserRequest {
    return new LockUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LockUserRequest {
    return new LockUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LockUserRequest {
    return new LockUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: LockUserRequest | PlainMessage<LockUserRequest> | undefined, b: LockUserRequest | PlainMessage<LockUserRequest> | undefined): boolean {
    return proto3.util.equals(LockUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.LockUserResponse
 */
export class LockUserResponse extends Message<LockUserResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<LockUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.LockUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LockUserResponse {
    return new LockUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LockUserResponse {
    return new LockUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LockUserResponse {
    return new LockUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: LockUserResponse | PlainMessage<LockUserResponse> | undefined, b: LockUserResponse | PlainMessage<LockUserResponse> | undefined): boolean {
    return proto3.util.equals(LockUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UnlockUserRequest
 */
export class UnlockUserRequest extends Message<UnlockUserRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<UnlockUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UnlockUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnlockUserRequest {
    return new UnlockUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnlockUserRequest {
    return new UnlockUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnlockUserRequest {
    return new UnlockUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UnlockUserRequest | PlainMessage<UnlockUserRequest> | undefined, b: UnlockUserRequest | PlainMessage<UnlockUserRequest> | undefined): boolean {
    return proto3.util.equals(UnlockUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UnlockUserResponse
 */
export class UnlockUserResponse extends Message<UnlockUserResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UnlockUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UnlockUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnlockUserResponse {
    return new UnlockUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnlockUserResponse {
    return new UnlockUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnlockUserResponse {
    return new UnlockUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UnlockUserResponse | PlainMessage<UnlockUserResponse> | undefined, b: UnlockUserResponse | PlainMessage<UnlockUserResponse> | undefined): boolean {
    return proto3.util.equals(UnlockUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveUserRequest
 */
export class RemoveUserRequest extends Message<RemoveUserRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<RemoveUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveUserRequest {
    return new RemoveUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveUserRequest {
    return new RemoveUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveUserRequest {
    return new RemoveUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveUserRequest | PlainMessage<RemoveUserRequest> | undefined, b: RemoveUserRequest | PlainMessage<RemoveUserRequest> | undefined): boolean {
    return proto3.util.equals(RemoveUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveUserResponse
 */
export class RemoveUserResponse extends Message<RemoveUserResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveUserResponse {
    return new RemoveUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveUserResponse {
    return new RemoveUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveUserResponse {
    return new RemoveUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveUserResponse | PlainMessage<RemoveUserResponse> | undefined, b: RemoveUserResponse | PlainMessage<RemoveUserResponse> | undefined): boolean {
    return proto3.util.equals(RemoveUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateUserNameRequest
 */
export class UpdateUserNameRequest extends Message<UpdateUserNameRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string user_name = 2;
   */
  userName = "";

  constructor(data?: PartialMessage<UpdateUserNameRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateUserNameRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserNameRequest {
    return new UpdateUserNameRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserNameRequest {
    return new UpdateUserNameRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserNameRequest {
    return new UpdateUserNameRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserNameRequest | PlainMessage<UpdateUserNameRequest> | undefined, b: UpdateUserNameRequest | PlainMessage<UpdateUserNameRequest> | undefined): boolean {
    return proto3.util.equals(UpdateUserNameRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateUserNameResponse
 */
export class UpdateUserNameResponse extends Message<UpdateUserNameResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateUserNameResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateUserNameResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserNameResponse {
    return new UpdateUserNameResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserNameResponse {
    return new UpdateUserNameResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserNameResponse {
    return new UpdateUserNameResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserNameResponse | PlainMessage<UpdateUserNameResponse> | undefined, b: UpdateUserNameResponse | PlainMessage<UpdateUserNameResponse> | undefined): boolean {
    return proto3.util.equals(UpdateUserNameResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListUserMetadataRequest
 */
export class ListUserMetadataRequest extends Message<ListUserMetadataRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: zitadel.v1.ListQuery query = 2;
   */
  query?: ListQuery;

  /**
   * @generated from field: repeated zitadel.metadata.v1.MetadataQuery queries = 3;
   */
  queries: MetadataQuery[] = [];

  constructor(data?: PartialMessage<ListUserMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListUserMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "query", kind: "message", T: ListQuery },
    { no: 3, name: "queries", kind: "message", T: MetadataQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUserMetadataRequest {
    return new ListUserMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUserMetadataRequest {
    return new ListUserMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUserMetadataRequest {
    return new ListUserMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListUserMetadataRequest | PlainMessage<ListUserMetadataRequest> | undefined, b: ListUserMetadataRequest | PlainMessage<ListUserMetadataRequest> | undefined): boolean {
    return proto3.util.equals(ListUserMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListUserMetadataResponse
 */
export class ListUserMetadataResponse extends Message<ListUserMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.metadata.v1.Metadata result = 2;
   */
  result: Metadata[] = [];

  constructor(data?: PartialMessage<ListUserMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListUserMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Metadata, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUserMetadataResponse {
    return new ListUserMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUserMetadataResponse {
    return new ListUserMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUserMetadataResponse {
    return new ListUserMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListUserMetadataResponse | PlainMessage<ListUserMetadataResponse> | undefined, b: ListUserMetadataResponse | PlainMessage<ListUserMetadataResponse> | undefined): boolean {
    return proto3.util.equals(ListUserMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetUserMetadataRequest
 */
export class GetUserMetadataRequest extends Message<GetUserMetadataRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string key = 2;
   */
  key = "";

  constructor(data?: PartialMessage<GetUserMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetUserMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserMetadataRequest {
    return new GetUserMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserMetadataRequest {
    return new GetUserMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserMetadataRequest {
    return new GetUserMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserMetadataRequest | PlainMessage<GetUserMetadataRequest> | undefined, b: GetUserMetadataRequest | PlainMessage<GetUserMetadataRequest> | undefined): boolean {
    return proto3.util.equals(GetUserMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetUserMetadataResponse
 */
export class GetUserMetadataResponse extends Message<GetUserMetadataResponse> {
  /**
   * @generated from field: zitadel.metadata.v1.Metadata metadata = 1;
   */
  metadata?: Metadata;

  constructor(data?: PartialMessage<GetUserMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetUserMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: Metadata },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserMetadataResponse {
    return new GetUserMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserMetadataResponse {
    return new GetUserMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserMetadataResponse {
    return new GetUserMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserMetadataResponse | PlainMessage<GetUserMetadataResponse> | undefined, b: GetUserMetadataResponse | PlainMessage<GetUserMetadataResponse> | undefined): boolean {
    return proto3.util.equals(GetUserMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetUserMetadataRequest
 */
export class SetUserMetadataRequest extends Message<SetUserMetadataRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string key = 2;
   */
  key = "";

  /**
   * @generated from field: bytes value = 3;
   */
  value = new Uint8Array(0);

  constructor(data?: PartialMessage<SetUserMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetUserMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetUserMetadataRequest {
    return new SetUserMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetUserMetadataRequest {
    return new SetUserMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetUserMetadataRequest {
    return new SetUserMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetUserMetadataRequest | PlainMessage<SetUserMetadataRequest> | undefined, b: SetUserMetadataRequest | PlainMessage<SetUserMetadataRequest> | undefined): boolean {
    return proto3.util.equals(SetUserMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetUserMetadataResponse
 */
export class SetUserMetadataResponse extends Message<SetUserMetadataResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetUserMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetUserMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetUserMetadataResponse {
    return new SetUserMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetUserMetadataResponse {
    return new SetUserMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetUserMetadataResponse {
    return new SetUserMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetUserMetadataResponse | PlainMessage<SetUserMetadataResponse> | undefined, b: SetUserMetadataResponse | PlainMessage<SetUserMetadataResponse> | undefined): boolean {
    return proto3.util.equals(SetUserMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkSetUserMetadataRequest
 */
export class BulkSetUserMetadataRequest extends Message<BulkSetUserMetadataRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: repeated zitadel.management.v1.BulkSetUserMetadataRequest.Metadata metadata = 2;
   */
  metadata: BulkSetUserMetadataRequest_Metadata[] = [];

  constructor(data?: PartialMessage<BulkSetUserMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkSetUserMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: BulkSetUserMetadataRequest_Metadata, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkSetUserMetadataRequest {
    return new BulkSetUserMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkSetUserMetadataRequest {
    return new BulkSetUserMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkSetUserMetadataRequest {
    return new BulkSetUserMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BulkSetUserMetadataRequest | PlainMessage<BulkSetUserMetadataRequest> | undefined, b: BulkSetUserMetadataRequest | PlainMessage<BulkSetUserMetadataRequest> | undefined): boolean {
    return proto3.util.equals(BulkSetUserMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkSetUserMetadataRequest.Metadata
 */
export class BulkSetUserMetadataRequest_Metadata extends Message<BulkSetUserMetadataRequest_Metadata> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: bytes value = 2;
   */
  value = new Uint8Array(0);

  constructor(data?: PartialMessage<BulkSetUserMetadataRequest_Metadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkSetUserMetadataRequest.Metadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkSetUserMetadataRequest_Metadata {
    return new BulkSetUserMetadataRequest_Metadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkSetUserMetadataRequest_Metadata {
    return new BulkSetUserMetadataRequest_Metadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkSetUserMetadataRequest_Metadata {
    return new BulkSetUserMetadataRequest_Metadata().fromJsonString(jsonString, options);
  }

  static equals(a: BulkSetUserMetadataRequest_Metadata | PlainMessage<BulkSetUserMetadataRequest_Metadata> | undefined, b: BulkSetUserMetadataRequest_Metadata | PlainMessage<BulkSetUserMetadataRequest_Metadata> | undefined): boolean {
    return proto3.util.equals(BulkSetUserMetadataRequest_Metadata, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkSetUserMetadataResponse
 */
export class BulkSetUserMetadataResponse extends Message<BulkSetUserMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<BulkSetUserMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkSetUserMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkSetUserMetadataResponse {
    return new BulkSetUserMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkSetUserMetadataResponse {
    return new BulkSetUserMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkSetUserMetadataResponse {
    return new BulkSetUserMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BulkSetUserMetadataResponse | PlainMessage<BulkSetUserMetadataResponse> | undefined, b: BulkSetUserMetadataResponse | PlainMessage<BulkSetUserMetadataResponse> | undefined): boolean {
    return proto3.util.equals(BulkSetUserMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveUserMetadataRequest
 */
export class RemoveUserMetadataRequest extends Message<RemoveUserMetadataRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string key = 2;
   */
  key = "";

  constructor(data?: PartialMessage<RemoveUserMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveUserMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveUserMetadataRequest {
    return new RemoveUserMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveUserMetadataRequest {
    return new RemoveUserMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveUserMetadataRequest {
    return new RemoveUserMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveUserMetadataRequest | PlainMessage<RemoveUserMetadataRequest> | undefined, b: RemoveUserMetadataRequest | PlainMessage<RemoveUserMetadataRequest> | undefined): boolean {
    return proto3.util.equals(RemoveUserMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveUserMetadataResponse
 */
export class RemoveUserMetadataResponse extends Message<RemoveUserMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveUserMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveUserMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveUserMetadataResponse {
    return new RemoveUserMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveUserMetadataResponse {
    return new RemoveUserMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveUserMetadataResponse {
    return new RemoveUserMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveUserMetadataResponse | PlainMessage<RemoveUserMetadataResponse> | undefined, b: RemoveUserMetadataResponse | PlainMessage<RemoveUserMetadataResponse> | undefined): boolean {
    return proto3.util.equals(RemoveUserMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkRemoveUserMetadataRequest
 */
export class BulkRemoveUserMetadataRequest extends Message<BulkRemoveUserMetadataRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: repeated string keys = 2;
   */
  keys: string[] = [];

  constructor(data?: PartialMessage<BulkRemoveUserMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkRemoveUserMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkRemoveUserMetadataRequest {
    return new BulkRemoveUserMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkRemoveUserMetadataRequest {
    return new BulkRemoveUserMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkRemoveUserMetadataRequest {
    return new BulkRemoveUserMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BulkRemoveUserMetadataRequest | PlainMessage<BulkRemoveUserMetadataRequest> | undefined, b: BulkRemoveUserMetadataRequest | PlainMessage<BulkRemoveUserMetadataRequest> | undefined): boolean {
    return proto3.util.equals(BulkRemoveUserMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkRemoveUserMetadataResponse
 */
export class BulkRemoveUserMetadataResponse extends Message<BulkRemoveUserMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<BulkRemoveUserMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkRemoveUserMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkRemoveUserMetadataResponse {
    return new BulkRemoveUserMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkRemoveUserMetadataResponse {
    return new BulkRemoveUserMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkRemoveUserMetadataResponse {
    return new BulkRemoveUserMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BulkRemoveUserMetadataResponse | PlainMessage<BulkRemoveUserMetadataResponse> | undefined, b: BulkRemoveUserMetadataResponse | PlainMessage<BulkRemoveUserMetadataResponse> | undefined): boolean {
    return proto3.util.equals(BulkRemoveUserMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetHumanProfileRequest
 */
export class GetHumanProfileRequest extends Message<GetHumanProfileRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<GetHumanProfileRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetHumanProfileRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetHumanProfileRequest {
    return new GetHumanProfileRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetHumanProfileRequest {
    return new GetHumanProfileRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetHumanProfileRequest {
    return new GetHumanProfileRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetHumanProfileRequest | PlainMessage<GetHumanProfileRequest> | undefined, b: GetHumanProfileRequest | PlainMessage<GetHumanProfileRequest> | undefined): boolean {
    return proto3.util.equals(GetHumanProfileRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetHumanProfileResponse
 */
export class GetHumanProfileResponse extends Message<GetHumanProfileResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.user.v1.Profile profile = 2;
   */
  profile?: Profile;

  constructor(data?: PartialMessage<GetHumanProfileResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetHumanProfileResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "profile", kind: "message", T: Profile },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetHumanProfileResponse {
    return new GetHumanProfileResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetHumanProfileResponse {
    return new GetHumanProfileResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetHumanProfileResponse {
    return new GetHumanProfileResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetHumanProfileResponse | PlainMessage<GetHumanProfileResponse> | undefined, b: GetHumanProfileResponse | PlainMessage<GetHumanProfileResponse> | undefined): boolean {
    return proto3.util.equals(GetHumanProfileResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateHumanProfileRequest
 */
export class UpdateHumanProfileRequest extends Message<UpdateHumanProfileRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string first_name = 2;
   */
  firstName = "";

  /**
   * @generated from field: string last_name = 3;
   */
  lastName = "";

  /**
   * @generated from field: string nick_name = 4;
   */
  nickName = "";

  /**
   * @generated from field: string display_name = 5;
   */
  displayName = "";

  /**
   * @generated from field: string preferred_language = 6;
   */
  preferredLanguage = "";

  /**
   * @generated from field: zitadel.user.v1.Gender gender = 7;
   */
  gender = Gender.UNSPECIFIED;

  constructor(data?: PartialMessage<UpdateHumanProfileRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateHumanProfileRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "nick_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "preferred_language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "gender", kind: "enum", T: proto3.getEnumType(Gender) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateHumanProfileRequest {
    return new UpdateHumanProfileRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateHumanProfileRequest {
    return new UpdateHumanProfileRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateHumanProfileRequest {
    return new UpdateHumanProfileRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateHumanProfileRequest | PlainMessage<UpdateHumanProfileRequest> | undefined, b: UpdateHumanProfileRequest | PlainMessage<UpdateHumanProfileRequest> | undefined): boolean {
    return proto3.util.equals(UpdateHumanProfileRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateHumanProfileResponse
 */
export class UpdateHumanProfileResponse extends Message<UpdateHumanProfileResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateHumanProfileResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateHumanProfileResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateHumanProfileResponse {
    return new UpdateHumanProfileResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateHumanProfileResponse {
    return new UpdateHumanProfileResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateHumanProfileResponse {
    return new UpdateHumanProfileResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateHumanProfileResponse | PlainMessage<UpdateHumanProfileResponse> | undefined, b: UpdateHumanProfileResponse | PlainMessage<UpdateHumanProfileResponse> | undefined): boolean {
    return proto3.util.equals(UpdateHumanProfileResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetHumanEmailRequest
 */
export class GetHumanEmailRequest extends Message<GetHumanEmailRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<GetHumanEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetHumanEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetHumanEmailRequest {
    return new GetHumanEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetHumanEmailRequest {
    return new GetHumanEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetHumanEmailRequest {
    return new GetHumanEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetHumanEmailRequest | PlainMessage<GetHumanEmailRequest> | undefined, b: GetHumanEmailRequest | PlainMessage<GetHumanEmailRequest> | undefined): boolean {
    return proto3.util.equals(GetHumanEmailRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetHumanEmailResponse
 */
export class GetHumanEmailResponse extends Message<GetHumanEmailResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.user.v1.Email email = 2;
   */
  email?: Email;

  constructor(data?: PartialMessage<GetHumanEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetHumanEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "email", kind: "message", T: Email },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetHumanEmailResponse {
    return new GetHumanEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetHumanEmailResponse {
    return new GetHumanEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetHumanEmailResponse {
    return new GetHumanEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetHumanEmailResponse | PlainMessage<GetHumanEmailResponse> | undefined, b: GetHumanEmailResponse | PlainMessage<GetHumanEmailResponse> | undefined): boolean {
    return proto3.util.equals(GetHumanEmailResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateHumanEmailRequest
 */
export class UpdateHumanEmailRequest extends Message<UpdateHumanEmailRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string email = 2;
   */
  email = "";

  /**
   * @generated from field: bool is_email_verified = 3;
   */
  isEmailVerified = false;

  constructor(data?: PartialMessage<UpdateHumanEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateHumanEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "is_email_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateHumanEmailRequest {
    return new UpdateHumanEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateHumanEmailRequest {
    return new UpdateHumanEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateHumanEmailRequest {
    return new UpdateHumanEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateHumanEmailRequest | PlainMessage<UpdateHumanEmailRequest> | undefined, b: UpdateHumanEmailRequest | PlainMessage<UpdateHumanEmailRequest> | undefined): boolean {
    return proto3.util.equals(UpdateHumanEmailRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateHumanEmailResponse
 */
export class UpdateHumanEmailResponse extends Message<UpdateHumanEmailResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateHumanEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateHumanEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateHumanEmailResponse {
    return new UpdateHumanEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateHumanEmailResponse {
    return new UpdateHumanEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateHumanEmailResponse {
    return new UpdateHumanEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateHumanEmailResponse | PlainMessage<UpdateHumanEmailResponse> | undefined, b: UpdateHumanEmailResponse | PlainMessage<UpdateHumanEmailResponse> | undefined): boolean {
    return proto3.util.equals(UpdateHumanEmailResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResendHumanInitializationRequest
 */
export class ResendHumanInitializationRequest extends Message<ResendHumanInitializationRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string email = 2;
   */
  email = "";

  constructor(data?: PartialMessage<ResendHumanInitializationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResendHumanInitializationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendHumanInitializationRequest {
    return new ResendHumanInitializationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendHumanInitializationRequest {
    return new ResendHumanInitializationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendHumanInitializationRequest {
    return new ResendHumanInitializationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResendHumanInitializationRequest | PlainMessage<ResendHumanInitializationRequest> | undefined, b: ResendHumanInitializationRequest | PlainMessage<ResendHumanInitializationRequest> | undefined): boolean {
    return proto3.util.equals(ResendHumanInitializationRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResendHumanInitializationResponse
 */
export class ResendHumanInitializationResponse extends Message<ResendHumanInitializationResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResendHumanInitializationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResendHumanInitializationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendHumanInitializationResponse {
    return new ResendHumanInitializationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendHumanInitializationResponse {
    return new ResendHumanInitializationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendHumanInitializationResponse {
    return new ResendHumanInitializationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResendHumanInitializationResponse | PlainMessage<ResendHumanInitializationResponse> | undefined, b: ResendHumanInitializationResponse | PlainMessage<ResendHumanInitializationResponse> | undefined): boolean {
    return proto3.util.equals(ResendHumanInitializationResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResendHumanEmailVerificationRequest
 */
export class ResendHumanEmailVerificationRequest extends Message<ResendHumanEmailVerificationRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<ResendHumanEmailVerificationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResendHumanEmailVerificationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendHumanEmailVerificationRequest {
    return new ResendHumanEmailVerificationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendHumanEmailVerificationRequest {
    return new ResendHumanEmailVerificationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendHumanEmailVerificationRequest {
    return new ResendHumanEmailVerificationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResendHumanEmailVerificationRequest | PlainMessage<ResendHumanEmailVerificationRequest> | undefined, b: ResendHumanEmailVerificationRequest | PlainMessage<ResendHumanEmailVerificationRequest> | undefined): boolean {
    return proto3.util.equals(ResendHumanEmailVerificationRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResendHumanEmailVerificationResponse
 */
export class ResendHumanEmailVerificationResponse extends Message<ResendHumanEmailVerificationResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResendHumanEmailVerificationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResendHumanEmailVerificationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendHumanEmailVerificationResponse {
    return new ResendHumanEmailVerificationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendHumanEmailVerificationResponse {
    return new ResendHumanEmailVerificationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendHumanEmailVerificationResponse {
    return new ResendHumanEmailVerificationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResendHumanEmailVerificationResponse | PlainMessage<ResendHumanEmailVerificationResponse> | undefined, b: ResendHumanEmailVerificationResponse | PlainMessage<ResendHumanEmailVerificationResponse> | undefined): boolean {
    return proto3.util.equals(ResendHumanEmailVerificationResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetHumanPhoneRequest
 */
export class GetHumanPhoneRequest extends Message<GetHumanPhoneRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<GetHumanPhoneRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetHumanPhoneRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetHumanPhoneRequest {
    return new GetHumanPhoneRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetHumanPhoneRequest {
    return new GetHumanPhoneRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetHumanPhoneRequest {
    return new GetHumanPhoneRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetHumanPhoneRequest | PlainMessage<GetHumanPhoneRequest> | undefined, b: GetHumanPhoneRequest | PlainMessage<GetHumanPhoneRequest> | undefined): boolean {
    return proto3.util.equals(GetHumanPhoneRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetHumanPhoneResponse
 */
export class GetHumanPhoneResponse extends Message<GetHumanPhoneResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.user.v1.Phone phone = 2;
   */
  phone?: Phone;

  constructor(data?: PartialMessage<GetHumanPhoneResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetHumanPhoneResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "phone", kind: "message", T: Phone },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetHumanPhoneResponse {
    return new GetHumanPhoneResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetHumanPhoneResponse {
    return new GetHumanPhoneResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetHumanPhoneResponse {
    return new GetHumanPhoneResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetHumanPhoneResponse | PlainMessage<GetHumanPhoneResponse> | undefined, b: GetHumanPhoneResponse | PlainMessage<GetHumanPhoneResponse> | undefined): boolean {
    return proto3.util.equals(GetHumanPhoneResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateHumanPhoneRequest
 */
export class UpdateHumanPhoneRequest extends Message<UpdateHumanPhoneRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string phone = 2;
   */
  phone = "";

  /**
   * @generated from field: bool is_phone_verified = 3;
   */
  isPhoneVerified = false;

  constructor(data?: PartialMessage<UpdateHumanPhoneRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateHumanPhoneRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "is_phone_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateHumanPhoneRequest {
    return new UpdateHumanPhoneRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateHumanPhoneRequest {
    return new UpdateHumanPhoneRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateHumanPhoneRequest {
    return new UpdateHumanPhoneRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateHumanPhoneRequest | PlainMessage<UpdateHumanPhoneRequest> | undefined, b: UpdateHumanPhoneRequest | PlainMessage<UpdateHumanPhoneRequest> | undefined): boolean {
    return proto3.util.equals(UpdateHumanPhoneRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateHumanPhoneResponse
 */
export class UpdateHumanPhoneResponse extends Message<UpdateHumanPhoneResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateHumanPhoneResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateHumanPhoneResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateHumanPhoneResponse {
    return new UpdateHumanPhoneResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateHumanPhoneResponse {
    return new UpdateHumanPhoneResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateHumanPhoneResponse {
    return new UpdateHumanPhoneResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateHumanPhoneResponse | PlainMessage<UpdateHumanPhoneResponse> | undefined, b: UpdateHumanPhoneResponse | PlainMessage<UpdateHumanPhoneResponse> | undefined): boolean {
    return proto3.util.equals(UpdateHumanPhoneResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanPhoneRequest
 */
export class RemoveHumanPhoneRequest extends Message<RemoveHumanPhoneRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<RemoveHumanPhoneRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanPhoneRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanPhoneRequest {
    return new RemoveHumanPhoneRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanPhoneRequest {
    return new RemoveHumanPhoneRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanPhoneRequest {
    return new RemoveHumanPhoneRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanPhoneRequest | PlainMessage<RemoveHumanPhoneRequest> | undefined, b: RemoveHumanPhoneRequest | PlainMessage<RemoveHumanPhoneRequest> | undefined): boolean {
    return proto3.util.equals(RemoveHumanPhoneRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanPhoneResponse
 */
export class RemoveHumanPhoneResponse extends Message<RemoveHumanPhoneResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveHumanPhoneResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanPhoneResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanPhoneResponse {
    return new RemoveHumanPhoneResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanPhoneResponse {
    return new RemoveHumanPhoneResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanPhoneResponse {
    return new RemoveHumanPhoneResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanPhoneResponse | PlainMessage<RemoveHumanPhoneResponse> | undefined, b: RemoveHumanPhoneResponse | PlainMessage<RemoveHumanPhoneResponse> | undefined): boolean {
    return proto3.util.equals(RemoveHumanPhoneResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResendHumanPhoneVerificationRequest
 */
export class ResendHumanPhoneVerificationRequest extends Message<ResendHumanPhoneVerificationRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<ResendHumanPhoneVerificationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResendHumanPhoneVerificationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendHumanPhoneVerificationRequest {
    return new ResendHumanPhoneVerificationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendHumanPhoneVerificationRequest {
    return new ResendHumanPhoneVerificationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendHumanPhoneVerificationRequest {
    return new ResendHumanPhoneVerificationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResendHumanPhoneVerificationRequest | PlainMessage<ResendHumanPhoneVerificationRequest> | undefined, b: ResendHumanPhoneVerificationRequest | PlainMessage<ResendHumanPhoneVerificationRequest> | undefined): boolean {
    return proto3.util.equals(ResendHumanPhoneVerificationRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResendHumanPhoneVerificationResponse
 */
export class ResendHumanPhoneVerificationResponse extends Message<ResendHumanPhoneVerificationResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResendHumanPhoneVerificationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResendHumanPhoneVerificationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendHumanPhoneVerificationResponse {
    return new ResendHumanPhoneVerificationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendHumanPhoneVerificationResponse {
    return new ResendHumanPhoneVerificationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendHumanPhoneVerificationResponse {
    return new ResendHumanPhoneVerificationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResendHumanPhoneVerificationResponse | PlainMessage<ResendHumanPhoneVerificationResponse> | undefined, b: ResendHumanPhoneVerificationResponse | PlainMessage<ResendHumanPhoneVerificationResponse> | undefined): boolean {
    return proto3.util.equals(ResendHumanPhoneVerificationResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanAvatarRequest
 */
export class RemoveHumanAvatarRequest extends Message<RemoveHumanAvatarRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<RemoveHumanAvatarRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanAvatarRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanAvatarRequest {
    return new RemoveHumanAvatarRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanAvatarRequest {
    return new RemoveHumanAvatarRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanAvatarRequest {
    return new RemoveHumanAvatarRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanAvatarRequest | PlainMessage<RemoveHumanAvatarRequest> | undefined, b: RemoveHumanAvatarRequest | PlainMessage<RemoveHumanAvatarRequest> | undefined): boolean {
    return proto3.util.equals(RemoveHumanAvatarRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanAvatarResponse
 */
export class RemoveHumanAvatarResponse extends Message<RemoveHumanAvatarResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveHumanAvatarResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanAvatarResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanAvatarResponse {
    return new RemoveHumanAvatarResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanAvatarResponse {
    return new RemoveHumanAvatarResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanAvatarResponse {
    return new RemoveHumanAvatarResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanAvatarResponse | PlainMessage<RemoveHumanAvatarResponse> | undefined, b: RemoveHumanAvatarResponse | PlainMessage<RemoveHumanAvatarResponse> | undefined): boolean {
    return proto3.util.equals(RemoveHumanAvatarResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetHumanInitialPasswordRequest
 */
export class SetHumanInitialPasswordRequest extends Message<SetHumanInitialPasswordRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string password = 2;
   */
  password = "";

  constructor(data?: PartialMessage<SetHumanInitialPasswordRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetHumanInitialPasswordRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetHumanInitialPasswordRequest {
    return new SetHumanInitialPasswordRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetHumanInitialPasswordRequest {
    return new SetHumanInitialPasswordRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetHumanInitialPasswordRequest {
    return new SetHumanInitialPasswordRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetHumanInitialPasswordRequest | PlainMessage<SetHumanInitialPasswordRequest> | undefined, b: SetHumanInitialPasswordRequest | PlainMessage<SetHumanInitialPasswordRequest> | undefined): boolean {
    return proto3.util.equals(SetHumanInitialPasswordRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetHumanInitialPasswordResponse
 */
export class SetHumanInitialPasswordResponse extends Message<SetHumanInitialPasswordResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetHumanInitialPasswordResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetHumanInitialPasswordResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetHumanInitialPasswordResponse {
    return new SetHumanInitialPasswordResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetHumanInitialPasswordResponse {
    return new SetHumanInitialPasswordResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetHumanInitialPasswordResponse {
    return new SetHumanInitialPasswordResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetHumanInitialPasswordResponse | PlainMessage<SetHumanInitialPasswordResponse> | undefined, b: SetHumanInitialPasswordResponse | PlainMessage<SetHumanInitialPasswordResponse> | undefined): boolean {
    return proto3.util.equals(SetHumanInitialPasswordResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetHumanPasswordRequest
 */
export class SetHumanPasswordRequest extends Message<SetHumanPasswordRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string password = 2;
   */
  password = "";

  /**
   * @generated from field: bool no_change_required = 3;
   */
  noChangeRequired = false;

  constructor(data?: PartialMessage<SetHumanPasswordRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetHumanPasswordRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "no_change_required", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetHumanPasswordRequest {
    return new SetHumanPasswordRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetHumanPasswordRequest {
    return new SetHumanPasswordRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetHumanPasswordRequest {
    return new SetHumanPasswordRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetHumanPasswordRequest | PlainMessage<SetHumanPasswordRequest> | undefined, b: SetHumanPasswordRequest | PlainMessage<SetHumanPasswordRequest> | undefined): boolean {
    return proto3.util.equals(SetHumanPasswordRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetHumanPasswordResponse
 */
export class SetHumanPasswordResponse extends Message<SetHumanPasswordResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetHumanPasswordResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetHumanPasswordResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetHumanPasswordResponse {
    return new SetHumanPasswordResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetHumanPasswordResponse {
    return new SetHumanPasswordResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetHumanPasswordResponse {
    return new SetHumanPasswordResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetHumanPasswordResponse | PlainMessage<SetHumanPasswordResponse> | undefined, b: SetHumanPasswordResponse | PlainMessage<SetHumanPasswordResponse> | undefined): boolean {
    return proto3.util.equals(SetHumanPasswordResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SendHumanResetPasswordNotificationRequest
 */
export class SendHumanResetPasswordNotificationRequest extends Message<SendHumanResetPasswordNotificationRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: zitadel.management.v1.SendHumanResetPasswordNotificationRequest.Type type = 2;
   */
  type = SendHumanResetPasswordNotificationRequest_Type.EMAIL;

  constructor(data?: PartialMessage<SendHumanResetPasswordNotificationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SendHumanResetPasswordNotificationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(SendHumanResetPasswordNotificationRequest_Type) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendHumanResetPasswordNotificationRequest {
    return new SendHumanResetPasswordNotificationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendHumanResetPasswordNotificationRequest {
    return new SendHumanResetPasswordNotificationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendHumanResetPasswordNotificationRequest {
    return new SendHumanResetPasswordNotificationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendHumanResetPasswordNotificationRequest | PlainMessage<SendHumanResetPasswordNotificationRequest> | undefined, b: SendHumanResetPasswordNotificationRequest | PlainMessage<SendHumanResetPasswordNotificationRequest> | undefined): boolean {
    return proto3.util.equals(SendHumanResetPasswordNotificationRequest, a, b);
  }
}

/**
 * @generated from enum zitadel.management.v1.SendHumanResetPasswordNotificationRequest.Type
 */
export enum SendHumanResetPasswordNotificationRequest_Type {
  /**
   * @generated from enum value: TYPE_EMAIL = 0;
   */
  EMAIL = 0,

  /**
   * @generated from enum value: TYPE_SMS = 1;
   */
  SMS = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(SendHumanResetPasswordNotificationRequest_Type)
proto3.util.setEnumType(SendHumanResetPasswordNotificationRequest_Type, "zitadel.management.v1.SendHumanResetPasswordNotificationRequest.Type", [
  { no: 0, name: "TYPE_EMAIL" },
  { no: 1, name: "TYPE_SMS" },
]);

/**
 * @generated from message zitadel.management.v1.SendHumanResetPasswordNotificationResponse
 */
export class SendHumanResetPasswordNotificationResponse extends Message<SendHumanResetPasswordNotificationResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SendHumanResetPasswordNotificationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SendHumanResetPasswordNotificationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendHumanResetPasswordNotificationResponse {
    return new SendHumanResetPasswordNotificationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendHumanResetPasswordNotificationResponse {
    return new SendHumanResetPasswordNotificationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendHumanResetPasswordNotificationResponse {
    return new SendHumanResetPasswordNotificationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendHumanResetPasswordNotificationResponse | PlainMessage<SendHumanResetPasswordNotificationResponse> | undefined, b: SendHumanResetPasswordNotificationResponse | PlainMessage<SendHumanResetPasswordNotificationResponse> | undefined): boolean {
    return proto3.util.equals(SendHumanResetPasswordNotificationResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListHumanAuthFactorsRequest
 */
export class ListHumanAuthFactorsRequest extends Message<ListHumanAuthFactorsRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<ListHumanAuthFactorsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListHumanAuthFactorsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListHumanAuthFactorsRequest {
    return new ListHumanAuthFactorsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListHumanAuthFactorsRequest {
    return new ListHumanAuthFactorsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListHumanAuthFactorsRequest {
    return new ListHumanAuthFactorsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListHumanAuthFactorsRequest | PlainMessage<ListHumanAuthFactorsRequest> | undefined, b: ListHumanAuthFactorsRequest | PlainMessage<ListHumanAuthFactorsRequest> | undefined): boolean {
    return proto3.util.equals(ListHumanAuthFactorsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListHumanAuthFactorsResponse
 */
export class ListHumanAuthFactorsResponse extends Message<ListHumanAuthFactorsResponse> {
  /**
   * @generated from field: repeated zitadel.user.v1.AuthFactor result = 1;
   */
  result: AuthFactor[] = [];

  constructor(data?: PartialMessage<ListHumanAuthFactorsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListHumanAuthFactorsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: AuthFactor, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListHumanAuthFactorsResponse {
    return new ListHumanAuthFactorsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListHumanAuthFactorsResponse {
    return new ListHumanAuthFactorsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListHumanAuthFactorsResponse {
    return new ListHumanAuthFactorsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListHumanAuthFactorsResponse | PlainMessage<ListHumanAuthFactorsResponse> | undefined, b: ListHumanAuthFactorsResponse | PlainMessage<ListHumanAuthFactorsResponse> | undefined): boolean {
    return proto3.util.equals(ListHumanAuthFactorsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanAuthFactorOTPRequest
 */
export class RemoveHumanAuthFactorOTPRequest extends Message<RemoveHumanAuthFactorOTPRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<RemoveHumanAuthFactorOTPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanAuthFactorOTPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanAuthFactorOTPRequest {
    return new RemoveHumanAuthFactorOTPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorOTPRequest {
    return new RemoveHumanAuthFactorOTPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorOTPRequest {
    return new RemoveHumanAuthFactorOTPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanAuthFactorOTPRequest | PlainMessage<RemoveHumanAuthFactorOTPRequest> | undefined, b: RemoveHumanAuthFactorOTPRequest | PlainMessage<RemoveHumanAuthFactorOTPRequest> | undefined): boolean {
    return proto3.util.equals(RemoveHumanAuthFactorOTPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanAuthFactorOTPResponse
 */
export class RemoveHumanAuthFactorOTPResponse extends Message<RemoveHumanAuthFactorOTPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveHumanAuthFactorOTPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanAuthFactorOTPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanAuthFactorOTPResponse {
    return new RemoveHumanAuthFactorOTPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorOTPResponse {
    return new RemoveHumanAuthFactorOTPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorOTPResponse {
    return new RemoveHumanAuthFactorOTPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanAuthFactorOTPResponse | PlainMessage<RemoveHumanAuthFactorOTPResponse> | undefined, b: RemoveHumanAuthFactorOTPResponse | PlainMessage<RemoveHumanAuthFactorOTPResponse> | undefined): boolean {
    return proto3.util.equals(RemoveHumanAuthFactorOTPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanAuthFactorU2FRequest
 */
export class RemoveHumanAuthFactorU2FRequest extends Message<RemoveHumanAuthFactorU2FRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string token_id = 2;
   */
  tokenId = "";

  constructor(data?: PartialMessage<RemoveHumanAuthFactorU2FRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanAuthFactorU2FRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanAuthFactorU2FRequest {
    return new RemoveHumanAuthFactorU2FRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorU2FRequest {
    return new RemoveHumanAuthFactorU2FRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorU2FRequest {
    return new RemoveHumanAuthFactorU2FRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanAuthFactorU2FRequest | PlainMessage<RemoveHumanAuthFactorU2FRequest> | undefined, b: RemoveHumanAuthFactorU2FRequest | PlainMessage<RemoveHumanAuthFactorU2FRequest> | undefined): boolean {
    return proto3.util.equals(RemoveHumanAuthFactorU2FRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanAuthFactorU2FResponse
 */
export class RemoveHumanAuthFactorU2FResponse extends Message<RemoveHumanAuthFactorU2FResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveHumanAuthFactorU2FResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanAuthFactorU2FResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanAuthFactorU2FResponse {
    return new RemoveHumanAuthFactorU2FResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorU2FResponse {
    return new RemoveHumanAuthFactorU2FResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorU2FResponse {
    return new RemoveHumanAuthFactorU2FResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanAuthFactorU2FResponse | PlainMessage<RemoveHumanAuthFactorU2FResponse> | undefined, b: RemoveHumanAuthFactorU2FResponse | PlainMessage<RemoveHumanAuthFactorU2FResponse> | undefined): boolean {
    return proto3.util.equals(RemoveHumanAuthFactorU2FResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanAuthFactorOTPSMSRequest
 */
export class RemoveHumanAuthFactorOTPSMSRequest extends Message<RemoveHumanAuthFactorOTPSMSRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<RemoveHumanAuthFactorOTPSMSRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanAuthFactorOTPSMSRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanAuthFactorOTPSMSRequest {
    return new RemoveHumanAuthFactorOTPSMSRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorOTPSMSRequest {
    return new RemoveHumanAuthFactorOTPSMSRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorOTPSMSRequest {
    return new RemoveHumanAuthFactorOTPSMSRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanAuthFactorOTPSMSRequest | PlainMessage<RemoveHumanAuthFactorOTPSMSRequest> | undefined, b: RemoveHumanAuthFactorOTPSMSRequest | PlainMessage<RemoveHumanAuthFactorOTPSMSRequest> | undefined): boolean {
    return proto3.util.equals(RemoveHumanAuthFactorOTPSMSRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanAuthFactorOTPSMSResponse
 */
export class RemoveHumanAuthFactorOTPSMSResponse extends Message<RemoveHumanAuthFactorOTPSMSResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveHumanAuthFactorOTPSMSResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanAuthFactorOTPSMSResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanAuthFactorOTPSMSResponse {
    return new RemoveHumanAuthFactorOTPSMSResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorOTPSMSResponse {
    return new RemoveHumanAuthFactorOTPSMSResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorOTPSMSResponse {
    return new RemoveHumanAuthFactorOTPSMSResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanAuthFactorOTPSMSResponse | PlainMessage<RemoveHumanAuthFactorOTPSMSResponse> | undefined, b: RemoveHumanAuthFactorOTPSMSResponse | PlainMessage<RemoveHumanAuthFactorOTPSMSResponse> | undefined): boolean {
    return proto3.util.equals(RemoveHumanAuthFactorOTPSMSResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanAuthFactorOTPEmailRequest
 */
export class RemoveHumanAuthFactorOTPEmailRequest extends Message<RemoveHumanAuthFactorOTPEmailRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<RemoveHumanAuthFactorOTPEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanAuthFactorOTPEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanAuthFactorOTPEmailRequest {
    return new RemoveHumanAuthFactorOTPEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorOTPEmailRequest {
    return new RemoveHumanAuthFactorOTPEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorOTPEmailRequest {
    return new RemoveHumanAuthFactorOTPEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanAuthFactorOTPEmailRequest | PlainMessage<RemoveHumanAuthFactorOTPEmailRequest> | undefined, b: RemoveHumanAuthFactorOTPEmailRequest | PlainMessage<RemoveHumanAuthFactorOTPEmailRequest> | undefined): boolean {
    return proto3.util.equals(RemoveHumanAuthFactorOTPEmailRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanAuthFactorOTPEmailResponse
 */
export class RemoveHumanAuthFactorOTPEmailResponse extends Message<RemoveHumanAuthFactorOTPEmailResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveHumanAuthFactorOTPEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanAuthFactorOTPEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanAuthFactorOTPEmailResponse {
    return new RemoveHumanAuthFactorOTPEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorOTPEmailResponse {
    return new RemoveHumanAuthFactorOTPEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanAuthFactorOTPEmailResponse {
    return new RemoveHumanAuthFactorOTPEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanAuthFactorOTPEmailResponse | PlainMessage<RemoveHumanAuthFactorOTPEmailResponse> | undefined, b: RemoveHumanAuthFactorOTPEmailResponse | PlainMessage<RemoveHumanAuthFactorOTPEmailResponse> | undefined): boolean {
    return proto3.util.equals(RemoveHumanAuthFactorOTPEmailResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListHumanPasswordlessRequest
 */
export class ListHumanPasswordlessRequest extends Message<ListHumanPasswordlessRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<ListHumanPasswordlessRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListHumanPasswordlessRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListHumanPasswordlessRequest {
    return new ListHumanPasswordlessRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListHumanPasswordlessRequest {
    return new ListHumanPasswordlessRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListHumanPasswordlessRequest {
    return new ListHumanPasswordlessRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListHumanPasswordlessRequest | PlainMessage<ListHumanPasswordlessRequest> | undefined, b: ListHumanPasswordlessRequest | PlainMessage<ListHumanPasswordlessRequest> | undefined): boolean {
    return proto3.util.equals(ListHumanPasswordlessRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListHumanPasswordlessResponse
 */
export class ListHumanPasswordlessResponse extends Message<ListHumanPasswordlessResponse> {
  /**
   * @generated from field: repeated zitadel.user.v1.WebAuthNToken result = 1;
   */
  result: WebAuthNToken[] = [];

  constructor(data?: PartialMessage<ListHumanPasswordlessResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListHumanPasswordlessResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: WebAuthNToken, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListHumanPasswordlessResponse {
    return new ListHumanPasswordlessResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListHumanPasswordlessResponse {
    return new ListHumanPasswordlessResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListHumanPasswordlessResponse {
    return new ListHumanPasswordlessResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListHumanPasswordlessResponse | PlainMessage<ListHumanPasswordlessResponse> | undefined, b: ListHumanPasswordlessResponse | PlainMessage<ListHumanPasswordlessResponse> | undefined): boolean {
    return proto3.util.equals(ListHumanPasswordlessResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddPasswordlessRegistrationRequest
 */
export class AddPasswordlessRegistrationRequest extends Message<AddPasswordlessRegistrationRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<AddPasswordlessRegistrationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddPasswordlessRegistrationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddPasswordlessRegistrationRequest {
    return new AddPasswordlessRegistrationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddPasswordlessRegistrationRequest {
    return new AddPasswordlessRegistrationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddPasswordlessRegistrationRequest {
    return new AddPasswordlessRegistrationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddPasswordlessRegistrationRequest | PlainMessage<AddPasswordlessRegistrationRequest> | undefined, b: AddPasswordlessRegistrationRequest | PlainMessage<AddPasswordlessRegistrationRequest> | undefined): boolean {
    return proto3.util.equals(AddPasswordlessRegistrationRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddPasswordlessRegistrationResponse
 */
export class AddPasswordlessRegistrationResponse extends Message<AddPasswordlessRegistrationResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string link = 2;
   */
  link = "";

  /**
   * @generated from field: google.protobuf.Duration expiration = 3;
   */
  expiration?: Duration;

  constructor(data?: PartialMessage<AddPasswordlessRegistrationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddPasswordlessRegistrationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "expiration", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddPasswordlessRegistrationResponse {
    return new AddPasswordlessRegistrationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddPasswordlessRegistrationResponse {
    return new AddPasswordlessRegistrationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddPasswordlessRegistrationResponse {
    return new AddPasswordlessRegistrationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddPasswordlessRegistrationResponse | PlainMessage<AddPasswordlessRegistrationResponse> | undefined, b: AddPasswordlessRegistrationResponse | PlainMessage<AddPasswordlessRegistrationResponse> | undefined): boolean {
    return proto3.util.equals(AddPasswordlessRegistrationResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SendPasswordlessRegistrationRequest
 */
export class SendPasswordlessRegistrationRequest extends Message<SendPasswordlessRegistrationRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<SendPasswordlessRegistrationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SendPasswordlessRegistrationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendPasswordlessRegistrationRequest {
    return new SendPasswordlessRegistrationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendPasswordlessRegistrationRequest {
    return new SendPasswordlessRegistrationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendPasswordlessRegistrationRequest {
    return new SendPasswordlessRegistrationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendPasswordlessRegistrationRequest | PlainMessage<SendPasswordlessRegistrationRequest> | undefined, b: SendPasswordlessRegistrationRequest | PlainMessage<SendPasswordlessRegistrationRequest> | undefined): boolean {
    return proto3.util.equals(SendPasswordlessRegistrationRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SendPasswordlessRegistrationResponse
 */
export class SendPasswordlessRegistrationResponse extends Message<SendPasswordlessRegistrationResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SendPasswordlessRegistrationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SendPasswordlessRegistrationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendPasswordlessRegistrationResponse {
    return new SendPasswordlessRegistrationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendPasswordlessRegistrationResponse {
    return new SendPasswordlessRegistrationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendPasswordlessRegistrationResponse {
    return new SendPasswordlessRegistrationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendPasswordlessRegistrationResponse | PlainMessage<SendPasswordlessRegistrationResponse> | undefined, b: SendPasswordlessRegistrationResponse | PlainMessage<SendPasswordlessRegistrationResponse> | undefined): boolean {
    return proto3.util.equals(SendPasswordlessRegistrationResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanPasswordlessRequest
 */
export class RemoveHumanPasswordlessRequest extends Message<RemoveHumanPasswordlessRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string token_id = 2;
   */
  tokenId = "";

  constructor(data?: PartialMessage<RemoveHumanPasswordlessRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanPasswordlessRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanPasswordlessRequest {
    return new RemoveHumanPasswordlessRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanPasswordlessRequest {
    return new RemoveHumanPasswordlessRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanPasswordlessRequest {
    return new RemoveHumanPasswordlessRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanPasswordlessRequest | PlainMessage<RemoveHumanPasswordlessRequest> | undefined, b: RemoveHumanPasswordlessRequest | PlainMessage<RemoveHumanPasswordlessRequest> | undefined): boolean {
    return proto3.util.equals(RemoveHumanPasswordlessRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanPasswordlessResponse
 */
export class RemoveHumanPasswordlessResponse extends Message<RemoveHumanPasswordlessResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveHumanPasswordlessResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanPasswordlessResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanPasswordlessResponse {
    return new RemoveHumanPasswordlessResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanPasswordlessResponse {
    return new RemoveHumanPasswordlessResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanPasswordlessResponse {
    return new RemoveHumanPasswordlessResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanPasswordlessResponse | PlainMessage<RemoveHumanPasswordlessResponse> | undefined, b: RemoveHumanPasswordlessResponse | PlainMessage<RemoveHumanPasswordlessResponse> | undefined): boolean {
    return proto3.util.equals(RemoveHumanPasswordlessResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateMachineRequest
 */
export class UpdateMachineRequest extends Message<UpdateMachineRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: zitadel.user.v1.AccessTokenType access_token_type = 4;
   */
  accessTokenType = AccessTokenType.BEARER;

  constructor(data?: PartialMessage<UpdateMachineRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateMachineRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "access_token_type", kind: "enum", T: proto3.getEnumType(AccessTokenType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMachineRequest {
    return new UpdateMachineRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMachineRequest {
    return new UpdateMachineRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMachineRequest {
    return new UpdateMachineRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMachineRequest | PlainMessage<UpdateMachineRequest> | undefined, b: UpdateMachineRequest | PlainMessage<UpdateMachineRequest> | undefined): boolean {
    return proto3.util.equals(UpdateMachineRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateMachineResponse
 */
export class UpdateMachineResponse extends Message<UpdateMachineResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateMachineResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateMachineResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMachineResponse {
    return new UpdateMachineResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMachineResponse {
    return new UpdateMachineResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMachineResponse {
    return new UpdateMachineResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMachineResponse | PlainMessage<UpdateMachineResponse> | undefined, b: UpdateMachineResponse | PlainMessage<UpdateMachineResponse> | undefined): boolean {
    return proto3.util.equals(UpdateMachineResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GenerateMachineSecretRequest
 */
export class GenerateMachineSecretRequest extends Message<GenerateMachineSecretRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<GenerateMachineSecretRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GenerateMachineSecretRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateMachineSecretRequest {
    return new GenerateMachineSecretRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateMachineSecretRequest {
    return new GenerateMachineSecretRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateMachineSecretRequest {
    return new GenerateMachineSecretRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateMachineSecretRequest | PlainMessage<GenerateMachineSecretRequest> | undefined, b: GenerateMachineSecretRequest | PlainMessage<GenerateMachineSecretRequest> | undefined): boolean {
    return proto3.util.equals(GenerateMachineSecretRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GenerateMachineSecretResponse
 */
export class GenerateMachineSecretResponse extends Message<GenerateMachineSecretResponse> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 2;
   */
  clientSecret = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 3;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<GenerateMachineSecretResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GenerateMachineSecretResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateMachineSecretResponse {
    return new GenerateMachineSecretResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateMachineSecretResponse {
    return new GenerateMachineSecretResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateMachineSecretResponse {
    return new GenerateMachineSecretResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateMachineSecretResponse | PlainMessage<GenerateMachineSecretResponse> | undefined, b: GenerateMachineSecretResponse | PlainMessage<GenerateMachineSecretResponse> | undefined): boolean {
    return proto3.util.equals(GenerateMachineSecretResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveMachineSecretRequest
 */
export class RemoveMachineSecretRequest extends Message<RemoveMachineSecretRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<RemoveMachineSecretRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveMachineSecretRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMachineSecretRequest {
    return new RemoveMachineSecretRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMachineSecretRequest {
    return new RemoveMachineSecretRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMachineSecretRequest {
    return new RemoveMachineSecretRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMachineSecretRequest | PlainMessage<RemoveMachineSecretRequest> | undefined, b: RemoveMachineSecretRequest | PlainMessage<RemoveMachineSecretRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMachineSecretRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveMachineSecretResponse
 */
export class RemoveMachineSecretResponse extends Message<RemoveMachineSecretResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMachineSecretResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveMachineSecretResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMachineSecretResponse {
    return new RemoveMachineSecretResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMachineSecretResponse {
    return new RemoveMachineSecretResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMachineSecretResponse {
    return new RemoveMachineSecretResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMachineSecretResponse | PlainMessage<RemoveMachineSecretResponse> | undefined, b: RemoveMachineSecretResponse | PlainMessage<RemoveMachineSecretResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMachineSecretResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetMachineKeyByIDsRequest
 */
export class GetMachineKeyByIDsRequest extends Message<GetMachineKeyByIDsRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string key_id = 2;
   */
  keyId = "";

  constructor(data?: PartialMessage<GetMachineKeyByIDsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetMachineKeyByIDsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMachineKeyByIDsRequest {
    return new GetMachineKeyByIDsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMachineKeyByIDsRequest {
    return new GetMachineKeyByIDsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMachineKeyByIDsRequest {
    return new GetMachineKeyByIDsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMachineKeyByIDsRequest | PlainMessage<GetMachineKeyByIDsRequest> | undefined, b: GetMachineKeyByIDsRequest | PlainMessage<GetMachineKeyByIDsRequest> | undefined): boolean {
    return proto3.util.equals(GetMachineKeyByIDsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetMachineKeyByIDsResponse
 */
export class GetMachineKeyByIDsResponse extends Message<GetMachineKeyByIDsResponse> {
  /**
   * @generated from field: zitadel.authn.v1.Key key = 1;
   */
  key?: Key;

  constructor(data?: PartialMessage<GetMachineKeyByIDsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetMachineKeyByIDsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "message", T: Key },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMachineKeyByIDsResponse {
    return new GetMachineKeyByIDsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMachineKeyByIDsResponse {
    return new GetMachineKeyByIDsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMachineKeyByIDsResponse {
    return new GetMachineKeyByIDsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMachineKeyByIDsResponse | PlainMessage<GetMachineKeyByIDsResponse> | undefined, b: GetMachineKeyByIDsResponse | PlainMessage<GetMachineKeyByIDsResponse> | undefined): boolean {
    return proto3.util.equals(GetMachineKeyByIDsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListMachineKeysRequest
 */
export class ListMachineKeysRequest extends Message<ListMachineKeysRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 2;
   */
  query?: ListQuery;

  constructor(data?: PartialMessage<ListMachineKeysRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListMachineKeysRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "query", kind: "message", T: ListQuery },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMachineKeysRequest {
    return new ListMachineKeysRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMachineKeysRequest {
    return new ListMachineKeysRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMachineKeysRequest {
    return new ListMachineKeysRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMachineKeysRequest | PlainMessage<ListMachineKeysRequest> | undefined, b: ListMachineKeysRequest | PlainMessage<ListMachineKeysRequest> | undefined): boolean {
    return proto3.util.equals(ListMachineKeysRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListMachineKeysResponse
 */
export class ListMachineKeysResponse extends Message<ListMachineKeysResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.authn.v1.Key result = 2;
   */
  result: Key[] = [];

  constructor(data?: PartialMessage<ListMachineKeysResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListMachineKeysResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Key, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMachineKeysResponse {
    return new ListMachineKeysResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMachineKeysResponse {
    return new ListMachineKeysResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMachineKeysResponse {
    return new ListMachineKeysResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMachineKeysResponse | PlainMessage<ListMachineKeysResponse> | undefined, b: ListMachineKeysResponse | PlainMessage<ListMachineKeysResponse> | undefined): boolean {
    return proto3.util.equals(ListMachineKeysResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddMachineKeyRequest
 */
export class AddMachineKeyRequest extends Message<AddMachineKeyRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: zitadel.authn.v1.KeyType type = 2;
   */
  type = KeyType.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.Timestamp expiration_date = 3;
   */
  expirationDate?: Timestamp;

  /**
   * @generated from field: bytes public_key = 4;
   */
  publicKey = new Uint8Array(0);

  constructor(data?: PartialMessage<AddMachineKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddMachineKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(KeyType) },
    { no: 3, name: "expiration_date", kind: "message", T: Timestamp },
    { no: 4, name: "public_key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMachineKeyRequest {
    return new AddMachineKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMachineKeyRequest {
    return new AddMachineKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMachineKeyRequest {
    return new AddMachineKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddMachineKeyRequest | PlainMessage<AddMachineKeyRequest> | undefined, b: AddMachineKeyRequest | PlainMessage<AddMachineKeyRequest> | undefined): boolean {
    return proto3.util.equals(AddMachineKeyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddMachineKeyResponse
 */
export class AddMachineKeyResponse extends Message<AddMachineKeyResponse> {
  /**
   * @generated from field: string key_id = 1;
   */
  keyId = "";

  /**
   * @generated from field: bytes key_details = 2;
   */
  keyDetails = new Uint8Array(0);

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 3;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddMachineKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddMachineKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key_details", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMachineKeyResponse {
    return new AddMachineKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMachineKeyResponse {
    return new AddMachineKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMachineKeyResponse {
    return new AddMachineKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddMachineKeyResponse | PlainMessage<AddMachineKeyResponse> | undefined, b: AddMachineKeyResponse | PlainMessage<AddMachineKeyResponse> | undefined): boolean {
    return proto3.util.equals(AddMachineKeyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveMachineKeyRequest
 */
export class RemoveMachineKeyRequest extends Message<RemoveMachineKeyRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string key_id = 2;
   */
  keyId = "";

  constructor(data?: PartialMessage<RemoveMachineKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveMachineKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMachineKeyRequest {
    return new RemoveMachineKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMachineKeyRequest {
    return new RemoveMachineKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMachineKeyRequest {
    return new RemoveMachineKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMachineKeyRequest | PlainMessage<RemoveMachineKeyRequest> | undefined, b: RemoveMachineKeyRequest | PlainMessage<RemoveMachineKeyRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMachineKeyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveMachineKeyResponse
 */
export class RemoveMachineKeyResponse extends Message<RemoveMachineKeyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMachineKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveMachineKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMachineKeyResponse {
    return new RemoveMachineKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMachineKeyResponse {
    return new RemoveMachineKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMachineKeyResponse {
    return new RemoveMachineKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMachineKeyResponse | PlainMessage<RemoveMachineKeyResponse> | undefined, b: RemoveMachineKeyResponse | PlainMessage<RemoveMachineKeyResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMachineKeyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetPersonalAccessTokenByIDsRequest
 */
export class GetPersonalAccessTokenByIDsRequest extends Message<GetPersonalAccessTokenByIDsRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string token_id = 2;
   */
  tokenId = "";

  constructor(data?: PartialMessage<GetPersonalAccessTokenByIDsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetPersonalAccessTokenByIDsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPersonalAccessTokenByIDsRequest {
    return new GetPersonalAccessTokenByIDsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPersonalAccessTokenByIDsRequest {
    return new GetPersonalAccessTokenByIDsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPersonalAccessTokenByIDsRequest {
    return new GetPersonalAccessTokenByIDsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPersonalAccessTokenByIDsRequest | PlainMessage<GetPersonalAccessTokenByIDsRequest> | undefined, b: GetPersonalAccessTokenByIDsRequest | PlainMessage<GetPersonalAccessTokenByIDsRequest> | undefined): boolean {
    return proto3.util.equals(GetPersonalAccessTokenByIDsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetPersonalAccessTokenByIDsResponse
 */
export class GetPersonalAccessTokenByIDsResponse extends Message<GetPersonalAccessTokenByIDsResponse> {
  /**
   * @generated from field: zitadel.user.v1.PersonalAccessToken token = 1;
   */
  token?: PersonalAccessToken;

  constructor(data?: PartialMessage<GetPersonalAccessTokenByIDsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetPersonalAccessTokenByIDsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token", kind: "message", T: PersonalAccessToken },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPersonalAccessTokenByIDsResponse {
    return new GetPersonalAccessTokenByIDsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPersonalAccessTokenByIDsResponse {
    return new GetPersonalAccessTokenByIDsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPersonalAccessTokenByIDsResponse {
    return new GetPersonalAccessTokenByIDsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPersonalAccessTokenByIDsResponse | PlainMessage<GetPersonalAccessTokenByIDsResponse> | undefined, b: GetPersonalAccessTokenByIDsResponse | PlainMessage<GetPersonalAccessTokenByIDsResponse> | undefined): boolean {
    return proto3.util.equals(GetPersonalAccessTokenByIDsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListPersonalAccessTokensRequest
 */
export class ListPersonalAccessTokensRequest extends Message<ListPersonalAccessTokensRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 2;
   */
  query?: ListQuery;

  constructor(data?: PartialMessage<ListPersonalAccessTokensRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListPersonalAccessTokensRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "query", kind: "message", T: ListQuery },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPersonalAccessTokensRequest {
    return new ListPersonalAccessTokensRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPersonalAccessTokensRequest {
    return new ListPersonalAccessTokensRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPersonalAccessTokensRequest {
    return new ListPersonalAccessTokensRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListPersonalAccessTokensRequest | PlainMessage<ListPersonalAccessTokensRequest> | undefined, b: ListPersonalAccessTokensRequest | PlainMessage<ListPersonalAccessTokensRequest> | undefined): boolean {
    return proto3.util.equals(ListPersonalAccessTokensRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListPersonalAccessTokensResponse
 */
export class ListPersonalAccessTokensResponse extends Message<ListPersonalAccessTokensResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.user.v1.PersonalAccessToken result = 2;
   */
  result: PersonalAccessToken[] = [];

  constructor(data?: PartialMessage<ListPersonalAccessTokensResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListPersonalAccessTokensResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: PersonalAccessToken, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPersonalAccessTokensResponse {
    return new ListPersonalAccessTokensResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPersonalAccessTokensResponse {
    return new ListPersonalAccessTokensResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPersonalAccessTokensResponse {
    return new ListPersonalAccessTokensResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListPersonalAccessTokensResponse | PlainMessage<ListPersonalAccessTokensResponse> | undefined, b: ListPersonalAccessTokensResponse | PlainMessage<ListPersonalAccessTokensResponse> | undefined): boolean {
    return proto3.util.equals(ListPersonalAccessTokensResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddPersonalAccessTokenRequest
 */
export class AddPersonalAccessTokenRequest extends Message<AddPersonalAccessTokenRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: google.protobuf.Timestamp expiration_date = 2;
   */
  expirationDate?: Timestamp;

  constructor(data?: PartialMessage<AddPersonalAccessTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddPersonalAccessTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expiration_date", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddPersonalAccessTokenRequest {
    return new AddPersonalAccessTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddPersonalAccessTokenRequest {
    return new AddPersonalAccessTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddPersonalAccessTokenRequest {
    return new AddPersonalAccessTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddPersonalAccessTokenRequest | PlainMessage<AddPersonalAccessTokenRequest> | undefined, b: AddPersonalAccessTokenRequest | PlainMessage<AddPersonalAccessTokenRequest> | undefined): boolean {
    return proto3.util.equals(AddPersonalAccessTokenRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddPersonalAccessTokenResponse
 */
export class AddPersonalAccessTokenResponse extends Message<AddPersonalAccessTokenResponse> {
  /**
   * @generated from field: string token_id = 1;
   */
  tokenId = "";

  /**
   * @generated from field: string token = 2;
   */
  token = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 3;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddPersonalAccessTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddPersonalAccessTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddPersonalAccessTokenResponse {
    return new AddPersonalAccessTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddPersonalAccessTokenResponse {
    return new AddPersonalAccessTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddPersonalAccessTokenResponse {
    return new AddPersonalAccessTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddPersonalAccessTokenResponse | PlainMessage<AddPersonalAccessTokenResponse> | undefined, b: AddPersonalAccessTokenResponse | PlainMessage<AddPersonalAccessTokenResponse> | undefined): boolean {
    return proto3.util.equals(AddPersonalAccessTokenResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemovePersonalAccessTokenRequest
 */
export class RemovePersonalAccessTokenRequest extends Message<RemovePersonalAccessTokenRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string token_id = 2;
   */
  tokenId = "";

  constructor(data?: PartialMessage<RemovePersonalAccessTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemovePersonalAccessTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemovePersonalAccessTokenRequest {
    return new RemovePersonalAccessTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemovePersonalAccessTokenRequest {
    return new RemovePersonalAccessTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemovePersonalAccessTokenRequest {
    return new RemovePersonalAccessTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemovePersonalAccessTokenRequest | PlainMessage<RemovePersonalAccessTokenRequest> | undefined, b: RemovePersonalAccessTokenRequest | PlainMessage<RemovePersonalAccessTokenRequest> | undefined): boolean {
    return proto3.util.equals(RemovePersonalAccessTokenRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemovePersonalAccessTokenResponse
 */
export class RemovePersonalAccessTokenResponse extends Message<RemovePersonalAccessTokenResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemovePersonalAccessTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemovePersonalAccessTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemovePersonalAccessTokenResponse {
    return new RemovePersonalAccessTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemovePersonalAccessTokenResponse {
    return new RemovePersonalAccessTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemovePersonalAccessTokenResponse {
    return new RemovePersonalAccessTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemovePersonalAccessTokenResponse | PlainMessage<RemovePersonalAccessTokenResponse> | undefined, b: RemovePersonalAccessTokenResponse | PlainMessage<RemovePersonalAccessTokenResponse> | undefined): boolean {
    return proto3.util.equals(RemovePersonalAccessTokenResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListHumanLinkedIDPsRequest
 */
export class ListHumanLinkedIDPsRequest extends Message<ListHumanLinkedIDPsRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 2;
   */
  query?: ListQuery;

  constructor(data?: PartialMessage<ListHumanLinkedIDPsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListHumanLinkedIDPsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "query", kind: "message", T: ListQuery },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListHumanLinkedIDPsRequest {
    return new ListHumanLinkedIDPsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListHumanLinkedIDPsRequest {
    return new ListHumanLinkedIDPsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListHumanLinkedIDPsRequest {
    return new ListHumanLinkedIDPsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListHumanLinkedIDPsRequest | PlainMessage<ListHumanLinkedIDPsRequest> | undefined, b: ListHumanLinkedIDPsRequest | PlainMessage<ListHumanLinkedIDPsRequest> | undefined): boolean {
    return proto3.util.equals(ListHumanLinkedIDPsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListHumanLinkedIDPsResponse
 */
export class ListHumanLinkedIDPsResponse extends Message<ListHumanLinkedIDPsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.idp.v1.IDPUserLink result = 2;
   */
  result: IDPUserLink[] = [];

  constructor(data?: PartialMessage<ListHumanLinkedIDPsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListHumanLinkedIDPsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: IDPUserLink, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListHumanLinkedIDPsResponse {
    return new ListHumanLinkedIDPsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListHumanLinkedIDPsResponse {
    return new ListHumanLinkedIDPsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListHumanLinkedIDPsResponse {
    return new ListHumanLinkedIDPsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListHumanLinkedIDPsResponse | PlainMessage<ListHumanLinkedIDPsResponse> | undefined, b: ListHumanLinkedIDPsResponse | PlainMessage<ListHumanLinkedIDPsResponse> | undefined): boolean {
    return proto3.util.equals(ListHumanLinkedIDPsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanLinkedIDPRequest
 */
export class RemoveHumanLinkedIDPRequest extends Message<RemoveHumanLinkedIDPRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string idp_id = 2;
   */
  idpId = "";

  /**
   * @generated from field: string linked_user_id = 3;
   */
  linkedUserId = "";

  constructor(data?: PartialMessage<RemoveHumanLinkedIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanLinkedIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "linked_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanLinkedIDPRequest {
    return new RemoveHumanLinkedIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanLinkedIDPRequest {
    return new RemoveHumanLinkedIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanLinkedIDPRequest {
    return new RemoveHumanLinkedIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanLinkedIDPRequest | PlainMessage<RemoveHumanLinkedIDPRequest> | undefined, b: RemoveHumanLinkedIDPRequest | PlainMessage<RemoveHumanLinkedIDPRequest> | undefined): boolean {
    return proto3.util.equals(RemoveHumanLinkedIDPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveHumanLinkedIDPResponse
 */
export class RemoveHumanLinkedIDPResponse extends Message<RemoveHumanLinkedIDPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveHumanLinkedIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveHumanLinkedIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveHumanLinkedIDPResponse {
    return new RemoveHumanLinkedIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveHumanLinkedIDPResponse {
    return new RemoveHumanLinkedIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveHumanLinkedIDPResponse {
    return new RemoveHumanLinkedIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveHumanLinkedIDPResponse | PlainMessage<RemoveHumanLinkedIDPResponse> | undefined, b: RemoveHumanLinkedIDPResponse | PlainMessage<RemoveHumanLinkedIDPResponse> | undefined): boolean {
    return proto3.util.equals(RemoveHumanLinkedIDPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListUserMembershipsRequest
 */
export class ListUserMembershipsRequest extends Message<ListUserMembershipsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.v1.ListQuery query = 2;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.user.v1.MembershipQuery queries = 3;
   */
  queries: MembershipQuery[] = [];

  constructor(data?: PartialMessage<ListUserMembershipsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListUserMembershipsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "query", kind: "message", T: ListQuery },
    { no: 3, name: "queries", kind: "message", T: MembershipQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUserMembershipsRequest {
    return new ListUserMembershipsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUserMembershipsRequest {
    return new ListUserMembershipsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUserMembershipsRequest {
    return new ListUserMembershipsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListUserMembershipsRequest | PlainMessage<ListUserMembershipsRequest> | undefined, b: ListUserMembershipsRequest | PlainMessage<ListUserMembershipsRequest> | undefined): boolean {
    return proto3.util.equals(ListUserMembershipsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListUserMembershipsResponse
 */
export class ListUserMembershipsResponse extends Message<ListUserMembershipsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.user.v1.Membership result = 2;
   */
  result: Membership[] = [];

  constructor(data?: PartialMessage<ListUserMembershipsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListUserMembershipsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Membership, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUserMembershipsResponse {
    return new ListUserMembershipsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUserMembershipsResponse {
    return new ListUserMembershipsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUserMembershipsResponse {
    return new ListUserMembershipsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListUserMembershipsResponse | PlainMessage<ListUserMembershipsResponse> | undefined, b: ListUserMembershipsResponse | PlainMessage<ListUserMembershipsResponse> | undefined): boolean {
    return proto3.util.equals(ListUserMembershipsResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetMyOrgRequest
 */
export class GetMyOrgRequest extends Message<GetMyOrgRequest> {
  constructor(data?: PartialMessage<GetMyOrgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetMyOrgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyOrgRequest {
    return new GetMyOrgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyOrgRequest {
    return new GetMyOrgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyOrgRequest {
    return new GetMyOrgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyOrgRequest | PlainMessage<GetMyOrgRequest> | undefined, b: GetMyOrgRequest | PlainMessage<GetMyOrgRequest> | undefined): boolean {
    return proto3.util.equals(GetMyOrgRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetMyOrgResponse
 */
export class GetMyOrgResponse extends Message<GetMyOrgResponse> {
  /**
   * @generated from field: zitadel.org.v1.Org org = 1;
   */
  org?: Org;

  constructor(data?: PartialMessage<GetMyOrgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetMyOrgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org", kind: "message", T: Org },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyOrgResponse {
    return new GetMyOrgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyOrgResponse {
    return new GetMyOrgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyOrgResponse {
    return new GetMyOrgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyOrgResponse | PlainMessage<GetMyOrgResponse> | undefined, b: GetMyOrgResponse | PlainMessage<GetMyOrgResponse> | undefined): boolean {
    return proto3.util.equals(GetMyOrgResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetOrgByDomainGlobalRequest
 */
export class GetOrgByDomainGlobalRequest extends Message<GetOrgByDomainGlobalRequest> {
  /**
   * @generated from field: string domain = 1;
   */
  domain = "";

  constructor(data?: PartialMessage<GetOrgByDomainGlobalRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetOrgByDomainGlobalRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrgByDomainGlobalRequest {
    return new GetOrgByDomainGlobalRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrgByDomainGlobalRequest {
    return new GetOrgByDomainGlobalRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrgByDomainGlobalRequest {
    return new GetOrgByDomainGlobalRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrgByDomainGlobalRequest | PlainMessage<GetOrgByDomainGlobalRequest> | undefined, b: GetOrgByDomainGlobalRequest | PlainMessage<GetOrgByDomainGlobalRequest> | undefined): boolean {
    return proto3.util.equals(GetOrgByDomainGlobalRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListOrgChangesRequest
 */
export class ListOrgChangesRequest extends Message<ListOrgChangesRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.change.v1.ChangeQuery query = 1;
   */
  query?: ChangeQuery;

  constructor(data?: PartialMessage<ListOrgChangesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListOrgChangesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ChangeQuery },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgChangesRequest {
    return new ListOrgChangesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgChangesRequest {
    return new ListOrgChangesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgChangesRequest {
    return new ListOrgChangesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgChangesRequest | PlainMessage<ListOrgChangesRequest> | undefined, b: ListOrgChangesRequest | PlainMessage<ListOrgChangesRequest> | undefined): boolean {
    return proto3.util.equals(ListOrgChangesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListOrgChangesResponse
 */
export class ListOrgChangesResponse extends Message<ListOrgChangesResponse> {
  /**
   * zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary info)
   *
   * @generated from field: repeated zitadel.change.v1.Change result = 2;
   */
  result: Change[] = [];

  constructor(data?: PartialMessage<ListOrgChangesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListOrgChangesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "result", kind: "message", T: Change, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgChangesResponse {
    return new ListOrgChangesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgChangesResponse {
    return new ListOrgChangesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgChangesResponse {
    return new ListOrgChangesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgChangesResponse | PlainMessage<ListOrgChangesResponse> | undefined, b: ListOrgChangesResponse | PlainMessage<ListOrgChangesResponse> | undefined): boolean {
    return proto3.util.equals(ListOrgChangesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetOrgByDomainGlobalResponse
 */
export class GetOrgByDomainGlobalResponse extends Message<GetOrgByDomainGlobalResponse> {
  /**
   * @generated from field: zitadel.org.v1.Org org = 1;
   */
  org?: Org;

  constructor(data?: PartialMessage<GetOrgByDomainGlobalResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetOrgByDomainGlobalResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org", kind: "message", T: Org },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrgByDomainGlobalResponse {
    return new GetOrgByDomainGlobalResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrgByDomainGlobalResponse {
    return new GetOrgByDomainGlobalResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrgByDomainGlobalResponse {
    return new GetOrgByDomainGlobalResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrgByDomainGlobalResponse | PlainMessage<GetOrgByDomainGlobalResponse> | undefined, b: GetOrgByDomainGlobalResponse | PlainMessage<GetOrgByDomainGlobalResponse> | undefined): boolean {
    return proto3.util.equals(GetOrgByDomainGlobalResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddOrgRequest
 */
export class AddOrgRequest extends Message<AddOrgRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<AddOrgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddOrgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOrgRequest {
    return new AddOrgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOrgRequest {
    return new AddOrgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOrgRequest {
    return new AddOrgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddOrgRequest | PlainMessage<AddOrgRequest> | undefined, b: AddOrgRequest | PlainMessage<AddOrgRequest> | undefined): boolean {
    return proto3.util.equals(AddOrgRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddOrgResponse
 */
export class AddOrgResponse extends Message<AddOrgResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddOrgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddOrgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOrgResponse {
    return new AddOrgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOrgResponse {
    return new AddOrgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOrgResponse {
    return new AddOrgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddOrgResponse | PlainMessage<AddOrgResponse> | undefined, b: AddOrgResponse | PlainMessage<AddOrgResponse> | undefined): boolean {
    return proto3.util.equals(AddOrgResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateOrgRequest
 */
export class UpdateOrgRequest extends Message<UpdateOrgRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<UpdateOrgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateOrgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrgRequest {
    return new UpdateOrgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrgRequest {
    return new UpdateOrgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrgRequest {
    return new UpdateOrgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrgRequest | PlainMessage<UpdateOrgRequest> | undefined, b: UpdateOrgRequest | PlainMessage<UpdateOrgRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOrgRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateOrgResponse
 */
export class UpdateOrgResponse extends Message<UpdateOrgResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateOrgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateOrgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrgResponse {
    return new UpdateOrgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrgResponse {
    return new UpdateOrgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrgResponse {
    return new UpdateOrgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrgResponse | PlainMessage<UpdateOrgResponse> | undefined, b: UpdateOrgResponse | PlainMessage<UpdateOrgResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOrgResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.DeactivateOrgRequest
 */
export class DeactivateOrgRequest extends Message<DeactivateOrgRequest> {
  constructor(data?: PartialMessage<DeactivateOrgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateOrgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateOrgRequest {
    return new DeactivateOrgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateOrgRequest {
    return new DeactivateOrgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateOrgRequest {
    return new DeactivateOrgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateOrgRequest | PlainMessage<DeactivateOrgRequest> | undefined, b: DeactivateOrgRequest | PlainMessage<DeactivateOrgRequest> | undefined): boolean {
    return proto3.util.equals(DeactivateOrgRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateOrgResponse
 */
export class DeactivateOrgResponse extends Message<DeactivateOrgResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<DeactivateOrgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateOrgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateOrgResponse {
    return new DeactivateOrgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateOrgResponse {
    return new DeactivateOrgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateOrgResponse {
    return new DeactivateOrgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateOrgResponse | PlainMessage<DeactivateOrgResponse> | undefined, b: DeactivateOrgResponse | PlainMessage<DeactivateOrgResponse> | undefined): boolean {
    return proto3.util.equals(DeactivateOrgResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.ReactivateOrgRequest
 */
export class ReactivateOrgRequest extends Message<ReactivateOrgRequest> {
  constructor(data?: PartialMessage<ReactivateOrgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateOrgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateOrgRequest {
    return new ReactivateOrgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateOrgRequest {
    return new ReactivateOrgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateOrgRequest {
    return new ReactivateOrgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateOrgRequest | PlainMessage<ReactivateOrgRequest> | undefined, b: ReactivateOrgRequest | PlainMessage<ReactivateOrgRequest> | undefined): boolean {
    return proto3.util.equals(ReactivateOrgRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateOrgResponse
 */
export class ReactivateOrgResponse extends Message<ReactivateOrgResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ReactivateOrgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateOrgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateOrgResponse {
    return new ReactivateOrgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateOrgResponse {
    return new ReactivateOrgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateOrgResponse {
    return new ReactivateOrgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateOrgResponse | PlainMessage<ReactivateOrgResponse> | undefined, b: ReactivateOrgResponse | PlainMessage<ReactivateOrgResponse> | undefined): boolean {
    return proto3.util.equals(ReactivateOrgResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveOrgRequest
 */
export class RemoveOrgRequest extends Message<RemoveOrgRequest> {
  constructor(data?: PartialMessage<RemoveOrgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveOrgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOrgRequest {
    return new RemoveOrgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOrgRequest {
    return new RemoveOrgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOrgRequest {
    return new RemoveOrgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOrgRequest | PlainMessage<RemoveOrgRequest> | undefined, b: RemoveOrgRequest | PlainMessage<RemoveOrgRequest> | undefined): boolean {
    return proto3.util.equals(RemoveOrgRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveOrgResponse
 */
export class RemoveOrgResponse extends Message<RemoveOrgResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveOrgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveOrgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOrgResponse {
    return new RemoveOrgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOrgResponse {
    return new RemoveOrgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOrgResponse {
    return new RemoveOrgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOrgResponse | PlainMessage<RemoveOrgResponse> | undefined, b: RemoveOrgResponse | PlainMessage<RemoveOrgResponse> | undefined): boolean {
    return proto3.util.equals(RemoveOrgResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListOrgDomainsRequest
 */
export class ListOrgDomainsRequest extends Message<ListOrgDomainsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.org.v1.DomainSearchQuery queries = 2;
   */
  queries: DomainSearchQuery[] = [];

  constructor(data?: PartialMessage<ListOrgDomainsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListOrgDomainsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: DomainSearchQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgDomainsRequest {
    return new ListOrgDomainsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgDomainsRequest {
    return new ListOrgDomainsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgDomainsRequest {
    return new ListOrgDomainsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgDomainsRequest | PlainMessage<ListOrgDomainsRequest> | undefined, b: ListOrgDomainsRequest | PlainMessage<ListOrgDomainsRequest> | undefined): boolean {
    return proto3.util.equals(ListOrgDomainsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListOrgDomainsResponse
 */
export class ListOrgDomainsResponse extends Message<ListOrgDomainsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.org.v1.Domain result = 2;
   */
  result: Domain[] = [];

  constructor(data?: PartialMessage<ListOrgDomainsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListOrgDomainsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Domain, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgDomainsResponse {
    return new ListOrgDomainsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgDomainsResponse {
    return new ListOrgDomainsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgDomainsResponse {
    return new ListOrgDomainsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgDomainsResponse | PlainMessage<ListOrgDomainsResponse> | undefined, b: ListOrgDomainsResponse | PlainMessage<ListOrgDomainsResponse> | undefined): boolean {
    return proto3.util.equals(ListOrgDomainsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddOrgDomainRequest
 */
export class AddOrgDomainRequest extends Message<AddOrgDomainRequest> {
  /**
   * @generated from field: string domain = 1;
   */
  domain = "";

  constructor(data?: PartialMessage<AddOrgDomainRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddOrgDomainRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOrgDomainRequest {
    return new AddOrgDomainRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOrgDomainRequest {
    return new AddOrgDomainRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOrgDomainRequest {
    return new AddOrgDomainRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddOrgDomainRequest | PlainMessage<AddOrgDomainRequest> | undefined, b: AddOrgDomainRequest | PlainMessage<AddOrgDomainRequest> | undefined): boolean {
    return proto3.util.equals(AddOrgDomainRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddOrgDomainResponse
 */
export class AddOrgDomainResponse extends Message<AddOrgDomainResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddOrgDomainResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddOrgDomainResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOrgDomainResponse {
    return new AddOrgDomainResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOrgDomainResponse {
    return new AddOrgDomainResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOrgDomainResponse {
    return new AddOrgDomainResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddOrgDomainResponse | PlainMessage<AddOrgDomainResponse> | undefined, b: AddOrgDomainResponse | PlainMessage<AddOrgDomainResponse> | undefined): boolean {
    return proto3.util.equals(AddOrgDomainResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveOrgDomainRequest
 */
export class RemoveOrgDomainRequest extends Message<RemoveOrgDomainRequest> {
  /**
   * @generated from field: string domain = 1;
   */
  domain = "";

  constructor(data?: PartialMessage<RemoveOrgDomainRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveOrgDomainRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOrgDomainRequest {
    return new RemoveOrgDomainRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOrgDomainRequest {
    return new RemoveOrgDomainRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOrgDomainRequest {
    return new RemoveOrgDomainRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOrgDomainRequest | PlainMessage<RemoveOrgDomainRequest> | undefined, b: RemoveOrgDomainRequest | PlainMessage<RemoveOrgDomainRequest> | undefined): boolean {
    return proto3.util.equals(RemoveOrgDomainRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveOrgDomainResponse
 */
export class RemoveOrgDomainResponse extends Message<RemoveOrgDomainResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveOrgDomainResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveOrgDomainResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOrgDomainResponse {
    return new RemoveOrgDomainResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOrgDomainResponse {
    return new RemoveOrgDomainResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOrgDomainResponse {
    return new RemoveOrgDomainResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOrgDomainResponse | PlainMessage<RemoveOrgDomainResponse> | undefined, b: RemoveOrgDomainResponse | PlainMessage<RemoveOrgDomainResponse> | undefined): boolean {
    return proto3.util.equals(RemoveOrgDomainResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GenerateOrgDomainValidationRequest
 */
export class GenerateOrgDomainValidationRequest extends Message<GenerateOrgDomainValidationRequest> {
  /**
   * @generated from field: string domain = 1;
   */
  domain = "";

  /**
   * @generated from field: zitadel.org.v1.DomainValidationType type = 2;
   */
  type = DomainValidationType.UNSPECIFIED;

  constructor(data?: PartialMessage<GenerateOrgDomainValidationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GenerateOrgDomainValidationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(DomainValidationType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateOrgDomainValidationRequest {
    return new GenerateOrgDomainValidationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateOrgDomainValidationRequest {
    return new GenerateOrgDomainValidationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateOrgDomainValidationRequest {
    return new GenerateOrgDomainValidationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateOrgDomainValidationRequest | PlainMessage<GenerateOrgDomainValidationRequest> | undefined, b: GenerateOrgDomainValidationRequest | PlainMessage<GenerateOrgDomainValidationRequest> | undefined): boolean {
    return proto3.util.equals(GenerateOrgDomainValidationRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GenerateOrgDomainValidationResponse
 */
export class GenerateOrgDomainValidationResponse extends Message<GenerateOrgDomainValidationResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token = "";

  /**
   * @generated from field: string url = 2;
   */
  url = "";

  constructor(data?: PartialMessage<GenerateOrgDomainValidationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GenerateOrgDomainValidationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateOrgDomainValidationResponse {
    return new GenerateOrgDomainValidationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateOrgDomainValidationResponse {
    return new GenerateOrgDomainValidationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateOrgDomainValidationResponse {
    return new GenerateOrgDomainValidationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateOrgDomainValidationResponse | PlainMessage<GenerateOrgDomainValidationResponse> | undefined, b: GenerateOrgDomainValidationResponse | PlainMessage<GenerateOrgDomainValidationResponse> | undefined): boolean {
    return proto3.util.equals(GenerateOrgDomainValidationResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ValidateOrgDomainRequest
 */
export class ValidateOrgDomainRequest extends Message<ValidateOrgDomainRequest> {
  /**
   * @generated from field: string domain = 1;
   */
  domain = "";

  constructor(data?: PartialMessage<ValidateOrgDomainRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ValidateOrgDomainRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidateOrgDomainRequest {
    return new ValidateOrgDomainRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidateOrgDomainRequest {
    return new ValidateOrgDomainRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidateOrgDomainRequest {
    return new ValidateOrgDomainRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ValidateOrgDomainRequest | PlainMessage<ValidateOrgDomainRequest> | undefined, b: ValidateOrgDomainRequest | PlainMessage<ValidateOrgDomainRequest> | undefined): boolean {
    return proto3.util.equals(ValidateOrgDomainRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ValidateOrgDomainResponse
 */
export class ValidateOrgDomainResponse extends Message<ValidateOrgDomainResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ValidateOrgDomainResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ValidateOrgDomainResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidateOrgDomainResponse {
    return new ValidateOrgDomainResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidateOrgDomainResponse {
    return new ValidateOrgDomainResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidateOrgDomainResponse {
    return new ValidateOrgDomainResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ValidateOrgDomainResponse | PlainMessage<ValidateOrgDomainResponse> | undefined, b: ValidateOrgDomainResponse | PlainMessage<ValidateOrgDomainResponse> | undefined): boolean {
    return proto3.util.equals(ValidateOrgDomainResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetPrimaryOrgDomainRequest
 */
export class SetPrimaryOrgDomainRequest extends Message<SetPrimaryOrgDomainRequest> {
  /**
   * @generated from field: string domain = 1;
   */
  domain = "";

  constructor(data?: PartialMessage<SetPrimaryOrgDomainRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetPrimaryOrgDomainRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPrimaryOrgDomainRequest {
    return new SetPrimaryOrgDomainRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPrimaryOrgDomainRequest {
    return new SetPrimaryOrgDomainRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPrimaryOrgDomainRequest {
    return new SetPrimaryOrgDomainRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetPrimaryOrgDomainRequest | PlainMessage<SetPrimaryOrgDomainRequest> | undefined, b: SetPrimaryOrgDomainRequest | PlainMessage<SetPrimaryOrgDomainRequest> | undefined): boolean {
    return proto3.util.equals(SetPrimaryOrgDomainRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetPrimaryOrgDomainResponse
 */
export class SetPrimaryOrgDomainResponse extends Message<SetPrimaryOrgDomainResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetPrimaryOrgDomainResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetPrimaryOrgDomainResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPrimaryOrgDomainResponse {
    return new SetPrimaryOrgDomainResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPrimaryOrgDomainResponse {
    return new SetPrimaryOrgDomainResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPrimaryOrgDomainResponse {
    return new SetPrimaryOrgDomainResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetPrimaryOrgDomainResponse | PlainMessage<SetPrimaryOrgDomainResponse> | undefined, b: SetPrimaryOrgDomainResponse | PlainMessage<SetPrimaryOrgDomainResponse> | undefined): boolean {
    return proto3.util.equals(SetPrimaryOrgDomainResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.ListOrgMemberRolesRequest
 */
export class ListOrgMemberRolesRequest extends Message<ListOrgMemberRolesRequest> {
  constructor(data?: PartialMessage<ListOrgMemberRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListOrgMemberRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgMemberRolesRequest {
    return new ListOrgMemberRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgMemberRolesRequest {
    return new ListOrgMemberRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgMemberRolesRequest {
    return new ListOrgMemberRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgMemberRolesRequest | PlainMessage<ListOrgMemberRolesRequest> | undefined, b: ListOrgMemberRolesRequest | PlainMessage<ListOrgMemberRolesRequest> | undefined): boolean {
    return proto3.util.equals(ListOrgMemberRolesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListOrgMemberRolesResponse
 */
export class ListOrgMemberRolesResponse extends Message<ListOrgMemberRolesResponse> {
  /**
   * @generated from field: repeated string result = 1;
   */
  result: string[] = [];

  constructor(data?: PartialMessage<ListOrgMemberRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListOrgMemberRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgMemberRolesResponse {
    return new ListOrgMemberRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgMemberRolesResponse {
    return new ListOrgMemberRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgMemberRolesResponse {
    return new ListOrgMemberRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgMemberRolesResponse | PlainMessage<ListOrgMemberRolesResponse> | undefined, b: ListOrgMemberRolesResponse | PlainMessage<ListOrgMemberRolesResponse> | undefined): boolean {
    return proto3.util.equals(ListOrgMemberRolesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListOrgMembersRequest
 */
export class ListOrgMembersRequest extends Message<ListOrgMembersRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.member.v1.SearchQuery queries = 2;
   */
  queries: SearchQuery$1[] = [];

  constructor(data?: PartialMessage<ListOrgMembersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListOrgMembersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: SearchQuery$1, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgMembersRequest {
    return new ListOrgMembersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgMembersRequest {
    return new ListOrgMembersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgMembersRequest {
    return new ListOrgMembersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgMembersRequest | PlainMessage<ListOrgMembersRequest> | undefined, b: ListOrgMembersRequest | PlainMessage<ListOrgMembersRequest> | undefined): boolean {
    return proto3.util.equals(ListOrgMembersRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListOrgMembersResponse
 */
export class ListOrgMembersResponse extends Message<ListOrgMembersResponse> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.member.v1.Member result = 2;
   */
  result: Member[] = [];

  constructor(data?: PartialMessage<ListOrgMembersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListOrgMembersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Member, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgMembersResponse {
    return new ListOrgMembersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgMembersResponse {
    return new ListOrgMembersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgMembersResponse {
    return new ListOrgMembersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgMembersResponse | PlainMessage<ListOrgMembersResponse> | undefined, b: ListOrgMembersResponse | PlainMessage<ListOrgMembersResponse> | undefined): boolean {
    return proto3.util.equals(ListOrgMembersResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddOrgMemberRequest
 */
export class AddOrgMemberRequest extends Message<AddOrgMemberRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: repeated string roles = 2;
   */
  roles: string[] = [];

  constructor(data?: PartialMessage<AddOrgMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddOrgMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOrgMemberRequest {
    return new AddOrgMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOrgMemberRequest {
    return new AddOrgMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOrgMemberRequest {
    return new AddOrgMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddOrgMemberRequest | PlainMessage<AddOrgMemberRequest> | undefined, b: AddOrgMemberRequest | PlainMessage<AddOrgMemberRequest> | undefined): boolean {
    return proto3.util.equals(AddOrgMemberRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddOrgMemberResponse
 */
export class AddOrgMemberResponse extends Message<AddOrgMemberResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddOrgMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddOrgMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOrgMemberResponse {
    return new AddOrgMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOrgMemberResponse {
    return new AddOrgMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOrgMemberResponse {
    return new AddOrgMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddOrgMemberResponse | PlainMessage<AddOrgMemberResponse> | undefined, b: AddOrgMemberResponse | PlainMessage<AddOrgMemberResponse> | undefined): boolean {
    return proto3.util.equals(AddOrgMemberResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateOrgMemberRequest
 */
export class UpdateOrgMemberRequest extends Message<UpdateOrgMemberRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: repeated string roles = 2;
   */
  roles: string[] = [];

  constructor(data?: PartialMessage<UpdateOrgMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateOrgMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrgMemberRequest {
    return new UpdateOrgMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrgMemberRequest {
    return new UpdateOrgMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrgMemberRequest {
    return new UpdateOrgMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrgMemberRequest | PlainMessage<UpdateOrgMemberRequest> | undefined, b: UpdateOrgMemberRequest | PlainMessage<UpdateOrgMemberRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOrgMemberRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateOrgMemberResponse
 */
export class UpdateOrgMemberResponse extends Message<UpdateOrgMemberResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateOrgMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateOrgMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrgMemberResponse {
    return new UpdateOrgMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrgMemberResponse {
    return new UpdateOrgMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrgMemberResponse {
    return new UpdateOrgMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrgMemberResponse | PlainMessage<UpdateOrgMemberResponse> | undefined, b: UpdateOrgMemberResponse | PlainMessage<UpdateOrgMemberResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOrgMemberResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveOrgMemberRequest
 */
export class RemoveOrgMemberRequest extends Message<RemoveOrgMemberRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<RemoveOrgMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveOrgMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOrgMemberRequest {
    return new RemoveOrgMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOrgMemberRequest {
    return new RemoveOrgMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOrgMemberRequest {
    return new RemoveOrgMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOrgMemberRequest | PlainMessage<RemoveOrgMemberRequest> | undefined, b: RemoveOrgMemberRequest | PlainMessage<RemoveOrgMemberRequest> | undefined): boolean {
    return proto3.util.equals(RemoveOrgMemberRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveOrgMemberResponse
 */
export class RemoveOrgMemberResponse extends Message<RemoveOrgMemberResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveOrgMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveOrgMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOrgMemberResponse {
    return new RemoveOrgMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOrgMemberResponse {
    return new RemoveOrgMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOrgMemberResponse {
    return new RemoveOrgMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOrgMemberResponse | PlainMessage<RemoveOrgMemberResponse> | undefined, b: RemoveOrgMemberResponse | PlainMessage<RemoveOrgMemberResponse> | undefined): boolean {
    return proto3.util.equals(RemoveOrgMemberResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListOrgMetadataRequest
 */
export class ListOrgMetadataRequest extends Message<ListOrgMetadataRequest> {
  /**
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * @generated from field: repeated zitadel.metadata.v1.MetadataQuery queries = 2;
   */
  queries: MetadataQuery[] = [];

  constructor(data?: PartialMessage<ListOrgMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListOrgMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: MetadataQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgMetadataRequest {
    return new ListOrgMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgMetadataRequest {
    return new ListOrgMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgMetadataRequest {
    return new ListOrgMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgMetadataRequest | PlainMessage<ListOrgMetadataRequest> | undefined, b: ListOrgMetadataRequest | PlainMessage<ListOrgMetadataRequest> | undefined): boolean {
    return proto3.util.equals(ListOrgMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListOrgMetadataResponse
 */
export class ListOrgMetadataResponse extends Message<ListOrgMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.metadata.v1.Metadata result = 2;
   */
  result: Metadata[] = [];

  constructor(data?: PartialMessage<ListOrgMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListOrgMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Metadata, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgMetadataResponse {
    return new ListOrgMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgMetadataResponse {
    return new ListOrgMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgMetadataResponse {
    return new ListOrgMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgMetadataResponse | PlainMessage<ListOrgMetadataResponse> | undefined, b: ListOrgMetadataResponse | PlainMessage<ListOrgMetadataResponse> | undefined): boolean {
    return proto3.util.equals(ListOrgMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetOrgMetadataRequest
 */
export class GetOrgMetadataRequest extends Message<GetOrgMetadataRequest> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  constructor(data?: PartialMessage<GetOrgMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetOrgMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrgMetadataRequest {
    return new GetOrgMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrgMetadataRequest {
    return new GetOrgMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrgMetadataRequest {
    return new GetOrgMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrgMetadataRequest | PlainMessage<GetOrgMetadataRequest> | undefined, b: GetOrgMetadataRequest | PlainMessage<GetOrgMetadataRequest> | undefined): boolean {
    return proto3.util.equals(GetOrgMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetOrgMetadataResponse
 */
export class GetOrgMetadataResponse extends Message<GetOrgMetadataResponse> {
  /**
   * @generated from field: zitadel.metadata.v1.Metadata metadata = 1;
   */
  metadata?: Metadata;

  constructor(data?: PartialMessage<GetOrgMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetOrgMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: Metadata },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrgMetadataResponse {
    return new GetOrgMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrgMetadataResponse {
    return new GetOrgMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrgMetadataResponse {
    return new GetOrgMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrgMetadataResponse | PlainMessage<GetOrgMetadataResponse> | undefined, b: GetOrgMetadataResponse | PlainMessage<GetOrgMetadataResponse> | undefined): boolean {
    return proto3.util.equals(GetOrgMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetOrgMetadataRequest
 */
export class SetOrgMetadataRequest extends Message<SetOrgMetadataRequest> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: bytes value = 2;
   */
  value = new Uint8Array(0);

  constructor(data?: PartialMessage<SetOrgMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetOrgMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetOrgMetadataRequest {
    return new SetOrgMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetOrgMetadataRequest {
    return new SetOrgMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetOrgMetadataRequest {
    return new SetOrgMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetOrgMetadataRequest | PlainMessage<SetOrgMetadataRequest> | undefined, b: SetOrgMetadataRequest | PlainMessage<SetOrgMetadataRequest> | undefined): boolean {
    return proto3.util.equals(SetOrgMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetOrgMetadataResponse
 */
export class SetOrgMetadataResponse extends Message<SetOrgMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetOrgMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetOrgMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetOrgMetadataResponse {
    return new SetOrgMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetOrgMetadataResponse {
    return new SetOrgMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetOrgMetadataResponse {
    return new SetOrgMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetOrgMetadataResponse | PlainMessage<SetOrgMetadataResponse> | undefined, b: SetOrgMetadataResponse | PlainMessage<SetOrgMetadataResponse> | undefined): boolean {
    return proto3.util.equals(SetOrgMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkSetOrgMetadataRequest
 */
export class BulkSetOrgMetadataRequest extends Message<BulkSetOrgMetadataRequest> {
  /**
   * @generated from field: repeated zitadel.management.v1.BulkSetOrgMetadataRequest.Metadata metadata = 1;
   */
  metadata: BulkSetOrgMetadataRequest_Metadata[] = [];

  constructor(data?: PartialMessage<BulkSetOrgMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkSetOrgMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: BulkSetOrgMetadataRequest_Metadata, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkSetOrgMetadataRequest {
    return new BulkSetOrgMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkSetOrgMetadataRequest {
    return new BulkSetOrgMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkSetOrgMetadataRequest {
    return new BulkSetOrgMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BulkSetOrgMetadataRequest | PlainMessage<BulkSetOrgMetadataRequest> | undefined, b: BulkSetOrgMetadataRequest | PlainMessage<BulkSetOrgMetadataRequest> | undefined): boolean {
    return proto3.util.equals(BulkSetOrgMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkSetOrgMetadataRequest.Metadata
 */
export class BulkSetOrgMetadataRequest_Metadata extends Message<BulkSetOrgMetadataRequest_Metadata> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: bytes value = 2;
   */
  value = new Uint8Array(0);

  constructor(data?: PartialMessage<BulkSetOrgMetadataRequest_Metadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkSetOrgMetadataRequest.Metadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkSetOrgMetadataRequest_Metadata {
    return new BulkSetOrgMetadataRequest_Metadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkSetOrgMetadataRequest_Metadata {
    return new BulkSetOrgMetadataRequest_Metadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkSetOrgMetadataRequest_Metadata {
    return new BulkSetOrgMetadataRequest_Metadata().fromJsonString(jsonString, options);
  }

  static equals(a: BulkSetOrgMetadataRequest_Metadata | PlainMessage<BulkSetOrgMetadataRequest_Metadata> | undefined, b: BulkSetOrgMetadataRequest_Metadata | PlainMessage<BulkSetOrgMetadataRequest_Metadata> | undefined): boolean {
    return proto3.util.equals(BulkSetOrgMetadataRequest_Metadata, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkSetOrgMetadataResponse
 */
export class BulkSetOrgMetadataResponse extends Message<BulkSetOrgMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<BulkSetOrgMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkSetOrgMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkSetOrgMetadataResponse {
    return new BulkSetOrgMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkSetOrgMetadataResponse {
    return new BulkSetOrgMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkSetOrgMetadataResponse {
    return new BulkSetOrgMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BulkSetOrgMetadataResponse | PlainMessage<BulkSetOrgMetadataResponse> | undefined, b: BulkSetOrgMetadataResponse | PlainMessage<BulkSetOrgMetadataResponse> | undefined): boolean {
    return proto3.util.equals(BulkSetOrgMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveOrgMetadataRequest
 */
export class RemoveOrgMetadataRequest extends Message<RemoveOrgMetadataRequest> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  constructor(data?: PartialMessage<RemoveOrgMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveOrgMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOrgMetadataRequest {
    return new RemoveOrgMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOrgMetadataRequest {
    return new RemoveOrgMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOrgMetadataRequest {
    return new RemoveOrgMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOrgMetadataRequest | PlainMessage<RemoveOrgMetadataRequest> | undefined, b: RemoveOrgMetadataRequest | PlainMessage<RemoveOrgMetadataRequest> | undefined): boolean {
    return proto3.util.equals(RemoveOrgMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveOrgMetadataResponse
 */
export class RemoveOrgMetadataResponse extends Message<RemoveOrgMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveOrgMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveOrgMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOrgMetadataResponse {
    return new RemoveOrgMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOrgMetadataResponse {
    return new RemoveOrgMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOrgMetadataResponse {
    return new RemoveOrgMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOrgMetadataResponse | PlainMessage<RemoveOrgMetadataResponse> | undefined, b: RemoveOrgMetadataResponse | PlainMessage<RemoveOrgMetadataResponse> | undefined): boolean {
    return proto3.util.equals(RemoveOrgMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkRemoveOrgMetadataRequest
 */
export class BulkRemoveOrgMetadataRequest extends Message<BulkRemoveOrgMetadataRequest> {
  /**
   * @generated from field: repeated string keys = 1;
   */
  keys: string[] = [];

  constructor(data?: PartialMessage<BulkRemoveOrgMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkRemoveOrgMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkRemoveOrgMetadataRequest {
    return new BulkRemoveOrgMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkRemoveOrgMetadataRequest {
    return new BulkRemoveOrgMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkRemoveOrgMetadataRequest {
    return new BulkRemoveOrgMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BulkRemoveOrgMetadataRequest | PlainMessage<BulkRemoveOrgMetadataRequest> | undefined, b: BulkRemoveOrgMetadataRequest | PlainMessage<BulkRemoveOrgMetadataRequest> | undefined): boolean {
    return proto3.util.equals(BulkRemoveOrgMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkRemoveOrgMetadataResponse
 */
export class BulkRemoveOrgMetadataResponse extends Message<BulkRemoveOrgMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<BulkRemoveOrgMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkRemoveOrgMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkRemoveOrgMetadataResponse {
    return new BulkRemoveOrgMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkRemoveOrgMetadataResponse {
    return new BulkRemoveOrgMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkRemoveOrgMetadataResponse {
    return new BulkRemoveOrgMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BulkRemoveOrgMetadataResponse | PlainMessage<BulkRemoveOrgMetadataResponse> | undefined, b: BulkRemoveOrgMetadataResponse | PlainMessage<BulkRemoveOrgMetadataResponse> | undefined): boolean {
    return proto3.util.equals(BulkRemoveOrgMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetProjectByIDRequest
 */
export class GetProjectByIDRequest extends Message<GetProjectByIDRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetProjectByIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetProjectByIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProjectByIDRequest {
    return new GetProjectByIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProjectByIDRequest {
    return new GetProjectByIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProjectByIDRequest {
    return new GetProjectByIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetProjectByIDRequest | PlainMessage<GetProjectByIDRequest> | undefined, b: GetProjectByIDRequest | PlainMessage<GetProjectByIDRequest> | undefined): boolean {
    return proto3.util.equals(GetProjectByIDRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetProjectByIDResponse
 */
export class GetProjectByIDResponse extends Message<GetProjectByIDResponse> {
  /**
   * @generated from field: zitadel.project.v1.Project project = 1;
   */
  project?: Project;

  constructor(data?: PartialMessage<GetProjectByIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetProjectByIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "message", T: Project },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProjectByIDResponse {
    return new GetProjectByIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProjectByIDResponse {
    return new GetProjectByIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProjectByIDResponse {
    return new GetProjectByIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetProjectByIDResponse | PlainMessage<GetProjectByIDResponse> | undefined, b: GetProjectByIDResponse | PlainMessage<GetProjectByIDResponse> | undefined): boolean {
    return proto3.util.equals(GetProjectByIDResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetGrantedProjectByIDRequest
 */
export class GetGrantedProjectByIDRequest extends Message<GetGrantedProjectByIDRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  constructor(data?: PartialMessage<GetGrantedProjectByIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetGrantedProjectByIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetGrantedProjectByIDRequest {
    return new GetGrantedProjectByIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetGrantedProjectByIDRequest {
    return new GetGrantedProjectByIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetGrantedProjectByIDRequest {
    return new GetGrantedProjectByIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetGrantedProjectByIDRequest | PlainMessage<GetGrantedProjectByIDRequest> | undefined, b: GetGrantedProjectByIDRequest | PlainMessage<GetGrantedProjectByIDRequest> | undefined): boolean {
    return proto3.util.equals(GetGrantedProjectByIDRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetGrantedProjectByIDResponse
 */
export class GetGrantedProjectByIDResponse extends Message<GetGrantedProjectByIDResponse> {
  /**
   * @generated from field: zitadel.project.v1.GrantedProject granted_project = 1;
   */
  grantedProject?: GrantedProject;

  constructor(data?: PartialMessage<GetGrantedProjectByIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetGrantedProjectByIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "granted_project", kind: "message", T: GrantedProject },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetGrantedProjectByIDResponse {
    return new GetGrantedProjectByIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetGrantedProjectByIDResponse {
    return new GetGrantedProjectByIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetGrantedProjectByIDResponse {
    return new GetGrantedProjectByIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetGrantedProjectByIDResponse | PlainMessage<GetGrantedProjectByIDResponse> | undefined, b: GetGrantedProjectByIDResponse | PlainMessage<GetGrantedProjectByIDResponse> | undefined): boolean {
    return proto3.util.equals(GetGrantedProjectByIDResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectsRequest
 */
export class ListProjectsRequest extends Message<ListProjectsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.project.v1.ProjectQuery queries = 2;
   */
  queries: ProjectQuery[] = [];

  constructor(data?: PartialMessage<ListProjectsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: ProjectQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectsRequest {
    return new ListProjectsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectsRequest {
    return new ListProjectsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectsRequest {
    return new ListProjectsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectsRequest | PlainMessage<ListProjectsRequest> | undefined, b: ListProjectsRequest | PlainMessage<ListProjectsRequest> | undefined): boolean {
    return proto3.util.equals(ListProjectsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectsResponse
 */
export class ListProjectsResponse extends Message<ListProjectsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.project.v1.Project result = 2;
   */
  result: Project[] = [];

  constructor(data?: PartialMessage<ListProjectsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Project, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectsResponse {
    return new ListProjectsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectsResponse {
    return new ListProjectsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectsResponse {
    return new ListProjectsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectsResponse | PlainMessage<ListProjectsResponse> | undefined, b: ListProjectsResponse | PlainMessage<ListProjectsResponse> | undefined): boolean {
    return proto3.util.equals(ListProjectsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListGrantedProjectsRequest
 */
export class ListGrantedProjectsRequest extends Message<ListGrantedProjectsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.project.v1.ProjectQuery queries = 2;
   */
  queries: ProjectQuery[] = [];

  constructor(data?: PartialMessage<ListGrantedProjectsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListGrantedProjectsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: ProjectQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGrantedProjectsRequest {
    return new ListGrantedProjectsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGrantedProjectsRequest {
    return new ListGrantedProjectsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGrantedProjectsRequest {
    return new ListGrantedProjectsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListGrantedProjectsRequest | PlainMessage<ListGrantedProjectsRequest> | undefined, b: ListGrantedProjectsRequest | PlainMessage<ListGrantedProjectsRequest> | undefined): boolean {
    return proto3.util.equals(ListGrantedProjectsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListGrantedProjectsResponse
 */
export class ListGrantedProjectsResponse extends Message<ListGrantedProjectsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.project.v1.GrantedProject result = 2;
   */
  result: GrantedProject[] = [];

  constructor(data?: PartialMessage<ListGrantedProjectsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListGrantedProjectsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: GrantedProject, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGrantedProjectsResponse {
    return new ListGrantedProjectsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGrantedProjectsResponse {
    return new ListGrantedProjectsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGrantedProjectsResponse {
    return new ListGrantedProjectsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListGrantedProjectsResponse | PlainMessage<ListGrantedProjectsResponse> | undefined, b: ListGrantedProjectsResponse | PlainMessage<ListGrantedProjectsResponse> | undefined): boolean {
    return proto3.util.equals(ListGrantedProjectsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectChangesRequest
 */
export class ListProjectChangesRequest extends Message<ListProjectChangesRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.change.v1.ChangeQuery query = 1;
   */
  query?: ChangeQuery;

  /**
   * @generated from field: string project_id = 2;
   */
  projectId = "";

  constructor(data?: PartialMessage<ListProjectChangesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectChangesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ChangeQuery },
    { no: 2, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectChangesRequest {
    return new ListProjectChangesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectChangesRequest {
    return new ListProjectChangesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectChangesRequest {
    return new ListProjectChangesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectChangesRequest | PlainMessage<ListProjectChangesRequest> | undefined, b: ListProjectChangesRequest | PlainMessage<ListProjectChangesRequest> | undefined): boolean {
    return proto3.util.equals(ListProjectChangesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectChangesResponse
 */
export class ListProjectChangesResponse extends Message<ListProjectChangesResponse> {
  /**
   * zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary info)
   *
   * @generated from field: repeated zitadel.change.v1.Change result = 2;
   */
  result: Change[] = [];

  constructor(data?: PartialMessage<ListProjectChangesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectChangesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "result", kind: "message", T: Change, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectChangesResponse {
    return new ListProjectChangesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectChangesResponse {
    return new ListProjectChangesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectChangesResponse {
    return new ListProjectChangesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectChangesResponse | PlainMessage<ListProjectChangesResponse> | undefined, b: ListProjectChangesResponse | PlainMessage<ListProjectChangesResponse> | undefined): boolean {
    return proto3.util.equals(ListProjectChangesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddProjectRequest
 */
export class AddProjectRequest extends Message<AddProjectRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: bool project_role_assertion = 2;
   */
  projectRoleAssertion = false;

  /**
   * @generated from field: bool project_role_check = 3;
   */
  projectRoleCheck = false;

  /**
   * @generated from field: bool has_project_check = 4;
   */
  hasProjectCheck = false;

  /**
   * @generated from field: zitadel.project.v1.PrivateLabelingSetting private_labeling_setting = 5;
   */
  privateLabelingSetting = PrivateLabelingSetting.UNSPECIFIED;

  constructor(data?: PartialMessage<AddProjectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddProjectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "project_role_assertion", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "project_role_check", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "has_project_check", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "private_labeling_setting", kind: "enum", T: proto3.getEnumType(PrivateLabelingSetting) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddProjectRequest {
    return new AddProjectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddProjectRequest {
    return new AddProjectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddProjectRequest {
    return new AddProjectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddProjectRequest | PlainMessage<AddProjectRequest> | undefined, b: AddProjectRequest | PlainMessage<AddProjectRequest> | undefined): boolean {
    return proto3.util.equals(AddProjectRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddProjectResponse
 */
export class AddProjectResponse extends Message<AddProjectResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddProjectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddProjectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddProjectResponse {
    return new AddProjectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddProjectResponse {
    return new AddProjectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddProjectResponse {
    return new AddProjectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddProjectResponse | PlainMessage<AddProjectResponse> | undefined, b: AddProjectResponse | PlainMessage<AddProjectResponse> | undefined): boolean {
    return proto3.util.equals(AddProjectResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateProjectRequest
 */
export class UpdateProjectRequest extends Message<UpdateProjectRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: bool project_role_assertion = 3;
   */
  projectRoleAssertion = false;

  /**
   * @generated from field: bool project_role_check = 4;
   */
  projectRoleCheck = false;

  /**
   * @generated from field: bool has_project_check = 5;
   */
  hasProjectCheck = false;

  /**
   * @generated from field: zitadel.project.v1.PrivateLabelingSetting private_labeling_setting = 6;
   */
  privateLabelingSetting = PrivateLabelingSetting.UNSPECIFIED;

  constructor(data?: PartialMessage<UpdateProjectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateProjectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "project_role_assertion", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "project_role_check", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "has_project_check", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "private_labeling_setting", kind: "enum", T: proto3.getEnumType(PrivateLabelingSetting) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProjectRequest {
    return new UpdateProjectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProjectRequest {
    return new UpdateProjectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProjectRequest {
    return new UpdateProjectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateProjectRequest | PlainMessage<UpdateProjectRequest> | undefined, b: UpdateProjectRequest | PlainMessage<UpdateProjectRequest> | undefined): boolean {
    return proto3.util.equals(UpdateProjectRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateProjectResponse
 */
export class UpdateProjectResponse extends Message<UpdateProjectResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateProjectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateProjectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProjectResponse {
    return new UpdateProjectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProjectResponse {
    return new UpdateProjectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProjectResponse {
    return new UpdateProjectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateProjectResponse | PlainMessage<UpdateProjectResponse> | undefined, b: UpdateProjectResponse | PlainMessage<UpdateProjectResponse> | undefined): boolean {
    return proto3.util.equals(UpdateProjectResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateProjectRequest
 */
export class DeactivateProjectRequest extends Message<DeactivateProjectRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeactivateProjectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateProjectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateProjectRequest {
    return new DeactivateProjectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateProjectRequest {
    return new DeactivateProjectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateProjectRequest {
    return new DeactivateProjectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateProjectRequest | PlainMessage<DeactivateProjectRequest> | undefined, b: DeactivateProjectRequest | PlainMessage<DeactivateProjectRequest> | undefined): boolean {
    return proto3.util.equals(DeactivateProjectRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateProjectResponse
 */
export class DeactivateProjectResponse extends Message<DeactivateProjectResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<DeactivateProjectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateProjectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateProjectResponse {
    return new DeactivateProjectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateProjectResponse {
    return new DeactivateProjectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateProjectResponse {
    return new DeactivateProjectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateProjectResponse | PlainMessage<DeactivateProjectResponse> | undefined, b: DeactivateProjectResponse | PlainMessage<DeactivateProjectResponse> | undefined): boolean {
    return proto3.util.equals(DeactivateProjectResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateProjectRequest
 */
export class ReactivateProjectRequest extends Message<ReactivateProjectRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<ReactivateProjectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateProjectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateProjectRequest {
    return new ReactivateProjectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateProjectRequest {
    return new ReactivateProjectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateProjectRequest {
    return new ReactivateProjectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateProjectRequest | PlainMessage<ReactivateProjectRequest> | undefined, b: ReactivateProjectRequest | PlainMessage<ReactivateProjectRequest> | undefined): boolean {
    return proto3.util.equals(ReactivateProjectRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateProjectResponse
 */
export class ReactivateProjectResponse extends Message<ReactivateProjectResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ReactivateProjectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateProjectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateProjectResponse {
    return new ReactivateProjectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateProjectResponse {
    return new ReactivateProjectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateProjectResponse {
    return new ReactivateProjectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateProjectResponse | PlainMessage<ReactivateProjectResponse> | undefined, b: ReactivateProjectResponse | PlainMessage<ReactivateProjectResponse> | undefined): boolean {
    return proto3.util.equals(ReactivateProjectResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveProjectRequest
 */
export class RemoveProjectRequest extends Message<RemoveProjectRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<RemoveProjectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveProjectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveProjectRequest {
    return new RemoveProjectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveProjectRequest {
    return new RemoveProjectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveProjectRequest {
    return new RemoveProjectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveProjectRequest | PlainMessage<RemoveProjectRequest> | undefined, b: RemoveProjectRequest | PlainMessage<RemoveProjectRequest> | undefined): boolean {
    return proto3.util.equals(RemoveProjectRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveProjectResponse
 */
export class RemoveProjectResponse extends Message<RemoveProjectResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveProjectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveProjectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveProjectResponse {
    return new RemoveProjectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveProjectResponse {
    return new RemoveProjectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveProjectResponse {
    return new RemoveProjectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveProjectResponse | PlainMessage<RemoveProjectResponse> | undefined, b: RemoveProjectResponse | PlainMessage<RemoveProjectResponse> | undefined): boolean {
    return proto3.util.equals(RemoveProjectResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.ListProjectMemberRolesRequest
 */
export class ListProjectMemberRolesRequest extends Message<ListProjectMemberRolesRequest> {
  constructor(data?: PartialMessage<ListProjectMemberRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectMemberRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectMemberRolesRequest {
    return new ListProjectMemberRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectMemberRolesRequest {
    return new ListProjectMemberRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectMemberRolesRequest {
    return new ListProjectMemberRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectMemberRolesRequest | PlainMessage<ListProjectMemberRolesRequest> | undefined, b: ListProjectMemberRolesRequest | PlainMessage<ListProjectMemberRolesRequest> | undefined): boolean {
    return proto3.util.equals(ListProjectMemberRolesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectMemberRolesResponse
 */
export class ListProjectMemberRolesResponse extends Message<ListProjectMemberRolesResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated string result = 2;
   */
  result: string[] = [];

  constructor(data?: PartialMessage<ListProjectMemberRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectMemberRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectMemberRolesResponse {
    return new ListProjectMemberRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectMemberRolesResponse {
    return new ListProjectMemberRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectMemberRolesResponse {
    return new ListProjectMemberRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectMemberRolesResponse | PlainMessage<ListProjectMemberRolesResponse> | undefined, b: ListProjectMemberRolesResponse | PlainMessage<ListProjectMemberRolesResponse> | undefined): boolean {
    return proto3.util.equals(ListProjectMemberRolesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddProjectRoleRequest
 */
export class AddProjectRoleRequest extends Message<AddProjectRoleRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string role_key = 2;
   */
  roleKey = "";

  /**
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  /**
   * @generated from field: string group = 4;
   */
  group = "";

  constructor(data?: PartialMessage<AddProjectRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddProjectRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "group", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddProjectRoleRequest {
    return new AddProjectRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddProjectRoleRequest {
    return new AddProjectRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddProjectRoleRequest {
    return new AddProjectRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddProjectRoleRequest | PlainMessage<AddProjectRoleRequest> | undefined, b: AddProjectRoleRequest | PlainMessage<AddProjectRoleRequest> | undefined): boolean {
    return proto3.util.equals(AddProjectRoleRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddProjectRoleResponse
 */
export class AddProjectRoleResponse extends Message<AddProjectRoleResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddProjectRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddProjectRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddProjectRoleResponse {
    return new AddProjectRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddProjectRoleResponse {
    return new AddProjectRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddProjectRoleResponse {
    return new AddProjectRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddProjectRoleResponse | PlainMessage<AddProjectRoleResponse> | undefined, b: AddProjectRoleResponse | PlainMessage<AddProjectRoleResponse> | undefined): boolean {
    return proto3.util.equals(AddProjectRoleResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkAddProjectRolesRequest
 */
export class BulkAddProjectRolesRequest extends Message<BulkAddProjectRolesRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: repeated zitadel.management.v1.BulkAddProjectRolesRequest.Role roles = 2;
   */
  roles: BulkAddProjectRolesRequest_Role[] = [];

  constructor(data?: PartialMessage<BulkAddProjectRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkAddProjectRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "roles", kind: "message", T: BulkAddProjectRolesRequest_Role, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkAddProjectRolesRequest {
    return new BulkAddProjectRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkAddProjectRolesRequest {
    return new BulkAddProjectRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkAddProjectRolesRequest {
    return new BulkAddProjectRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BulkAddProjectRolesRequest | PlainMessage<BulkAddProjectRolesRequest> | undefined, b: BulkAddProjectRolesRequest | PlainMessage<BulkAddProjectRolesRequest> | undefined): boolean {
    return proto3.util.equals(BulkAddProjectRolesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkAddProjectRolesRequest.Role
 */
export class BulkAddProjectRolesRequest_Role extends Message<BulkAddProjectRolesRequest_Role> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * @generated from field: string group = 3;
   */
  group = "";

  constructor(data?: PartialMessage<BulkAddProjectRolesRequest_Role>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkAddProjectRolesRequest.Role";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "group", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkAddProjectRolesRequest_Role {
    return new BulkAddProjectRolesRequest_Role().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkAddProjectRolesRequest_Role {
    return new BulkAddProjectRolesRequest_Role().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkAddProjectRolesRequest_Role {
    return new BulkAddProjectRolesRequest_Role().fromJsonString(jsonString, options);
  }

  static equals(a: BulkAddProjectRolesRequest_Role | PlainMessage<BulkAddProjectRolesRequest_Role> | undefined, b: BulkAddProjectRolesRequest_Role | PlainMessage<BulkAddProjectRolesRequest_Role> | undefined): boolean {
    return proto3.util.equals(BulkAddProjectRolesRequest_Role, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkAddProjectRolesResponse
 */
export class BulkAddProjectRolesResponse extends Message<BulkAddProjectRolesResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<BulkAddProjectRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkAddProjectRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkAddProjectRolesResponse {
    return new BulkAddProjectRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkAddProjectRolesResponse {
    return new BulkAddProjectRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkAddProjectRolesResponse {
    return new BulkAddProjectRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BulkAddProjectRolesResponse | PlainMessage<BulkAddProjectRolesResponse> | undefined, b: BulkAddProjectRolesResponse | PlainMessage<BulkAddProjectRolesResponse> | undefined): boolean {
    return proto3.util.equals(BulkAddProjectRolesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateProjectRoleRequest
 */
export class UpdateProjectRoleRequest extends Message<UpdateProjectRoleRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string role_key = 2;
   */
  roleKey = "";

  /**
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  /**
   * @generated from field: string group = 4;
   */
  group = "";

  constructor(data?: PartialMessage<UpdateProjectRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateProjectRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "group", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProjectRoleRequest {
    return new UpdateProjectRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProjectRoleRequest {
    return new UpdateProjectRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProjectRoleRequest {
    return new UpdateProjectRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateProjectRoleRequest | PlainMessage<UpdateProjectRoleRequest> | undefined, b: UpdateProjectRoleRequest | PlainMessage<UpdateProjectRoleRequest> | undefined): boolean {
    return proto3.util.equals(UpdateProjectRoleRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateProjectRoleResponse
 */
export class UpdateProjectRoleResponse extends Message<UpdateProjectRoleResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateProjectRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateProjectRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProjectRoleResponse {
    return new UpdateProjectRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProjectRoleResponse {
    return new UpdateProjectRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProjectRoleResponse {
    return new UpdateProjectRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateProjectRoleResponse | PlainMessage<UpdateProjectRoleResponse> | undefined, b: UpdateProjectRoleResponse | PlainMessage<UpdateProjectRoleResponse> | undefined): boolean {
    return proto3.util.equals(UpdateProjectRoleResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveProjectRoleRequest
 */
export class RemoveProjectRoleRequest extends Message<RemoveProjectRoleRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string role_key = 2;
   */
  roleKey = "";

  constructor(data?: PartialMessage<RemoveProjectRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveProjectRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveProjectRoleRequest {
    return new RemoveProjectRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveProjectRoleRequest {
    return new RemoveProjectRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveProjectRoleRequest {
    return new RemoveProjectRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveProjectRoleRequest | PlainMessage<RemoveProjectRoleRequest> | undefined, b: RemoveProjectRoleRequest | PlainMessage<RemoveProjectRoleRequest> | undefined): boolean {
    return proto3.util.equals(RemoveProjectRoleRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveProjectRoleResponse
 */
export class RemoveProjectRoleResponse extends Message<RemoveProjectRoleResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveProjectRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveProjectRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveProjectRoleResponse {
    return new RemoveProjectRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveProjectRoleResponse {
    return new RemoveProjectRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveProjectRoleResponse {
    return new RemoveProjectRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveProjectRoleResponse | PlainMessage<RemoveProjectRoleResponse> | undefined, b: RemoveProjectRoleResponse | PlainMessage<RemoveProjectRoleResponse> | undefined): boolean {
    return proto3.util.equals(RemoveProjectRoleResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectRolesRequest
 */
export class ListProjectRolesRequest extends Message<ListProjectRolesRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 2;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.project.v1.RoleQuery queries = 3;
   */
  queries: RoleQuery[] = [];

  constructor(data?: PartialMessage<ListProjectRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "query", kind: "message", T: ListQuery },
    { no: 3, name: "queries", kind: "message", T: RoleQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectRolesRequest {
    return new ListProjectRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectRolesRequest {
    return new ListProjectRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectRolesRequest {
    return new ListProjectRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectRolesRequest | PlainMessage<ListProjectRolesRequest> | undefined, b: ListProjectRolesRequest | PlainMessage<ListProjectRolesRequest> | undefined): boolean {
    return proto3.util.equals(ListProjectRolesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectRolesResponse
 */
export class ListProjectRolesResponse extends Message<ListProjectRolesResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.project.v1.Role result = 2;
   */
  result: Role[] = [];

  constructor(data?: PartialMessage<ListProjectRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Role, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectRolesResponse {
    return new ListProjectRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectRolesResponse {
    return new ListProjectRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectRolesResponse {
    return new ListProjectRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectRolesResponse | PlainMessage<ListProjectRolesResponse> | undefined, b: ListProjectRolesResponse | PlainMessage<ListProjectRolesResponse> | undefined): boolean {
    return proto3.util.equals(ListProjectRolesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListGrantedProjectRolesRequest
 */
export class ListGrantedProjectRolesRequest extends Message<ListGrantedProjectRolesRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 3;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.project.v1.RoleQuery queries = 4;
   */
  queries: RoleQuery[] = [];

  constructor(data?: PartialMessage<ListGrantedProjectRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListGrantedProjectRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "query", kind: "message", T: ListQuery },
    { no: 4, name: "queries", kind: "message", T: RoleQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGrantedProjectRolesRequest {
    return new ListGrantedProjectRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGrantedProjectRolesRequest {
    return new ListGrantedProjectRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGrantedProjectRolesRequest {
    return new ListGrantedProjectRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListGrantedProjectRolesRequest | PlainMessage<ListGrantedProjectRolesRequest> | undefined, b: ListGrantedProjectRolesRequest | PlainMessage<ListGrantedProjectRolesRequest> | undefined): boolean {
    return proto3.util.equals(ListGrantedProjectRolesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListGrantedProjectRolesResponse
 */
export class ListGrantedProjectRolesResponse extends Message<ListGrantedProjectRolesResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.project.v1.Role result = 2;
   */
  result: Role[] = [];

  constructor(data?: PartialMessage<ListGrantedProjectRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListGrantedProjectRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Role, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGrantedProjectRolesResponse {
    return new ListGrantedProjectRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGrantedProjectRolesResponse {
    return new ListGrantedProjectRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGrantedProjectRolesResponse {
    return new ListGrantedProjectRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListGrantedProjectRolesResponse | PlainMessage<ListGrantedProjectRolesResponse> | undefined, b: ListGrantedProjectRolesResponse | PlainMessage<ListGrantedProjectRolesResponse> | undefined): boolean {
    return proto3.util.equals(ListGrantedProjectRolesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectMembersRequest
 */
export class ListProjectMembersRequest extends Message<ListProjectMembersRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 2;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.member.v1.SearchQuery queries = 3;
   */
  queries: SearchQuery$1[] = [];

  constructor(data?: PartialMessage<ListProjectMembersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectMembersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "query", kind: "message", T: ListQuery },
    { no: 3, name: "queries", kind: "message", T: SearchQuery$1, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectMembersRequest {
    return new ListProjectMembersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectMembersRequest {
    return new ListProjectMembersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectMembersRequest {
    return new ListProjectMembersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectMembersRequest | PlainMessage<ListProjectMembersRequest> | undefined, b: ListProjectMembersRequest | PlainMessage<ListProjectMembersRequest> | undefined): boolean {
    return proto3.util.equals(ListProjectMembersRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectMembersResponse
 */
export class ListProjectMembersResponse extends Message<ListProjectMembersResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.member.v1.Member result = 2;
   */
  result: Member[] = [];

  constructor(data?: PartialMessage<ListProjectMembersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectMembersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Member, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectMembersResponse {
    return new ListProjectMembersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectMembersResponse {
    return new ListProjectMembersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectMembersResponse {
    return new ListProjectMembersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectMembersResponse | PlainMessage<ListProjectMembersResponse> | undefined, b: ListProjectMembersResponse | PlainMessage<ListProjectMembersResponse> | undefined): boolean {
    return proto3.util.equals(ListProjectMembersResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddProjectMemberRequest
 */
export class AddProjectMemberRequest extends Message<AddProjectMemberRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string user_id = 2;
   */
  userId = "";

  /**
   * @generated from field: repeated string roles = 3;
   */
  roles: string[] = [];

  constructor(data?: PartialMessage<AddProjectMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddProjectMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddProjectMemberRequest {
    return new AddProjectMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddProjectMemberRequest {
    return new AddProjectMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddProjectMemberRequest {
    return new AddProjectMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddProjectMemberRequest | PlainMessage<AddProjectMemberRequest> | undefined, b: AddProjectMemberRequest | PlainMessage<AddProjectMemberRequest> | undefined): boolean {
    return proto3.util.equals(AddProjectMemberRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddProjectMemberResponse
 */
export class AddProjectMemberResponse extends Message<AddProjectMemberResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddProjectMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddProjectMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddProjectMemberResponse {
    return new AddProjectMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddProjectMemberResponse {
    return new AddProjectMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddProjectMemberResponse {
    return new AddProjectMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddProjectMemberResponse | PlainMessage<AddProjectMemberResponse> | undefined, b: AddProjectMemberResponse | PlainMessage<AddProjectMemberResponse> | undefined): boolean {
    return proto3.util.equals(AddProjectMemberResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateProjectMemberRequest
 */
export class UpdateProjectMemberRequest extends Message<UpdateProjectMemberRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string user_id = 2;
   */
  userId = "";

  /**
   * @generated from field: repeated string roles = 3;
   */
  roles: string[] = [];

  constructor(data?: PartialMessage<UpdateProjectMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateProjectMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProjectMemberRequest {
    return new UpdateProjectMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProjectMemberRequest {
    return new UpdateProjectMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProjectMemberRequest {
    return new UpdateProjectMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateProjectMemberRequest | PlainMessage<UpdateProjectMemberRequest> | undefined, b: UpdateProjectMemberRequest | PlainMessage<UpdateProjectMemberRequest> | undefined): boolean {
    return proto3.util.equals(UpdateProjectMemberRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateProjectMemberResponse
 */
export class UpdateProjectMemberResponse extends Message<UpdateProjectMemberResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateProjectMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateProjectMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProjectMemberResponse {
    return new UpdateProjectMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProjectMemberResponse {
    return new UpdateProjectMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProjectMemberResponse {
    return new UpdateProjectMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateProjectMemberResponse | PlainMessage<UpdateProjectMemberResponse> | undefined, b: UpdateProjectMemberResponse | PlainMessage<UpdateProjectMemberResponse> | undefined): boolean {
    return proto3.util.equals(UpdateProjectMemberResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveProjectMemberRequest
 */
export class RemoveProjectMemberRequest extends Message<RemoveProjectMemberRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string user_id = 2;
   */
  userId = "";

  constructor(data?: PartialMessage<RemoveProjectMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveProjectMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveProjectMemberRequest {
    return new RemoveProjectMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveProjectMemberRequest {
    return new RemoveProjectMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveProjectMemberRequest {
    return new RemoveProjectMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveProjectMemberRequest | PlainMessage<RemoveProjectMemberRequest> | undefined, b: RemoveProjectMemberRequest | PlainMessage<RemoveProjectMemberRequest> | undefined): boolean {
    return proto3.util.equals(RemoveProjectMemberRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveProjectMemberResponse
 */
export class RemoveProjectMemberResponse extends Message<RemoveProjectMemberResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveProjectMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveProjectMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveProjectMemberResponse {
    return new RemoveProjectMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveProjectMemberResponse {
    return new RemoveProjectMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveProjectMemberResponse {
    return new RemoveProjectMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveProjectMemberResponse | PlainMessage<RemoveProjectMemberResponse> | undefined, b: RemoveProjectMemberResponse | PlainMessage<RemoveProjectMemberResponse> | undefined): boolean {
    return proto3.util.equals(RemoveProjectMemberResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetAppByIDRequest
 */
export class GetAppByIDRequest extends Message<GetAppByIDRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  constructor(data?: PartialMessage<GetAppByIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetAppByIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAppByIDRequest {
    return new GetAppByIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAppByIDRequest {
    return new GetAppByIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAppByIDRequest {
    return new GetAppByIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAppByIDRequest | PlainMessage<GetAppByIDRequest> | undefined, b: GetAppByIDRequest | PlainMessage<GetAppByIDRequest> | undefined): boolean {
    return proto3.util.equals(GetAppByIDRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetAppByIDResponse
 */
export class GetAppByIDResponse extends Message<GetAppByIDResponse> {
  /**
   * @generated from field: zitadel.app.v1.App app = 1;
   */
  app?: App;

  constructor(data?: PartialMessage<GetAppByIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetAppByIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app", kind: "message", T: App },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAppByIDResponse {
    return new GetAppByIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAppByIDResponse {
    return new GetAppByIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAppByIDResponse {
    return new GetAppByIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAppByIDResponse | PlainMessage<GetAppByIDResponse> | undefined, b: GetAppByIDResponse | PlainMessage<GetAppByIDResponse> | undefined): boolean {
    return proto3.util.equals(GetAppByIDResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListAppsRequest
 */
export class ListAppsRequest extends Message<ListAppsRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 2;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.app.v1.AppQuery queries = 3;
   */
  queries: AppQuery[] = [];

  constructor(data?: PartialMessage<ListAppsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListAppsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "query", kind: "message", T: ListQuery },
    { no: 3, name: "queries", kind: "message", T: AppQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAppsRequest {
    return new ListAppsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAppsRequest {
    return new ListAppsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAppsRequest {
    return new ListAppsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAppsRequest | PlainMessage<ListAppsRequest> | undefined, b: ListAppsRequest | PlainMessage<ListAppsRequest> | undefined): boolean {
    return proto3.util.equals(ListAppsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListAppsResponse
 */
export class ListAppsResponse extends Message<ListAppsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.app.v1.App result = 2;
   */
  result: App[] = [];

  constructor(data?: PartialMessage<ListAppsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListAppsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: App, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAppsResponse {
    return new ListAppsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAppsResponse {
    return new ListAppsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAppsResponse {
    return new ListAppsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAppsResponse | PlainMessage<ListAppsResponse> | undefined, b: ListAppsResponse | PlainMessage<ListAppsResponse> | undefined): boolean {
    return proto3.util.equals(ListAppsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListAppChangesRequest
 */
export class ListAppChangesRequest extends Message<ListAppChangesRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.change.v1.ChangeQuery query = 1;
   */
  query?: ChangeQuery;

  /**
   * @generated from field: string project_id = 2;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 3;
   */
  appId = "";

  constructor(data?: PartialMessage<ListAppChangesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListAppChangesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ChangeQuery },
    { no: 2, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAppChangesRequest {
    return new ListAppChangesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAppChangesRequest {
    return new ListAppChangesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAppChangesRequest {
    return new ListAppChangesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAppChangesRequest | PlainMessage<ListAppChangesRequest> | undefined, b: ListAppChangesRequest | PlainMessage<ListAppChangesRequest> | undefined): boolean {
    return proto3.util.equals(ListAppChangesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListAppChangesResponse
 */
export class ListAppChangesResponse extends Message<ListAppChangesResponse> {
  /**
   * zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary info)
   *
   * @generated from field: repeated zitadel.change.v1.Change result = 2;
   */
  result: Change[] = [];

  constructor(data?: PartialMessage<ListAppChangesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListAppChangesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "result", kind: "message", T: Change, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAppChangesResponse {
    return new ListAppChangesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAppChangesResponse {
    return new ListAppChangesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAppChangesResponse {
    return new ListAppChangesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAppChangesResponse | PlainMessage<ListAppChangesResponse> | undefined, b: ListAppChangesResponse | PlainMessage<ListAppChangesResponse> | undefined): boolean {
    return proto3.util.equals(ListAppChangesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddOIDCAppRequest
 */
export class AddOIDCAppRequest extends Message<AddOIDCAppRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: repeated string redirect_uris = 3;
   */
  redirectUris: string[] = [];

  /**
   * @generated from field: repeated zitadel.app.v1.OIDCResponseType response_types = 4;
   */
  responseTypes: OIDCResponseType[] = [];

  /**
   * @generated from field: repeated zitadel.app.v1.OIDCGrantType grant_types = 5;
   */
  grantTypes: OIDCGrantType[] = [];

  /**
   * @generated from field: zitadel.app.v1.OIDCAppType app_type = 6;
   */
  appType = OIDCAppType.OIDC_APP_TYPE_WEB;

  /**
   * @generated from field: zitadel.app.v1.OIDCAuthMethodType auth_method_type = 7;
   */
  authMethodType = OIDCAuthMethodType.OIDC_AUTH_METHOD_TYPE_BASIC;

  /**
   * @generated from field: repeated string post_logout_redirect_uris = 8;
   */
  postLogoutRedirectUris: string[] = [];

  /**
   * @generated from field: zitadel.app.v1.OIDCVersion version = 9;
   */
  version = OIDCVersion.OIDC_VERSION_1_0;

  /**
   * @generated from field: bool dev_mode = 10;
   */
  devMode = false;

  /**
   * @generated from field: zitadel.app.v1.OIDCTokenType access_token_type = 11;
   */
  accessTokenType = OIDCTokenType.OIDC_TOKEN_TYPE_BEARER;

  /**
   * @generated from field: bool access_token_role_assertion = 12;
   */
  accessTokenRoleAssertion = false;

  /**
   * @generated from field: bool id_token_role_assertion = 13;
   */
  idTokenRoleAssertion = false;

  /**
   * @generated from field: bool id_token_userinfo_assertion = 14;
   */
  idTokenUserinfoAssertion = false;

  /**
   * @generated from field: google.protobuf.Duration clock_skew = 15;
   */
  clockSkew?: Duration;

  /**
   * @generated from field: repeated string additional_origins = 16;
   */
  additionalOrigins: string[] = [];

  /**
   * @generated from field: bool skip_native_app_success_page = 17;
   */
  skipNativeAppSuccessPage = false;

  constructor(data?: PartialMessage<AddOIDCAppRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddOIDCAppRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "redirect_uris", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "response_types", kind: "enum", T: proto3.getEnumType(OIDCResponseType), repeated: true },
    { no: 5, name: "grant_types", kind: "enum", T: proto3.getEnumType(OIDCGrantType), repeated: true },
    { no: 6, name: "app_type", kind: "enum", T: proto3.getEnumType(OIDCAppType) },
    { no: 7, name: "auth_method_type", kind: "enum", T: proto3.getEnumType(OIDCAuthMethodType) },
    { no: 8, name: "post_logout_redirect_uris", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "version", kind: "enum", T: proto3.getEnumType(OIDCVersion) },
    { no: 10, name: "dev_mode", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "access_token_type", kind: "enum", T: proto3.getEnumType(OIDCTokenType) },
    { no: 12, name: "access_token_role_assertion", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "id_token_role_assertion", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "id_token_userinfo_assertion", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 15, name: "clock_skew", kind: "message", T: Duration },
    { no: 16, name: "additional_origins", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 17, name: "skip_native_app_success_page", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOIDCAppRequest {
    return new AddOIDCAppRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOIDCAppRequest {
    return new AddOIDCAppRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOIDCAppRequest {
    return new AddOIDCAppRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddOIDCAppRequest | PlainMessage<AddOIDCAppRequest> | undefined, b: AddOIDCAppRequest | PlainMessage<AddOIDCAppRequest> | undefined): boolean {
    return proto3.util.equals(AddOIDCAppRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddOIDCAppResponse
 */
export class AddOIDCAppResponse extends Message<AddOIDCAppResponse> {
  /**
   * @generated from field: string app_id = 1;
   */
  appId = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: bool none_compliant = 5;
   */
  noneCompliant = false;

  /**
   * @generated from field: repeated zitadel.v1.LocalizedMessage compliance_problems = 6;
   */
  complianceProblems: LocalizedMessage[] = [];

  constructor(data?: PartialMessage<AddOIDCAppResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddOIDCAppResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "none_compliant", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "compliance_problems", kind: "message", T: LocalizedMessage, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOIDCAppResponse {
    return new AddOIDCAppResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOIDCAppResponse {
    return new AddOIDCAppResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOIDCAppResponse {
    return new AddOIDCAppResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddOIDCAppResponse | PlainMessage<AddOIDCAppResponse> | undefined, b: AddOIDCAppResponse | PlainMessage<AddOIDCAppResponse> | undefined): boolean {
    return proto3.util.equals(AddOIDCAppResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddSAMLAppRequest
 */
export class AddSAMLAppRequest extends Message<AddSAMLAppRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from oneof zitadel.management.v1.AddSAMLAppRequest.metadata
   */
  metadata: {
    /**
     * @generated from field: bytes metadata_xml = 3;
     */
    value: Uint8Array;
    case: "metadataXml";
  } | {
    /**
     * @generated from field: string metadata_url = 4;
     */
    value: string;
    case: "metadataUrl";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<AddSAMLAppRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddSAMLAppRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "metadata_xml", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "metadata" },
    { no: 4, name: "metadata_url", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "metadata" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSAMLAppRequest {
    return new AddSAMLAppRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSAMLAppRequest {
    return new AddSAMLAppRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSAMLAppRequest {
    return new AddSAMLAppRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddSAMLAppRequest | PlainMessage<AddSAMLAppRequest> | undefined, b: AddSAMLAppRequest | PlainMessage<AddSAMLAppRequest> | undefined): boolean {
    return proto3.util.equals(AddSAMLAppRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddSAMLAppResponse
 */
export class AddSAMLAppResponse extends Message<AddSAMLAppResponse> {
  /**
   * @generated from field: string app_id = 1;
   */
  appId = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddSAMLAppResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddSAMLAppResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSAMLAppResponse {
    return new AddSAMLAppResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSAMLAppResponse {
    return new AddSAMLAppResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSAMLAppResponse {
    return new AddSAMLAppResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddSAMLAppResponse | PlainMessage<AddSAMLAppResponse> | undefined, b: AddSAMLAppResponse | PlainMessage<AddSAMLAppResponse> | undefined): boolean {
    return proto3.util.equals(AddSAMLAppResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddAPIAppRequest
 */
export class AddAPIAppRequest extends Message<AddAPIAppRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: zitadel.app.v1.APIAuthMethodType auth_method_type = 3;
   */
  authMethodType = APIAuthMethodType.API_AUTH_METHOD_TYPE_BASIC;

  constructor(data?: PartialMessage<AddAPIAppRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddAPIAppRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "auth_method_type", kind: "enum", T: proto3.getEnumType(APIAuthMethodType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddAPIAppRequest {
    return new AddAPIAppRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddAPIAppRequest {
    return new AddAPIAppRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddAPIAppRequest {
    return new AddAPIAppRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddAPIAppRequest | PlainMessage<AddAPIAppRequest> | undefined, b: AddAPIAppRequest | PlainMessage<AddAPIAppRequest> | undefined): boolean {
    return proto3.util.equals(AddAPIAppRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddAPIAppResponse
 */
export class AddAPIAppResponse extends Message<AddAPIAppResponse> {
  /**
   * @generated from field: string app_id = 1;
   */
  appId = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  constructor(data?: PartialMessage<AddAPIAppResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddAPIAppResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddAPIAppResponse {
    return new AddAPIAppResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddAPIAppResponse {
    return new AddAPIAppResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddAPIAppResponse {
    return new AddAPIAppResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddAPIAppResponse | PlainMessage<AddAPIAppResponse> | undefined, b: AddAPIAppResponse | PlainMessage<AddAPIAppResponse> | undefined): boolean {
    return proto3.util.equals(AddAPIAppResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateAppRequest
 */
export class UpdateAppRequest extends Message<UpdateAppRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  /**
   * @generated from field: string name = 5;
   */
  name = "";

  constructor(data?: PartialMessage<UpdateAppRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateAppRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppRequest {
    return new UpdateAppRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppRequest {
    return new UpdateAppRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppRequest {
    return new UpdateAppRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAppRequest | PlainMessage<UpdateAppRequest> | undefined, b: UpdateAppRequest | PlainMessage<UpdateAppRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAppRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateAppResponse
 */
export class UpdateAppResponse extends Message<UpdateAppResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateAppResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateAppResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppResponse {
    return new UpdateAppResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppResponse {
    return new UpdateAppResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppResponse {
    return new UpdateAppResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAppResponse | PlainMessage<UpdateAppResponse> | undefined, b: UpdateAppResponse | PlainMessage<UpdateAppResponse> | undefined): boolean {
    return proto3.util.equals(UpdateAppResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateOIDCAppConfigRequest
 */
export class UpdateOIDCAppConfigRequest extends Message<UpdateOIDCAppConfigRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  /**
   * @generated from field: repeated string redirect_uris = 3;
   */
  redirectUris: string[] = [];

  /**
   * @generated from field: repeated zitadel.app.v1.OIDCResponseType response_types = 4;
   */
  responseTypes: OIDCResponseType[] = [];

  /**
   * @generated from field: repeated zitadel.app.v1.OIDCGrantType grant_types = 5;
   */
  grantTypes: OIDCGrantType[] = [];

  /**
   * @generated from field: zitadel.app.v1.OIDCAppType app_type = 6;
   */
  appType = OIDCAppType.OIDC_APP_TYPE_WEB;

  /**
   * @generated from field: zitadel.app.v1.OIDCAuthMethodType auth_method_type = 7;
   */
  authMethodType = OIDCAuthMethodType.OIDC_AUTH_METHOD_TYPE_BASIC;

  /**
   * @generated from field: repeated string post_logout_redirect_uris = 8;
   */
  postLogoutRedirectUris: string[] = [];

  /**
   * @generated from field: bool dev_mode = 9;
   */
  devMode = false;

  /**
   * @generated from field: zitadel.app.v1.OIDCTokenType access_token_type = 10;
   */
  accessTokenType = OIDCTokenType.OIDC_TOKEN_TYPE_BEARER;

  /**
   * @generated from field: bool access_token_role_assertion = 11;
   */
  accessTokenRoleAssertion = false;

  /**
   * @generated from field: bool id_token_role_assertion = 12;
   */
  idTokenRoleAssertion = false;

  /**
   * @generated from field: bool id_token_userinfo_assertion = 13;
   */
  idTokenUserinfoAssertion = false;

  /**
   * @generated from field: google.protobuf.Duration clock_skew = 14;
   */
  clockSkew?: Duration;

  /**
   * @generated from field: repeated string additional_origins = 15;
   */
  additionalOrigins: string[] = [];

  /**
   * @generated from field: bool skip_native_app_success_page = 16;
   */
  skipNativeAppSuccessPage = false;

  constructor(data?: PartialMessage<UpdateOIDCAppConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateOIDCAppConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "redirect_uris", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "response_types", kind: "enum", T: proto3.getEnumType(OIDCResponseType), repeated: true },
    { no: 5, name: "grant_types", kind: "enum", T: proto3.getEnumType(OIDCGrantType), repeated: true },
    { no: 6, name: "app_type", kind: "enum", T: proto3.getEnumType(OIDCAppType) },
    { no: 7, name: "auth_method_type", kind: "enum", T: proto3.getEnumType(OIDCAuthMethodType) },
    { no: 8, name: "post_logout_redirect_uris", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "dev_mode", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "access_token_type", kind: "enum", T: proto3.getEnumType(OIDCTokenType) },
    { no: 11, name: "access_token_role_assertion", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "id_token_role_assertion", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "id_token_userinfo_assertion", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "clock_skew", kind: "message", T: Duration },
    { no: 15, name: "additional_origins", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 16, name: "skip_native_app_success_page", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOIDCAppConfigRequest {
    return new UpdateOIDCAppConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOIDCAppConfigRequest {
    return new UpdateOIDCAppConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOIDCAppConfigRequest {
    return new UpdateOIDCAppConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOIDCAppConfigRequest | PlainMessage<UpdateOIDCAppConfigRequest> | undefined, b: UpdateOIDCAppConfigRequest | PlainMessage<UpdateOIDCAppConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOIDCAppConfigRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateOIDCAppConfigResponse
 */
export class UpdateOIDCAppConfigResponse extends Message<UpdateOIDCAppConfigResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateOIDCAppConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateOIDCAppConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOIDCAppConfigResponse {
    return new UpdateOIDCAppConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOIDCAppConfigResponse {
    return new UpdateOIDCAppConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOIDCAppConfigResponse {
    return new UpdateOIDCAppConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOIDCAppConfigResponse | PlainMessage<UpdateOIDCAppConfigResponse> | undefined, b: UpdateOIDCAppConfigResponse | PlainMessage<UpdateOIDCAppConfigResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOIDCAppConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateSAMLAppConfigRequest
 */
export class UpdateSAMLAppConfigRequest extends Message<UpdateSAMLAppConfigRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  /**
   * @generated from oneof zitadel.management.v1.UpdateSAMLAppConfigRequest.metadata
   */
  metadata: {
    /**
     * @generated from field: bytes metadata_xml = 3;
     */
    value: Uint8Array;
    case: "metadataXml";
  } | {
    /**
     * @generated from field: string metadata_url = 4;
     */
    value: string;
    case: "metadataUrl";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UpdateSAMLAppConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateSAMLAppConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "metadata_xml", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "metadata" },
    { no: 4, name: "metadata_url", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "metadata" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSAMLAppConfigRequest {
    return new UpdateSAMLAppConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSAMLAppConfigRequest {
    return new UpdateSAMLAppConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSAMLAppConfigRequest {
    return new UpdateSAMLAppConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSAMLAppConfigRequest | PlainMessage<UpdateSAMLAppConfigRequest> | undefined, b: UpdateSAMLAppConfigRequest | PlainMessage<UpdateSAMLAppConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateSAMLAppConfigRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateSAMLAppConfigResponse
 */
export class UpdateSAMLAppConfigResponse extends Message<UpdateSAMLAppConfigResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateSAMLAppConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateSAMLAppConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSAMLAppConfigResponse {
    return new UpdateSAMLAppConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSAMLAppConfigResponse {
    return new UpdateSAMLAppConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSAMLAppConfigResponse {
    return new UpdateSAMLAppConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSAMLAppConfigResponse | PlainMessage<UpdateSAMLAppConfigResponse> | undefined, b: UpdateSAMLAppConfigResponse | PlainMessage<UpdateSAMLAppConfigResponse> | undefined): boolean {
    return proto3.util.equals(UpdateSAMLAppConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateAPIAppConfigRequest
 */
export class UpdateAPIAppConfigRequest extends Message<UpdateAPIAppConfigRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  /**
   * @generated from field: zitadel.app.v1.APIAuthMethodType auth_method_type = 7;
   */
  authMethodType = APIAuthMethodType.API_AUTH_METHOD_TYPE_BASIC;

  constructor(data?: PartialMessage<UpdateAPIAppConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateAPIAppConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "auth_method_type", kind: "enum", T: proto3.getEnumType(APIAuthMethodType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAPIAppConfigRequest {
    return new UpdateAPIAppConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAPIAppConfigRequest {
    return new UpdateAPIAppConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAPIAppConfigRequest {
    return new UpdateAPIAppConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAPIAppConfigRequest | PlainMessage<UpdateAPIAppConfigRequest> | undefined, b: UpdateAPIAppConfigRequest | PlainMessage<UpdateAPIAppConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAPIAppConfigRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateAPIAppConfigResponse
 */
export class UpdateAPIAppConfigResponse extends Message<UpdateAPIAppConfigResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateAPIAppConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateAPIAppConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAPIAppConfigResponse {
    return new UpdateAPIAppConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAPIAppConfigResponse {
    return new UpdateAPIAppConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAPIAppConfigResponse {
    return new UpdateAPIAppConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAPIAppConfigResponse | PlainMessage<UpdateAPIAppConfigResponse> | undefined, b: UpdateAPIAppConfigResponse | PlainMessage<UpdateAPIAppConfigResponse> | undefined): boolean {
    return proto3.util.equals(UpdateAPIAppConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateAppRequest
 */
export class DeactivateAppRequest extends Message<DeactivateAppRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  constructor(data?: PartialMessage<DeactivateAppRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateAppRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateAppRequest {
    return new DeactivateAppRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateAppRequest {
    return new DeactivateAppRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateAppRequest {
    return new DeactivateAppRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateAppRequest | PlainMessage<DeactivateAppRequest> | undefined, b: DeactivateAppRequest | PlainMessage<DeactivateAppRequest> | undefined): boolean {
    return proto3.util.equals(DeactivateAppRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateAppResponse
 */
export class DeactivateAppResponse extends Message<DeactivateAppResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<DeactivateAppResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateAppResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateAppResponse {
    return new DeactivateAppResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateAppResponse {
    return new DeactivateAppResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateAppResponse {
    return new DeactivateAppResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateAppResponse | PlainMessage<DeactivateAppResponse> | undefined, b: DeactivateAppResponse | PlainMessage<DeactivateAppResponse> | undefined): boolean {
    return proto3.util.equals(DeactivateAppResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateAppRequest
 */
export class ReactivateAppRequest extends Message<ReactivateAppRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  constructor(data?: PartialMessage<ReactivateAppRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateAppRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateAppRequest {
    return new ReactivateAppRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateAppRequest {
    return new ReactivateAppRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateAppRequest {
    return new ReactivateAppRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateAppRequest | PlainMessage<ReactivateAppRequest> | undefined, b: ReactivateAppRequest | PlainMessage<ReactivateAppRequest> | undefined): boolean {
    return proto3.util.equals(ReactivateAppRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateAppResponse
 */
export class ReactivateAppResponse extends Message<ReactivateAppResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ReactivateAppResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateAppResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateAppResponse {
    return new ReactivateAppResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateAppResponse {
    return new ReactivateAppResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateAppResponse {
    return new ReactivateAppResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateAppResponse | PlainMessage<ReactivateAppResponse> | undefined, b: ReactivateAppResponse | PlainMessage<ReactivateAppResponse> | undefined): boolean {
    return proto3.util.equals(ReactivateAppResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveAppRequest
 */
export class RemoveAppRequest extends Message<RemoveAppRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  constructor(data?: PartialMessage<RemoveAppRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveAppRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveAppRequest {
    return new RemoveAppRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveAppRequest {
    return new RemoveAppRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveAppRequest {
    return new RemoveAppRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveAppRequest | PlainMessage<RemoveAppRequest> | undefined, b: RemoveAppRequest | PlainMessage<RemoveAppRequest> | undefined): boolean {
    return proto3.util.equals(RemoveAppRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveAppResponse
 */
export class RemoveAppResponse extends Message<RemoveAppResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveAppResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveAppResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveAppResponse {
    return new RemoveAppResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveAppResponse {
    return new RemoveAppResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveAppResponse {
    return new RemoveAppResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveAppResponse | PlainMessage<RemoveAppResponse> | undefined, b: RemoveAppResponse | PlainMessage<RemoveAppResponse> | undefined): boolean {
    return proto3.util.equals(RemoveAppResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RegenerateOIDCClientSecretRequest
 */
export class RegenerateOIDCClientSecretRequest extends Message<RegenerateOIDCClientSecretRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  constructor(data?: PartialMessage<RegenerateOIDCClientSecretRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RegenerateOIDCClientSecretRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegenerateOIDCClientSecretRequest {
    return new RegenerateOIDCClientSecretRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegenerateOIDCClientSecretRequest {
    return new RegenerateOIDCClientSecretRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegenerateOIDCClientSecretRequest {
    return new RegenerateOIDCClientSecretRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RegenerateOIDCClientSecretRequest | PlainMessage<RegenerateOIDCClientSecretRequest> | undefined, b: RegenerateOIDCClientSecretRequest | PlainMessage<RegenerateOIDCClientSecretRequest> | undefined): boolean {
    return proto3.util.equals(RegenerateOIDCClientSecretRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RegenerateOIDCClientSecretResponse
 */
export class RegenerateOIDCClientSecretResponse extends Message<RegenerateOIDCClientSecretResponse> {
  /**
   * @generated from field: string client_secret = 1;
   */
  clientSecret = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RegenerateOIDCClientSecretResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RegenerateOIDCClientSecretResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegenerateOIDCClientSecretResponse {
    return new RegenerateOIDCClientSecretResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegenerateOIDCClientSecretResponse {
    return new RegenerateOIDCClientSecretResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegenerateOIDCClientSecretResponse {
    return new RegenerateOIDCClientSecretResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RegenerateOIDCClientSecretResponse | PlainMessage<RegenerateOIDCClientSecretResponse> | undefined, b: RegenerateOIDCClientSecretResponse | PlainMessage<RegenerateOIDCClientSecretResponse> | undefined): boolean {
    return proto3.util.equals(RegenerateOIDCClientSecretResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RegenerateAPIClientSecretRequest
 */
export class RegenerateAPIClientSecretRequest extends Message<RegenerateAPIClientSecretRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  constructor(data?: PartialMessage<RegenerateAPIClientSecretRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RegenerateAPIClientSecretRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegenerateAPIClientSecretRequest {
    return new RegenerateAPIClientSecretRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegenerateAPIClientSecretRequest {
    return new RegenerateAPIClientSecretRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegenerateAPIClientSecretRequest {
    return new RegenerateAPIClientSecretRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RegenerateAPIClientSecretRequest | PlainMessage<RegenerateAPIClientSecretRequest> | undefined, b: RegenerateAPIClientSecretRequest | PlainMessage<RegenerateAPIClientSecretRequest> | undefined): boolean {
    return proto3.util.equals(RegenerateAPIClientSecretRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RegenerateAPIClientSecretResponse
 */
export class RegenerateAPIClientSecretResponse extends Message<RegenerateAPIClientSecretResponse> {
  /**
   * @generated from field: string client_secret = 1;
   */
  clientSecret = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RegenerateAPIClientSecretResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RegenerateAPIClientSecretResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegenerateAPIClientSecretResponse {
    return new RegenerateAPIClientSecretResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegenerateAPIClientSecretResponse {
    return new RegenerateAPIClientSecretResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegenerateAPIClientSecretResponse {
    return new RegenerateAPIClientSecretResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RegenerateAPIClientSecretResponse | PlainMessage<RegenerateAPIClientSecretResponse> | undefined, b: RegenerateAPIClientSecretResponse | PlainMessage<RegenerateAPIClientSecretResponse> | undefined): boolean {
    return proto3.util.equals(RegenerateAPIClientSecretResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetAppKeyRequest
 */
export class GetAppKeyRequest extends Message<GetAppKeyRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  /**
   * @generated from field: string key_id = 3;
   */
  keyId = "";

  constructor(data?: PartialMessage<GetAppKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetAppKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAppKeyRequest {
    return new GetAppKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAppKeyRequest {
    return new GetAppKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAppKeyRequest {
    return new GetAppKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAppKeyRequest | PlainMessage<GetAppKeyRequest> | undefined, b: GetAppKeyRequest | PlainMessage<GetAppKeyRequest> | undefined): boolean {
    return proto3.util.equals(GetAppKeyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetAppKeyResponse
 */
export class GetAppKeyResponse extends Message<GetAppKeyResponse> {
  /**
   * @generated from field: zitadel.authn.v1.Key key = 1;
   */
  key?: Key;

  constructor(data?: PartialMessage<GetAppKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetAppKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "message", T: Key },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAppKeyResponse {
    return new GetAppKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAppKeyResponse {
    return new GetAppKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAppKeyResponse {
    return new GetAppKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAppKeyResponse | PlainMessage<GetAppKeyResponse> | undefined, b: GetAppKeyResponse | PlainMessage<GetAppKeyResponse> | undefined): boolean {
    return proto3.util.equals(GetAppKeyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListAppKeysRequest
 */
export class ListAppKeysRequest extends Message<ListAppKeysRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  /**
   * @generated from field: string project_id = 3;
   */
  projectId = "";

  constructor(data?: PartialMessage<ListAppKeysRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListAppKeysRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAppKeysRequest {
    return new ListAppKeysRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAppKeysRequest {
    return new ListAppKeysRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAppKeysRequest {
    return new ListAppKeysRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAppKeysRequest | PlainMessage<ListAppKeysRequest> | undefined, b: ListAppKeysRequest | PlainMessage<ListAppKeysRequest> | undefined): boolean {
    return proto3.util.equals(ListAppKeysRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListAppKeysResponse
 */
export class ListAppKeysResponse extends Message<ListAppKeysResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.authn.v1.Key result = 2;
   */
  result: Key[] = [];

  constructor(data?: PartialMessage<ListAppKeysResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListAppKeysResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Key, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAppKeysResponse {
    return new ListAppKeysResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAppKeysResponse {
    return new ListAppKeysResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAppKeysResponse {
    return new ListAppKeysResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAppKeysResponse | PlainMessage<ListAppKeysResponse> | undefined, b: ListAppKeysResponse | PlainMessage<ListAppKeysResponse> | undefined): boolean {
    return proto3.util.equals(ListAppKeysResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddAppKeyRequest
 */
export class AddAppKeyRequest extends Message<AddAppKeyRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  /**
   * @generated from field: zitadel.authn.v1.KeyType type = 3;
   */
  type = KeyType.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.Timestamp expiration_date = 4;
   */
  expirationDate?: Timestamp;

  constructor(data?: PartialMessage<AddAppKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddAppKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "type", kind: "enum", T: proto3.getEnumType(KeyType) },
    { no: 4, name: "expiration_date", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddAppKeyRequest {
    return new AddAppKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddAppKeyRequest {
    return new AddAppKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddAppKeyRequest {
    return new AddAppKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddAppKeyRequest | PlainMessage<AddAppKeyRequest> | undefined, b: AddAppKeyRequest | PlainMessage<AddAppKeyRequest> | undefined): boolean {
    return proto3.util.equals(AddAppKeyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddAppKeyResponse
 */
export class AddAppKeyResponse extends Message<AddAppKeyResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: bytes key_details = 3;
   */
  keyDetails = new Uint8Array(0);

  constructor(data?: PartialMessage<AddAppKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddAppKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
    { no: 3, name: "key_details", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddAppKeyResponse {
    return new AddAppKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddAppKeyResponse {
    return new AddAppKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddAppKeyResponse {
    return new AddAppKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddAppKeyResponse | PlainMessage<AddAppKeyResponse> | undefined, b: AddAppKeyResponse | PlainMessage<AddAppKeyResponse> | undefined): boolean {
    return proto3.util.equals(AddAppKeyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveAppKeyRequest
 */
export class RemoveAppKeyRequest extends Message<RemoveAppKeyRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 2;
   */
  appId = "";

  /**
   * @generated from field: string key_id = 3;
   */
  keyId = "";

  constructor(data?: PartialMessage<RemoveAppKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveAppKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveAppKeyRequest {
    return new RemoveAppKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveAppKeyRequest {
    return new RemoveAppKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveAppKeyRequest {
    return new RemoveAppKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveAppKeyRequest | PlainMessage<RemoveAppKeyRequest> | undefined, b: RemoveAppKeyRequest | PlainMessage<RemoveAppKeyRequest> | undefined): boolean {
    return proto3.util.equals(RemoveAppKeyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveAppKeyResponse
 */
export class RemoveAppKeyResponse extends Message<RemoveAppKeyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveAppKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveAppKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveAppKeyResponse {
    return new RemoveAppKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveAppKeyResponse {
    return new RemoveAppKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveAppKeyResponse {
    return new RemoveAppKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveAppKeyResponse | PlainMessage<RemoveAppKeyResponse> | undefined, b: RemoveAppKeyResponse | PlainMessage<RemoveAppKeyResponse> | undefined): boolean {
    return proto3.util.equals(RemoveAppKeyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectGrantChangesRequest
 */
export class ListProjectGrantChangesRequest extends Message<ListProjectGrantChangesRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.change.v1.ChangeQuery query = 1;
   */
  query?: ChangeQuery;

  /**
   * @generated from field: string project_id = 2;
   */
  projectId = "";

  /**
   * @generated from field: string grant_id = 3;
   */
  grantId = "";

  constructor(data?: PartialMessage<ListProjectGrantChangesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectGrantChangesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ChangeQuery },
    { no: 2, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectGrantChangesRequest {
    return new ListProjectGrantChangesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectGrantChangesRequest {
    return new ListProjectGrantChangesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectGrantChangesRequest {
    return new ListProjectGrantChangesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectGrantChangesRequest | PlainMessage<ListProjectGrantChangesRequest> | undefined, b: ListProjectGrantChangesRequest | PlainMessage<ListProjectGrantChangesRequest> | undefined): boolean {
    return proto3.util.equals(ListProjectGrantChangesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectGrantChangesResponse
 */
export class ListProjectGrantChangesResponse extends Message<ListProjectGrantChangesResponse> {
  /**
   * zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary info)
   *
   * @generated from field: repeated zitadel.change.v1.Change result = 2;
   */
  result: Change[] = [];

  constructor(data?: PartialMessage<ListProjectGrantChangesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectGrantChangesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "result", kind: "message", T: Change, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectGrantChangesResponse {
    return new ListProjectGrantChangesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectGrantChangesResponse {
    return new ListProjectGrantChangesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectGrantChangesResponse {
    return new ListProjectGrantChangesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectGrantChangesResponse | PlainMessage<ListProjectGrantChangesResponse> | undefined, b: ListProjectGrantChangesResponse | PlainMessage<ListProjectGrantChangesResponse> | undefined): boolean {
    return proto3.util.equals(ListProjectGrantChangesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetProjectGrantByIDRequest
 */
export class GetProjectGrantByIDRequest extends Message<GetProjectGrantByIDRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  constructor(data?: PartialMessage<GetProjectGrantByIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetProjectGrantByIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProjectGrantByIDRequest {
    return new GetProjectGrantByIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProjectGrantByIDRequest {
    return new GetProjectGrantByIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProjectGrantByIDRequest {
    return new GetProjectGrantByIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetProjectGrantByIDRequest | PlainMessage<GetProjectGrantByIDRequest> | undefined, b: GetProjectGrantByIDRequest | PlainMessage<GetProjectGrantByIDRequest> | undefined): boolean {
    return proto3.util.equals(GetProjectGrantByIDRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetProjectGrantByIDResponse
 */
export class GetProjectGrantByIDResponse extends Message<GetProjectGrantByIDResponse> {
  /**
   * @generated from field: zitadel.project.v1.GrantedProject project_grant = 1;
   */
  projectGrant?: GrantedProject;

  constructor(data?: PartialMessage<GetProjectGrantByIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetProjectGrantByIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_grant", kind: "message", T: GrantedProject },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProjectGrantByIDResponse {
    return new GetProjectGrantByIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProjectGrantByIDResponse {
    return new GetProjectGrantByIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProjectGrantByIDResponse {
    return new GetProjectGrantByIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetProjectGrantByIDResponse | PlainMessage<GetProjectGrantByIDResponse> | undefined, b: GetProjectGrantByIDResponse | PlainMessage<GetProjectGrantByIDResponse> | undefined): boolean {
    return proto3.util.equals(GetProjectGrantByIDResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectGrantsRequest
 */
export class ListProjectGrantsRequest extends Message<ListProjectGrantsRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 2;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.project.v1.ProjectGrantQuery queries = 3;
   */
  queries: ProjectGrantQuery[] = [];

  constructor(data?: PartialMessage<ListProjectGrantsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectGrantsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "query", kind: "message", T: ListQuery },
    { no: 3, name: "queries", kind: "message", T: ProjectGrantQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectGrantsRequest {
    return new ListProjectGrantsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectGrantsRequest {
    return new ListProjectGrantsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectGrantsRequest {
    return new ListProjectGrantsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectGrantsRequest | PlainMessage<ListProjectGrantsRequest> | undefined, b: ListProjectGrantsRequest | PlainMessage<ListProjectGrantsRequest> | undefined): boolean {
    return proto3.util.equals(ListProjectGrantsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectGrantsResponse
 */
export class ListProjectGrantsResponse extends Message<ListProjectGrantsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.project.v1.GrantedProject result = 2;
   */
  result: GrantedProject[] = [];

  constructor(data?: PartialMessage<ListProjectGrantsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectGrantsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: GrantedProject, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectGrantsResponse {
    return new ListProjectGrantsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectGrantsResponse {
    return new ListProjectGrantsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectGrantsResponse {
    return new ListProjectGrantsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectGrantsResponse | PlainMessage<ListProjectGrantsResponse> | undefined, b: ListProjectGrantsResponse | PlainMessage<ListProjectGrantsResponse> | undefined): boolean {
    return proto3.util.equals(ListProjectGrantsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListAllProjectGrantsRequest
 */
export class ListAllProjectGrantsRequest extends Message<ListAllProjectGrantsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.project.v1.AllProjectGrantQuery queries = 2;
   */
  queries: AllProjectGrantQuery[] = [];

  constructor(data?: PartialMessage<ListAllProjectGrantsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListAllProjectGrantsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: AllProjectGrantQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAllProjectGrantsRequest {
    return new ListAllProjectGrantsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAllProjectGrantsRequest {
    return new ListAllProjectGrantsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAllProjectGrantsRequest {
    return new ListAllProjectGrantsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAllProjectGrantsRequest | PlainMessage<ListAllProjectGrantsRequest> | undefined, b: ListAllProjectGrantsRequest | PlainMessage<ListAllProjectGrantsRequest> | undefined): boolean {
    return proto3.util.equals(ListAllProjectGrantsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListAllProjectGrantsResponse
 */
export class ListAllProjectGrantsResponse extends Message<ListAllProjectGrantsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.project.v1.GrantedProject result = 2;
   */
  result: GrantedProject[] = [];

  constructor(data?: PartialMessage<ListAllProjectGrantsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListAllProjectGrantsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: GrantedProject, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAllProjectGrantsResponse {
    return new ListAllProjectGrantsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAllProjectGrantsResponse {
    return new ListAllProjectGrantsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAllProjectGrantsResponse {
    return new ListAllProjectGrantsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAllProjectGrantsResponse | PlainMessage<ListAllProjectGrantsResponse> | undefined, b: ListAllProjectGrantsResponse | PlainMessage<ListAllProjectGrantsResponse> | undefined): boolean {
    return proto3.util.equals(ListAllProjectGrantsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddProjectGrantRequest
 */
export class AddProjectGrantRequest extends Message<AddProjectGrantRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string granted_org_id = 2;
   */
  grantedOrgId = "";

  /**
   * @generated from field: repeated string role_keys = 3;
   */
  roleKeys: string[] = [];

  constructor(data?: PartialMessage<AddProjectGrantRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddProjectGrantRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "granted_org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "role_keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddProjectGrantRequest {
    return new AddProjectGrantRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddProjectGrantRequest {
    return new AddProjectGrantRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddProjectGrantRequest {
    return new AddProjectGrantRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddProjectGrantRequest | PlainMessage<AddProjectGrantRequest> | undefined, b: AddProjectGrantRequest | PlainMessage<AddProjectGrantRequest> | undefined): boolean {
    return proto3.util.equals(AddProjectGrantRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddProjectGrantResponse
 */
export class AddProjectGrantResponse extends Message<AddProjectGrantResponse> {
  /**
   * @generated from field: string grant_id = 1;
   */
  grantId = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddProjectGrantResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddProjectGrantResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddProjectGrantResponse {
    return new AddProjectGrantResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddProjectGrantResponse {
    return new AddProjectGrantResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddProjectGrantResponse {
    return new AddProjectGrantResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddProjectGrantResponse | PlainMessage<AddProjectGrantResponse> | undefined, b: AddProjectGrantResponse | PlainMessage<AddProjectGrantResponse> | undefined): boolean {
    return proto3.util.equals(AddProjectGrantResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateProjectGrantRequest
 */
export class UpdateProjectGrantRequest extends Message<UpdateProjectGrantRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  /**
   * @generated from field: repeated string role_keys = 3;
   */
  roleKeys: string[] = [];

  constructor(data?: PartialMessage<UpdateProjectGrantRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateProjectGrantRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "role_keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProjectGrantRequest {
    return new UpdateProjectGrantRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProjectGrantRequest {
    return new UpdateProjectGrantRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProjectGrantRequest {
    return new UpdateProjectGrantRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateProjectGrantRequest | PlainMessage<UpdateProjectGrantRequest> | undefined, b: UpdateProjectGrantRequest | PlainMessage<UpdateProjectGrantRequest> | undefined): boolean {
    return proto3.util.equals(UpdateProjectGrantRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateProjectGrantResponse
 */
export class UpdateProjectGrantResponse extends Message<UpdateProjectGrantResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateProjectGrantResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateProjectGrantResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProjectGrantResponse {
    return new UpdateProjectGrantResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProjectGrantResponse {
    return new UpdateProjectGrantResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProjectGrantResponse {
    return new UpdateProjectGrantResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateProjectGrantResponse | PlainMessage<UpdateProjectGrantResponse> | undefined, b: UpdateProjectGrantResponse | PlainMessage<UpdateProjectGrantResponse> | undefined): boolean {
    return proto3.util.equals(UpdateProjectGrantResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateProjectGrantRequest
 */
export class DeactivateProjectGrantRequest extends Message<DeactivateProjectGrantRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  constructor(data?: PartialMessage<DeactivateProjectGrantRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateProjectGrantRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateProjectGrantRequest {
    return new DeactivateProjectGrantRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateProjectGrantRequest {
    return new DeactivateProjectGrantRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateProjectGrantRequest {
    return new DeactivateProjectGrantRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateProjectGrantRequest | PlainMessage<DeactivateProjectGrantRequest> | undefined, b: DeactivateProjectGrantRequest | PlainMessage<DeactivateProjectGrantRequest> | undefined): boolean {
    return proto3.util.equals(DeactivateProjectGrantRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateProjectGrantResponse
 */
export class DeactivateProjectGrantResponse extends Message<DeactivateProjectGrantResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<DeactivateProjectGrantResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateProjectGrantResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateProjectGrantResponse {
    return new DeactivateProjectGrantResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateProjectGrantResponse {
    return new DeactivateProjectGrantResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateProjectGrantResponse {
    return new DeactivateProjectGrantResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateProjectGrantResponse | PlainMessage<DeactivateProjectGrantResponse> | undefined, b: DeactivateProjectGrantResponse | PlainMessage<DeactivateProjectGrantResponse> | undefined): boolean {
    return proto3.util.equals(DeactivateProjectGrantResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateProjectGrantRequest
 */
export class ReactivateProjectGrantRequest extends Message<ReactivateProjectGrantRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  constructor(data?: PartialMessage<ReactivateProjectGrantRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateProjectGrantRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateProjectGrantRequest {
    return new ReactivateProjectGrantRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateProjectGrantRequest {
    return new ReactivateProjectGrantRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateProjectGrantRequest {
    return new ReactivateProjectGrantRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateProjectGrantRequest | PlainMessage<ReactivateProjectGrantRequest> | undefined, b: ReactivateProjectGrantRequest | PlainMessage<ReactivateProjectGrantRequest> | undefined): boolean {
    return proto3.util.equals(ReactivateProjectGrantRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateProjectGrantResponse
 */
export class ReactivateProjectGrantResponse extends Message<ReactivateProjectGrantResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ReactivateProjectGrantResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateProjectGrantResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateProjectGrantResponse {
    return new ReactivateProjectGrantResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateProjectGrantResponse {
    return new ReactivateProjectGrantResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateProjectGrantResponse {
    return new ReactivateProjectGrantResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateProjectGrantResponse | PlainMessage<ReactivateProjectGrantResponse> | undefined, b: ReactivateProjectGrantResponse | PlainMessage<ReactivateProjectGrantResponse> | undefined): boolean {
    return proto3.util.equals(ReactivateProjectGrantResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveProjectGrantRequest
 */
export class RemoveProjectGrantRequest extends Message<RemoveProjectGrantRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  constructor(data?: PartialMessage<RemoveProjectGrantRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveProjectGrantRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveProjectGrantRequest {
    return new RemoveProjectGrantRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveProjectGrantRequest {
    return new RemoveProjectGrantRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveProjectGrantRequest {
    return new RemoveProjectGrantRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveProjectGrantRequest | PlainMessage<RemoveProjectGrantRequest> | undefined, b: RemoveProjectGrantRequest | PlainMessage<RemoveProjectGrantRequest> | undefined): boolean {
    return proto3.util.equals(RemoveProjectGrantRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveProjectGrantResponse
 */
export class RemoveProjectGrantResponse extends Message<RemoveProjectGrantResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveProjectGrantResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveProjectGrantResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveProjectGrantResponse {
    return new RemoveProjectGrantResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveProjectGrantResponse {
    return new RemoveProjectGrantResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveProjectGrantResponse {
    return new RemoveProjectGrantResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveProjectGrantResponse | PlainMessage<RemoveProjectGrantResponse> | undefined, b: RemoveProjectGrantResponse | PlainMessage<RemoveProjectGrantResponse> | undefined): boolean {
    return proto3.util.equals(RemoveProjectGrantResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectGrantMemberRolesRequest
 */
export class ListProjectGrantMemberRolesRequest extends Message<ListProjectGrantMemberRolesRequest> {
  /**
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * @generated from field: repeated string result = 2;
   */
  result: string[] = [];

  constructor(data?: PartialMessage<ListProjectGrantMemberRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectGrantMemberRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "result", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectGrantMemberRolesRequest {
    return new ListProjectGrantMemberRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectGrantMemberRolesRequest {
    return new ListProjectGrantMemberRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectGrantMemberRolesRequest {
    return new ListProjectGrantMemberRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectGrantMemberRolesRequest | PlainMessage<ListProjectGrantMemberRolesRequest> | undefined, b: ListProjectGrantMemberRolesRequest | PlainMessage<ListProjectGrantMemberRolesRequest> | undefined): boolean {
    return proto3.util.equals(ListProjectGrantMemberRolesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectGrantMemberRolesResponse
 */
export class ListProjectGrantMemberRolesResponse extends Message<ListProjectGrantMemberRolesResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated string result = 2;
   */
  result: string[] = [];

  constructor(data?: PartialMessage<ListProjectGrantMemberRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectGrantMemberRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectGrantMemberRolesResponse {
    return new ListProjectGrantMemberRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectGrantMemberRolesResponse {
    return new ListProjectGrantMemberRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectGrantMemberRolesResponse {
    return new ListProjectGrantMemberRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectGrantMemberRolesResponse | PlainMessage<ListProjectGrantMemberRolesResponse> | undefined, b: ListProjectGrantMemberRolesResponse | PlainMessage<ListProjectGrantMemberRolesResponse> | undefined): boolean {
    return proto3.util.equals(ListProjectGrantMemberRolesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectGrantMembersRequest
 */
export class ListProjectGrantMembersRequest extends Message<ListProjectGrantMembersRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 3;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.member.v1.SearchQuery queries = 4;
   */
  queries: SearchQuery$1[] = [];

  constructor(data?: PartialMessage<ListProjectGrantMembersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectGrantMembersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "query", kind: "message", T: ListQuery },
    { no: 4, name: "queries", kind: "message", T: SearchQuery$1, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectGrantMembersRequest {
    return new ListProjectGrantMembersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectGrantMembersRequest {
    return new ListProjectGrantMembersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectGrantMembersRequest {
    return new ListProjectGrantMembersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectGrantMembersRequest | PlainMessage<ListProjectGrantMembersRequest> | undefined, b: ListProjectGrantMembersRequest | PlainMessage<ListProjectGrantMembersRequest> | undefined): boolean {
    return proto3.util.equals(ListProjectGrantMembersRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProjectGrantMembersResponse
 */
export class ListProjectGrantMembersResponse extends Message<ListProjectGrantMembersResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.member.v1.Member result = 2;
   */
  result: Member[] = [];

  constructor(data?: PartialMessage<ListProjectGrantMembersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProjectGrantMembersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Member, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectGrantMembersResponse {
    return new ListProjectGrantMembersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectGrantMembersResponse {
    return new ListProjectGrantMembersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectGrantMembersResponse {
    return new ListProjectGrantMembersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectGrantMembersResponse | PlainMessage<ListProjectGrantMembersResponse> | undefined, b: ListProjectGrantMembersResponse | PlainMessage<ListProjectGrantMembersResponse> | undefined): boolean {
    return proto3.util.equals(ListProjectGrantMembersResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddProjectGrantMemberRequest
 */
export class AddProjectGrantMemberRequest extends Message<AddProjectGrantMemberRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  /**
   * @generated from field: string user_id = 3;
   */
  userId = "";

  /**
   * @generated from field: repeated string roles = 4;
   */
  roles: string[] = [];

  constructor(data?: PartialMessage<AddProjectGrantMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddProjectGrantMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddProjectGrantMemberRequest {
    return new AddProjectGrantMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddProjectGrantMemberRequest {
    return new AddProjectGrantMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddProjectGrantMemberRequest {
    return new AddProjectGrantMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddProjectGrantMemberRequest | PlainMessage<AddProjectGrantMemberRequest> | undefined, b: AddProjectGrantMemberRequest | PlainMessage<AddProjectGrantMemberRequest> | undefined): boolean {
    return proto3.util.equals(AddProjectGrantMemberRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddProjectGrantMemberResponse
 */
export class AddProjectGrantMemberResponse extends Message<AddProjectGrantMemberResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddProjectGrantMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddProjectGrantMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddProjectGrantMemberResponse {
    return new AddProjectGrantMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddProjectGrantMemberResponse {
    return new AddProjectGrantMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddProjectGrantMemberResponse {
    return new AddProjectGrantMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddProjectGrantMemberResponse | PlainMessage<AddProjectGrantMemberResponse> | undefined, b: AddProjectGrantMemberResponse | PlainMessage<AddProjectGrantMemberResponse> | undefined): boolean {
    return proto3.util.equals(AddProjectGrantMemberResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateProjectGrantMemberRequest
 */
export class UpdateProjectGrantMemberRequest extends Message<UpdateProjectGrantMemberRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  /**
   * @generated from field: string user_id = 3;
   */
  userId = "";

  /**
   * @generated from field: repeated string roles = 4;
   */
  roles: string[] = [];

  constructor(data?: PartialMessage<UpdateProjectGrantMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateProjectGrantMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProjectGrantMemberRequest {
    return new UpdateProjectGrantMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProjectGrantMemberRequest {
    return new UpdateProjectGrantMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProjectGrantMemberRequest {
    return new UpdateProjectGrantMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateProjectGrantMemberRequest | PlainMessage<UpdateProjectGrantMemberRequest> | undefined, b: UpdateProjectGrantMemberRequest | PlainMessage<UpdateProjectGrantMemberRequest> | undefined): boolean {
    return proto3.util.equals(UpdateProjectGrantMemberRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateProjectGrantMemberResponse
 */
export class UpdateProjectGrantMemberResponse extends Message<UpdateProjectGrantMemberResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateProjectGrantMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateProjectGrantMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProjectGrantMemberResponse {
    return new UpdateProjectGrantMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProjectGrantMemberResponse {
    return new UpdateProjectGrantMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProjectGrantMemberResponse {
    return new UpdateProjectGrantMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateProjectGrantMemberResponse | PlainMessage<UpdateProjectGrantMemberResponse> | undefined, b: UpdateProjectGrantMemberResponse | PlainMessage<UpdateProjectGrantMemberResponse> | undefined): boolean {
    return proto3.util.equals(UpdateProjectGrantMemberResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveProjectGrantMemberRequest
 */
export class RemoveProjectGrantMemberRequest extends Message<RemoveProjectGrantMemberRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  /**
   * @generated from field: string user_id = 3;
   */
  userId = "";

  constructor(data?: PartialMessage<RemoveProjectGrantMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveProjectGrantMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveProjectGrantMemberRequest {
    return new RemoveProjectGrantMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveProjectGrantMemberRequest {
    return new RemoveProjectGrantMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveProjectGrantMemberRequest {
    return new RemoveProjectGrantMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveProjectGrantMemberRequest | PlainMessage<RemoveProjectGrantMemberRequest> | undefined, b: RemoveProjectGrantMemberRequest | PlainMessage<RemoveProjectGrantMemberRequest> | undefined): boolean {
    return proto3.util.equals(RemoveProjectGrantMemberRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveProjectGrantMemberResponse
 */
export class RemoveProjectGrantMemberResponse extends Message<RemoveProjectGrantMemberResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveProjectGrantMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveProjectGrantMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveProjectGrantMemberResponse {
    return new RemoveProjectGrantMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveProjectGrantMemberResponse {
    return new RemoveProjectGrantMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveProjectGrantMemberResponse {
    return new RemoveProjectGrantMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveProjectGrantMemberResponse | PlainMessage<RemoveProjectGrantMemberResponse> | undefined, b: RemoveProjectGrantMemberResponse | PlainMessage<RemoveProjectGrantMemberResponse> | undefined): boolean {
    return proto3.util.equals(RemoveProjectGrantMemberResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetUserGrantByIDRequest
 */
export class GetUserGrantByIDRequest extends Message<GetUserGrantByIDRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  constructor(data?: PartialMessage<GetUserGrantByIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetUserGrantByIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserGrantByIDRequest {
    return new GetUserGrantByIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserGrantByIDRequest {
    return new GetUserGrantByIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserGrantByIDRequest {
    return new GetUserGrantByIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserGrantByIDRequest | PlainMessage<GetUserGrantByIDRequest> | undefined, b: GetUserGrantByIDRequest | PlainMessage<GetUserGrantByIDRequest> | undefined): boolean {
    return proto3.util.equals(GetUserGrantByIDRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetUserGrantByIDResponse
 */
export class GetUserGrantByIDResponse extends Message<GetUserGrantByIDResponse> {
  /**
   * @generated from field: zitadel.user.v1.UserGrant user_grant = 1;
   */
  userGrant?: UserGrant;

  constructor(data?: PartialMessage<GetUserGrantByIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetUserGrantByIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_grant", kind: "message", T: UserGrant },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserGrantByIDResponse {
    return new GetUserGrantByIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserGrantByIDResponse {
    return new GetUserGrantByIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserGrantByIDResponse {
    return new GetUserGrantByIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserGrantByIDResponse | PlainMessage<GetUserGrantByIDResponse> | undefined, b: GetUserGrantByIDResponse | PlainMessage<GetUserGrantByIDResponse> | undefined): boolean {
    return proto3.util.equals(GetUserGrantByIDResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListUserGrantRequest
 */
export class ListUserGrantRequest extends Message<ListUserGrantRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.user.v1.UserGrantQuery queries = 2;
   */
  queries: UserGrantQuery[] = [];

  constructor(data?: PartialMessage<ListUserGrantRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListUserGrantRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: UserGrantQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUserGrantRequest {
    return new ListUserGrantRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUserGrantRequest {
    return new ListUserGrantRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUserGrantRequest {
    return new ListUserGrantRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListUserGrantRequest | PlainMessage<ListUserGrantRequest> | undefined, b: ListUserGrantRequest | PlainMessage<ListUserGrantRequest> | undefined): boolean {
    return proto3.util.equals(ListUserGrantRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListUserGrantResponse
 */
export class ListUserGrantResponse extends Message<ListUserGrantResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.user.v1.UserGrant result = 2;
   */
  result: UserGrant[] = [];

  constructor(data?: PartialMessage<ListUserGrantResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListUserGrantResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: UserGrant, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUserGrantResponse {
    return new ListUserGrantResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUserGrantResponse {
    return new ListUserGrantResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUserGrantResponse {
    return new ListUserGrantResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListUserGrantResponse | PlainMessage<ListUserGrantResponse> | undefined, b: ListUserGrantResponse | PlainMessage<ListUserGrantResponse> | undefined): boolean {
    return proto3.util.equals(ListUserGrantResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddUserGrantRequest
 */
export class AddUserGrantRequest extends Message<AddUserGrantRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string project_id = 2;
   */
  projectId = "";

  /**
   * @generated from field: string project_grant_id = 3;
   */
  projectGrantId = "";

  /**
   * @generated from field: repeated string role_keys = 4;
   */
  roleKeys: string[] = [];

  constructor(data?: PartialMessage<AddUserGrantRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddUserGrantRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "project_grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "role_keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddUserGrantRequest {
    return new AddUserGrantRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddUserGrantRequest {
    return new AddUserGrantRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddUserGrantRequest {
    return new AddUserGrantRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddUserGrantRequest | PlainMessage<AddUserGrantRequest> | undefined, b: AddUserGrantRequest | PlainMessage<AddUserGrantRequest> | undefined): boolean {
    return proto3.util.equals(AddUserGrantRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddUserGrantResponse
 */
export class AddUserGrantResponse extends Message<AddUserGrantResponse> {
  /**
   * @generated from field: string user_grant_id = 1;
   */
  userGrantId = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddUserGrantResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddUserGrantResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddUserGrantResponse {
    return new AddUserGrantResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddUserGrantResponse {
    return new AddUserGrantResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddUserGrantResponse {
    return new AddUserGrantResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddUserGrantResponse | PlainMessage<AddUserGrantResponse> | undefined, b: AddUserGrantResponse | PlainMessage<AddUserGrantResponse> | undefined): boolean {
    return proto3.util.equals(AddUserGrantResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateUserGrantRequest
 */
export class UpdateUserGrantRequest extends Message<UpdateUserGrantRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  /**
   * @generated from field: repeated string role_keys = 3;
   */
  roleKeys: string[] = [];

  constructor(data?: PartialMessage<UpdateUserGrantRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateUserGrantRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "role_keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserGrantRequest {
    return new UpdateUserGrantRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserGrantRequest {
    return new UpdateUserGrantRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserGrantRequest {
    return new UpdateUserGrantRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserGrantRequest | PlainMessage<UpdateUserGrantRequest> | undefined, b: UpdateUserGrantRequest | PlainMessage<UpdateUserGrantRequest> | undefined): boolean {
    return proto3.util.equals(UpdateUserGrantRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateUserGrantResponse
 */
export class UpdateUserGrantResponse extends Message<UpdateUserGrantResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateUserGrantResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateUserGrantResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserGrantResponse {
    return new UpdateUserGrantResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserGrantResponse {
    return new UpdateUserGrantResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserGrantResponse {
    return new UpdateUserGrantResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserGrantResponse | PlainMessage<UpdateUserGrantResponse> | undefined, b: UpdateUserGrantResponse | PlainMessage<UpdateUserGrantResponse> | undefined): boolean {
    return proto3.util.equals(UpdateUserGrantResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateUserGrantRequest
 */
export class DeactivateUserGrantRequest extends Message<DeactivateUserGrantRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  constructor(data?: PartialMessage<DeactivateUserGrantRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateUserGrantRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateUserGrantRequest {
    return new DeactivateUserGrantRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateUserGrantRequest {
    return new DeactivateUserGrantRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateUserGrantRequest {
    return new DeactivateUserGrantRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateUserGrantRequest | PlainMessage<DeactivateUserGrantRequest> | undefined, b: DeactivateUserGrantRequest | PlainMessage<DeactivateUserGrantRequest> | undefined): boolean {
    return proto3.util.equals(DeactivateUserGrantRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateUserGrantResponse
 */
export class DeactivateUserGrantResponse extends Message<DeactivateUserGrantResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<DeactivateUserGrantResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateUserGrantResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateUserGrantResponse {
    return new DeactivateUserGrantResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateUserGrantResponse {
    return new DeactivateUserGrantResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateUserGrantResponse {
    return new DeactivateUserGrantResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateUserGrantResponse | PlainMessage<DeactivateUserGrantResponse> | undefined, b: DeactivateUserGrantResponse | PlainMessage<DeactivateUserGrantResponse> | undefined): boolean {
    return proto3.util.equals(DeactivateUserGrantResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateUserGrantRequest
 */
export class ReactivateUserGrantRequest extends Message<ReactivateUserGrantRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  constructor(data?: PartialMessage<ReactivateUserGrantRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateUserGrantRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateUserGrantRequest {
    return new ReactivateUserGrantRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateUserGrantRequest {
    return new ReactivateUserGrantRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateUserGrantRequest {
    return new ReactivateUserGrantRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateUserGrantRequest | PlainMessage<ReactivateUserGrantRequest> | undefined, b: ReactivateUserGrantRequest | PlainMessage<ReactivateUserGrantRequest> | undefined): boolean {
    return proto3.util.equals(ReactivateUserGrantRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateUserGrantResponse
 */
export class ReactivateUserGrantResponse extends Message<ReactivateUserGrantResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ReactivateUserGrantResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateUserGrantResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateUserGrantResponse {
    return new ReactivateUserGrantResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateUserGrantResponse {
    return new ReactivateUserGrantResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateUserGrantResponse {
    return new ReactivateUserGrantResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateUserGrantResponse | PlainMessage<ReactivateUserGrantResponse> | undefined, b: ReactivateUserGrantResponse | PlainMessage<ReactivateUserGrantResponse> | undefined): boolean {
    return proto3.util.equals(ReactivateUserGrantResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveUserGrantRequest
 */
export class RemoveUserGrantRequest extends Message<RemoveUserGrantRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  constructor(data?: PartialMessage<RemoveUserGrantRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveUserGrantRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveUserGrantRequest {
    return new RemoveUserGrantRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveUserGrantRequest {
    return new RemoveUserGrantRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveUserGrantRequest {
    return new RemoveUserGrantRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveUserGrantRequest | PlainMessage<RemoveUserGrantRequest> | undefined, b: RemoveUserGrantRequest | PlainMessage<RemoveUserGrantRequest> | undefined): boolean {
    return proto3.util.equals(RemoveUserGrantRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveUserGrantResponse
 */
export class RemoveUserGrantResponse extends Message<RemoveUserGrantResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveUserGrantResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveUserGrantResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveUserGrantResponse {
    return new RemoveUserGrantResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveUserGrantResponse {
    return new RemoveUserGrantResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveUserGrantResponse {
    return new RemoveUserGrantResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveUserGrantResponse | PlainMessage<RemoveUserGrantResponse> | undefined, b: RemoveUserGrantResponse | PlainMessage<RemoveUserGrantResponse> | undefined): boolean {
    return proto3.util.equals(RemoveUserGrantResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkRemoveUserGrantRequest
 */
export class BulkRemoveUserGrantRequest extends Message<BulkRemoveUserGrantRequest> {
  /**
   * @generated from field: repeated string grant_id = 1;
   */
  grantId: string[] = [];

  constructor(data?: PartialMessage<BulkRemoveUserGrantRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkRemoveUserGrantRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkRemoveUserGrantRequest {
    return new BulkRemoveUserGrantRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkRemoveUserGrantRequest {
    return new BulkRemoveUserGrantRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkRemoveUserGrantRequest {
    return new BulkRemoveUserGrantRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BulkRemoveUserGrantRequest | PlainMessage<BulkRemoveUserGrantRequest> | undefined, b: BulkRemoveUserGrantRequest | PlainMessage<BulkRemoveUserGrantRequest> | undefined): boolean {
    return proto3.util.equals(BulkRemoveUserGrantRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.BulkRemoveUserGrantResponse
 */
export class BulkRemoveUserGrantResponse extends Message<BulkRemoveUserGrantResponse> {
  constructor(data?: PartialMessage<BulkRemoveUserGrantResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.BulkRemoveUserGrantResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkRemoveUserGrantResponse {
    return new BulkRemoveUserGrantResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkRemoveUserGrantResponse {
    return new BulkRemoveUserGrantResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkRemoveUserGrantResponse {
    return new BulkRemoveUserGrantResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BulkRemoveUserGrantResponse | PlainMessage<BulkRemoveUserGrantResponse> | undefined, b: BulkRemoveUserGrantResponse | PlainMessage<BulkRemoveUserGrantResponse> | undefined): boolean {
    return proto3.util.equals(BulkRemoveUserGrantResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetOrgIAMPolicyRequest
 */
export class GetOrgIAMPolicyRequest extends Message<GetOrgIAMPolicyRequest> {
  constructor(data?: PartialMessage<GetOrgIAMPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetOrgIAMPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrgIAMPolicyRequest {
    return new GetOrgIAMPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrgIAMPolicyRequest {
    return new GetOrgIAMPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrgIAMPolicyRequest {
    return new GetOrgIAMPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrgIAMPolicyRequest | PlainMessage<GetOrgIAMPolicyRequest> | undefined, b: GetOrgIAMPolicyRequest | PlainMessage<GetOrgIAMPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetOrgIAMPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetOrgIAMPolicyResponse
 */
export class GetOrgIAMPolicyResponse extends Message<GetOrgIAMPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.OrgIAMPolicy policy = 1;
   */
  policy?: OrgIAMPolicy;

  constructor(data?: PartialMessage<GetOrgIAMPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetOrgIAMPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: OrgIAMPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrgIAMPolicyResponse {
    return new GetOrgIAMPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrgIAMPolicyResponse {
    return new GetOrgIAMPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrgIAMPolicyResponse {
    return new GetOrgIAMPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrgIAMPolicyResponse | PlainMessage<GetOrgIAMPolicyResponse> | undefined, b: GetOrgIAMPolicyResponse | PlainMessage<GetOrgIAMPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetOrgIAMPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDomainPolicyRequest
 */
export class GetDomainPolicyRequest extends Message<GetDomainPolicyRequest> {
  constructor(data?: PartialMessage<GetDomainPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDomainPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDomainPolicyRequest {
    return new GetDomainPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDomainPolicyRequest {
    return new GetDomainPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDomainPolicyRequest {
    return new GetDomainPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDomainPolicyRequest | PlainMessage<GetDomainPolicyRequest> | undefined, b: GetDomainPolicyRequest | PlainMessage<GetDomainPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetDomainPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDomainPolicyResponse
 */
export class GetDomainPolicyResponse extends Message<GetDomainPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.DomainPolicy policy = 1;
   */
  policy?: DomainPolicy;

  constructor(data?: PartialMessage<GetDomainPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDomainPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: DomainPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDomainPolicyResponse {
    return new GetDomainPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDomainPolicyResponse {
    return new GetDomainPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDomainPolicyResponse {
    return new GetDomainPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDomainPolicyResponse | PlainMessage<GetDomainPolicyResponse> | undefined, b: GetDomainPolicyResponse | PlainMessage<GetDomainPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetDomainPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetLoginPolicyRequest
 */
export class GetLoginPolicyRequest extends Message<GetLoginPolicyRequest> {
  constructor(data?: PartialMessage<GetLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLoginPolicyRequest {
    return new GetLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLoginPolicyRequest {
    return new GetLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLoginPolicyRequest {
    return new GetLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetLoginPolicyRequest | PlainMessage<GetLoginPolicyRequest> | undefined, b: GetLoginPolicyRequest | PlainMessage<GetLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetLoginPolicyResponse
 */
export class GetLoginPolicyResponse extends Message<GetLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.LoginPolicy policy = 1;
   */
  policy?: LoginPolicy;

  /**
   * deprecated: is_default is also defined in zitadel.policy.v1.LoginPolicy
   *
   * @generated from field: bool is_default = 2;
   */
  isDefault = false;

  constructor(data?: PartialMessage<GetLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: LoginPolicy },
    { no: 2, name: "is_default", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLoginPolicyResponse {
    return new GetLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLoginPolicyResponse {
    return new GetLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLoginPolicyResponse {
    return new GetLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetLoginPolicyResponse | PlainMessage<GetLoginPolicyResponse> | undefined, b: GetLoginPolicyResponse | PlainMessage<GetLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultLoginPolicyRequest
 */
export class GetDefaultLoginPolicyRequest extends Message<GetDefaultLoginPolicyRequest> {
  constructor(data?: PartialMessage<GetDefaultLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultLoginPolicyRequest {
    return new GetDefaultLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultLoginPolicyRequest {
    return new GetDefaultLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultLoginPolicyRequest {
    return new GetDefaultLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultLoginPolicyRequest | PlainMessage<GetDefaultLoginPolicyRequest> | undefined, b: GetDefaultLoginPolicyRequest | PlainMessage<GetDefaultLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultLoginPolicyResponse
 */
export class GetDefaultLoginPolicyResponse extends Message<GetDefaultLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.LoginPolicy policy = 1;
   */
  policy?: LoginPolicy;

  constructor(data?: PartialMessage<GetDefaultLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: LoginPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultLoginPolicyResponse {
    return new GetDefaultLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultLoginPolicyResponse {
    return new GetDefaultLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultLoginPolicyResponse {
    return new GetDefaultLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultLoginPolicyResponse | PlainMessage<GetDefaultLoginPolicyResponse> | undefined, b: GetDefaultLoginPolicyResponse | PlainMessage<GetDefaultLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomLoginPolicyRequest
 */
export class AddCustomLoginPolicyRequest extends Message<AddCustomLoginPolicyRequest> {
  /**
   * @generated from field: bool allow_username_password = 1;
   */
  allowUsernamePassword = false;

  /**
   * @generated from field: bool allow_register = 2;
   */
  allowRegister = false;

  /**
   * @generated from field: bool allow_external_idp = 3;
   */
  allowExternalIdp = false;

  /**
   * @generated from field: bool force_mfa = 4;
   */
  forceMfa = false;

  /**
   * @generated from field: zitadel.policy.v1.PasswordlessType passwordless_type = 5;
   */
  passwordlessType = PasswordlessType.NOT_ALLOWED;

  /**
   * @generated from field: bool hide_password_reset = 6;
   */
  hidePasswordReset = false;

  /**
   * @generated from field: bool ignore_unknown_usernames = 7;
   */
  ignoreUnknownUsernames = false;

  /**
   * @generated from field: string default_redirect_uri = 8;
   */
  defaultRedirectUri = "";

  /**
   * @generated from field: google.protobuf.Duration password_check_lifetime = 9;
   */
  passwordCheckLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration external_login_check_lifetime = 10;
   */
  externalLoginCheckLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration mfa_init_skip_lifetime = 11;
   */
  mfaInitSkipLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration second_factor_check_lifetime = 12;
   */
  secondFactorCheckLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration multi_factor_check_lifetime = 13;
   */
  multiFactorCheckLifetime?: Duration;

  /**
   * @generated from field: repeated zitadel.policy.v1.SecondFactorType second_factors = 14;
   */
  secondFactors: SecondFactorType[] = [];

  /**
   * @generated from field: repeated zitadel.policy.v1.MultiFactorType multi_factors = 15;
   */
  multiFactors: MultiFactorType[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddCustomLoginPolicyRequest.IDP idps = 16;
   */
  idps: AddCustomLoginPolicyRequest_IDP[] = [];

  /**
   * If set to true, the suffix (@domain.com) of an unknown username input on the login screen will be matched against the org domains and will redirect to the registration of that organization on success.
   *
   * @generated from field: bool allow_domain_discovery = 17;
   */
  allowDomainDiscovery = false;

  /**
   * @generated from field: bool disable_login_with_email = 18;
   */
  disableLoginWithEmail = false;

  /**
   * @generated from field: bool disable_login_with_phone = 19;
   */
  disableLoginWithPhone = false;

  /**
   * @generated from field: bool force_mfa_local_only = 20;
   */
  forceMfaLocalOnly = false;

  constructor(data?: PartialMessage<AddCustomLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "allow_username_password", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "allow_register", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "allow_external_idp", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "force_mfa", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "passwordless_type", kind: "enum", T: proto3.getEnumType(PasswordlessType) },
    { no: 6, name: "hide_password_reset", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "ignore_unknown_usernames", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "default_redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "password_check_lifetime", kind: "message", T: Duration },
    { no: 10, name: "external_login_check_lifetime", kind: "message", T: Duration },
    { no: 11, name: "mfa_init_skip_lifetime", kind: "message", T: Duration },
    { no: 12, name: "second_factor_check_lifetime", kind: "message", T: Duration },
    { no: 13, name: "multi_factor_check_lifetime", kind: "message", T: Duration },
    { no: 14, name: "second_factors", kind: "enum", T: proto3.getEnumType(SecondFactorType), repeated: true },
    { no: 15, name: "multi_factors", kind: "enum", T: proto3.getEnumType(MultiFactorType), repeated: true },
    { no: 16, name: "idps", kind: "message", T: AddCustomLoginPolicyRequest_IDP, repeated: true },
    { no: 17, name: "allow_domain_discovery", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 18, name: "disable_login_with_email", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 19, name: "disable_login_with_phone", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 20, name: "force_mfa_local_only", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomLoginPolicyRequest {
    return new AddCustomLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomLoginPolicyRequest {
    return new AddCustomLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomLoginPolicyRequest {
    return new AddCustomLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomLoginPolicyRequest | PlainMessage<AddCustomLoginPolicyRequest> | undefined, b: AddCustomLoginPolicyRequest | PlainMessage<AddCustomLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddCustomLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomLoginPolicyRequest.IDP
 */
export class AddCustomLoginPolicyRequest_IDP extends Message<AddCustomLoginPolicyRequest_IDP> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  /**
   * @generated from field: zitadel.idp.v1.IDPOwnerType ownerType = 2;
   */
  ownerType = IDPOwnerType.IDP_OWNER_TYPE_UNSPECIFIED;

  constructor(data?: PartialMessage<AddCustomLoginPolicyRequest_IDP>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomLoginPolicyRequest.IDP";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ownerType", kind: "enum", T: proto3.getEnumType(IDPOwnerType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomLoginPolicyRequest_IDP {
    return new AddCustomLoginPolicyRequest_IDP().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomLoginPolicyRequest_IDP {
    return new AddCustomLoginPolicyRequest_IDP().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomLoginPolicyRequest_IDP {
    return new AddCustomLoginPolicyRequest_IDP().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomLoginPolicyRequest_IDP | PlainMessage<AddCustomLoginPolicyRequest_IDP> | undefined, b: AddCustomLoginPolicyRequest_IDP | PlainMessage<AddCustomLoginPolicyRequest_IDP> | undefined): boolean {
    return proto3.util.equals(AddCustomLoginPolicyRequest_IDP, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomLoginPolicyResponse
 */
export class AddCustomLoginPolicyResponse extends Message<AddCustomLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddCustomLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomLoginPolicyResponse {
    return new AddCustomLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomLoginPolicyResponse {
    return new AddCustomLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomLoginPolicyResponse {
    return new AddCustomLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomLoginPolicyResponse | PlainMessage<AddCustomLoginPolicyResponse> | undefined, b: AddCustomLoginPolicyResponse | PlainMessage<AddCustomLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddCustomLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomLoginPolicyRequest
 */
export class UpdateCustomLoginPolicyRequest extends Message<UpdateCustomLoginPolicyRequest> {
  /**
   * @generated from field: bool allow_username_password = 1;
   */
  allowUsernamePassword = false;

  /**
   * @generated from field: bool allow_register = 2;
   */
  allowRegister = false;

  /**
   * @generated from field: bool allow_external_idp = 3;
   */
  allowExternalIdp = false;

  /**
   * @generated from field: bool force_mfa = 4;
   */
  forceMfa = false;

  /**
   * @generated from field: zitadel.policy.v1.PasswordlessType passwordless_type = 5;
   */
  passwordlessType = PasswordlessType.NOT_ALLOWED;

  /**
   * @generated from field: bool hide_password_reset = 6;
   */
  hidePasswordReset = false;

  /**
   * @generated from field: bool ignore_unknown_usernames = 7;
   */
  ignoreUnknownUsernames = false;

  /**
   * @generated from field: string default_redirect_uri = 8;
   */
  defaultRedirectUri = "";

  /**
   * @generated from field: google.protobuf.Duration password_check_lifetime = 9;
   */
  passwordCheckLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration external_login_check_lifetime = 10;
   */
  externalLoginCheckLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration mfa_init_skip_lifetime = 11;
   */
  mfaInitSkipLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration second_factor_check_lifetime = 12;
   */
  secondFactorCheckLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration multi_factor_check_lifetime = 13;
   */
  multiFactorCheckLifetime?: Duration;

  /**
   * If set to true, the suffix (@domain.com) of an unknown username input on the login screen will be matched against the org domains and will redirect to the registration of that organization on success.
   *
   * @generated from field: bool allow_domain_discovery = 14;
   */
  allowDomainDiscovery = false;

  /**
   * @generated from field: bool disable_login_with_email = 15;
   */
  disableLoginWithEmail = false;

  /**
   * @generated from field: bool disable_login_with_phone = 16;
   */
  disableLoginWithPhone = false;

  /**
   * @generated from field: bool force_mfa_local_only = 17;
   */
  forceMfaLocalOnly = false;

  constructor(data?: PartialMessage<UpdateCustomLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "allow_username_password", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "allow_register", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "allow_external_idp", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "force_mfa", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "passwordless_type", kind: "enum", T: proto3.getEnumType(PasswordlessType) },
    { no: 6, name: "hide_password_reset", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "ignore_unknown_usernames", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "default_redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "password_check_lifetime", kind: "message", T: Duration },
    { no: 10, name: "external_login_check_lifetime", kind: "message", T: Duration },
    { no: 11, name: "mfa_init_skip_lifetime", kind: "message", T: Duration },
    { no: 12, name: "second_factor_check_lifetime", kind: "message", T: Duration },
    { no: 13, name: "multi_factor_check_lifetime", kind: "message", T: Duration },
    { no: 14, name: "allow_domain_discovery", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 15, name: "disable_login_with_email", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 16, name: "disable_login_with_phone", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 17, name: "force_mfa_local_only", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomLoginPolicyRequest {
    return new UpdateCustomLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomLoginPolicyRequest {
    return new UpdateCustomLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomLoginPolicyRequest {
    return new UpdateCustomLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomLoginPolicyRequest | PlainMessage<UpdateCustomLoginPolicyRequest> | undefined, b: UpdateCustomLoginPolicyRequest | PlainMessage<UpdateCustomLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateCustomLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomLoginPolicyResponse
 */
export class UpdateCustomLoginPolicyResponse extends Message<UpdateCustomLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateCustomLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomLoginPolicyResponse {
    return new UpdateCustomLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomLoginPolicyResponse {
    return new UpdateCustomLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomLoginPolicyResponse {
    return new UpdateCustomLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomLoginPolicyResponse | PlainMessage<UpdateCustomLoginPolicyResponse> | undefined, b: UpdateCustomLoginPolicyResponse | PlainMessage<UpdateCustomLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateCustomLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetLoginPolicyToDefaultRequest
 */
export class ResetLoginPolicyToDefaultRequest extends Message<ResetLoginPolicyToDefaultRequest> {
  constructor(data?: PartialMessage<ResetLoginPolicyToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetLoginPolicyToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetLoginPolicyToDefaultRequest {
    return new ResetLoginPolicyToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetLoginPolicyToDefaultRequest {
    return new ResetLoginPolicyToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetLoginPolicyToDefaultRequest {
    return new ResetLoginPolicyToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetLoginPolicyToDefaultRequest | PlainMessage<ResetLoginPolicyToDefaultRequest> | undefined, b: ResetLoginPolicyToDefaultRequest | PlainMessage<ResetLoginPolicyToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetLoginPolicyToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetLoginPolicyToDefaultResponse
 */
export class ResetLoginPolicyToDefaultResponse extends Message<ResetLoginPolicyToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetLoginPolicyToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetLoginPolicyToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetLoginPolicyToDefaultResponse {
    return new ResetLoginPolicyToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetLoginPolicyToDefaultResponse {
    return new ResetLoginPolicyToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetLoginPolicyToDefaultResponse {
    return new ResetLoginPolicyToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetLoginPolicyToDefaultResponse | PlainMessage<ResetLoginPolicyToDefaultResponse> | undefined, b: ResetLoginPolicyToDefaultResponse | PlainMessage<ResetLoginPolicyToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetLoginPolicyToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListLoginPolicyIDPsRequest
 */
export class ListLoginPolicyIDPsRequest extends Message<ListLoginPolicyIDPsRequest> {
  /**
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  constructor(data?: PartialMessage<ListLoginPolicyIDPsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListLoginPolicyIDPsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListLoginPolicyIDPsRequest {
    return new ListLoginPolicyIDPsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListLoginPolicyIDPsRequest {
    return new ListLoginPolicyIDPsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListLoginPolicyIDPsRequest {
    return new ListLoginPolicyIDPsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListLoginPolicyIDPsRequest | PlainMessage<ListLoginPolicyIDPsRequest> | undefined, b: ListLoginPolicyIDPsRequest | PlainMessage<ListLoginPolicyIDPsRequest> | undefined): boolean {
    return proto3.util.equals(ListLoginPolicyIDPsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListLoginPolicyIDPsResponse
 */
export class ListLoginPolicyIDPsResponse extends Message<ListLoginPolicyIDPsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.idp.v1.IDPLoginPolicyLink result = 2;
   */
  result: IDPLoginPolicyLink[] = [];

  constructor(data?: PartialMessage<ListLoginPolicyIDPsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListLoginPolicyIDPsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: IDPLoginPolicyLink, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListLoginPolicyIDPsResponse {
    return new ListLoginPolicyIDPsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListLoginPolicyIDPsResponse {
    return new ListLoginPolicyIDPsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListLoginPolicyIDPsResponse {
    return new ListLoginPolicyIDPsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListLoginPolicyIDPsResponse | PlainMessage<ListLoginPolicyIDPsResponse> | undefined, b: ListLoginPolicyIDPsResponse | PlainMessage<ListLoginPolicyIDPsResponse> | undefined): boolean {
    return proto3.util.equals(ListLoginPolicyIDPsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddIDPToLoginPolicyRequest
 */
export class AddIDPToLoginPolicyRequest extends Message<AddIDPToLoginPolicyRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  /**
   * @generated from field: zitadel.idp.v1.IDPOwnerType ownerType = 2;
   */
  ownerType = IDPOwnerType.IDP_OWNER_TYPE_UNSPECIFIED;

  constructor(data?: PartialMessage<AddIDPToLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddIDPToLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ownerType", kind: "enum", T: proto3.getEnumType(IDPOwnerType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddIDPToLoginPolicyRequest {
    return new AddIDPToLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddIDPToLoginPolicyRequest {
    return new AddIDPToLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddIDPToLoginPolicyRequest {
    return new AddIDPToLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddIDPToLoginPolicyRequest | PlainMessage<AddIDPToLoginPolicyRequest> | undefined, b: AddIDPToLoginPolicyRequest | PlainMessage<AddIDPToLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddIDPToLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddIDPToLoginPolicyResponse
 */
export class AddIDPToLoginPolicyResponse extends Message<AddIDPToLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddIDPToLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddIDPToLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddIDPToLoginPolicyResponse {
    return new AddIDPToLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddIDPToLoginPolicyResponse {
    return new AddIDPToLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddIDPToLoginPolicyResponse {
    return new AddIDPToLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddIDPToLoginPolicyResponse | PlainMessage<AddIDPToLoginPolicyResponse> | undefined, b: AddIDPToLoginPolicyResponse | PlainMessage<AddIDPToLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddIDPToLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveIDPFromLoginPolicyRequest
 */
export class RemoveIDPFromLoginPolicyRequest extends Message<RemoveIDPFromLoginPolicyRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  constructor(data?: PartialMessage<RemoveIDPFromLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveIDPFromLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveIDPFromLoginPolicyRequest {
    return new RemoveIDPFromLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveIDPFromLoginPolicyRequest {
    return new RemoveIDPFromLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveIDPFromLoginPolicyRequest {
    return new RemoveIDPFromLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveIDPFromLoginPolicyRequest | PlainMessage<RemoveIDPFromLoginPolicyRequest> | undefined, b: RemoveIDPFromLoginPolicyRequest | PlainMessage<RemoveIDPFromLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(RemoveIDPFromLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveIDPFromLoginPolicyResponse
 */
export class RemoveIDPFromLoginPolicyResponse extends Message<RemoveIDPFromLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveIDPFromLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveIDPFromLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveIDPFromLoginPolicyResponse {
    return new RemoveIDPFromLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveIDPFromLoginPolicyResponse {
    return new RemoveIDPFromLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveIDPFromLoginPolicyResponse {
    return new RemoveIDPFromLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveIDPFromLoginPolicyResponse | PlainMessage<RemoveIDPFromLoginPolicyResponse> | undefined, b: RemoveIDPFromLoginPolicyResponse | PlainMessage<RemoveIDPFromLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(RemoveIDPFromLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListLoginPolicySecondFactorsRequest
 */
export class ListLoginPolicySecondFactorsRequest extends Message<ListLoginPolicySecondFactorsRequest> {
  constructor(data?: PartialMessage<ListLoginPolicySecondFactorsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListLoginPolicySecondFactorsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListLoginPolicySecondFactorsRequest {
    return new ListLoginPolicySecondFactorsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListLoginPolicySecondFactorsRequest {
    return new ListLoginPolicySecondFactorsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListLoginPolicySecondFactorsRequest {
    return new ListLoginPolicySecondFactorsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListLoginPolicySecondFactorsRequest | PlainMessage<ListLoginPolicySecondFactorsRequest> | undefined, b: ListLoginPolicySecondFactorsRequest | PlainMessage<ListLoginPolicySecondFactorsRequest> | undefined): boolean {
    return proto3.util.equals(ListLoginPolicySecondFactorsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListLoginPolicySecondFactorsResponse
 */
export class ListLoginPolicySecondFactorsResponse extends Message<ListLoginPolicySecondFactorsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.policy.v1.SecondFactorType result = 2;
   */
  result: SecondFactorType[] = [];

  constructor(data?: PartialMessage<ListLoginPolicySecondFactorsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListLoginPolicySecondFactorsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "enum", T: proto3.getEnumType(SecondFactorType), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListLoginPolicySecondFactorsResponse {
    return new ListLoginPolicySecondFactorsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListLoginPolicySecondFactorsResponse {
    return new ListLoginPolicySecondFactorsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListLoginPolicySecondFactorsResponse {
    return new ListLoginPolicySecondFactorsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListLoginPolicySecondFactorsResponse | PlainMessage<ListLoginPolicySecondFactorsResponse> | undefined, b: ListLoginPolicySecondFactorsResponse | PlainMessage<ListLoginPolicySecondFactorsResponse> | undefined): boolean {
    return proto3.util.equals(ListLoginPolicySecondFactorsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddSecondFactorToLoginPolicyRequest
 */
export class AddSecondFactorToLoginPolicyRequest extends Message<AddSecondFactorToLoginPolicyRequest> {
  /**
   * @generated from field: zitadel.policy.v1.SecondFactorType type = 1;
   */
  type = SecondFactorType.UNSPECIFIED;

  constructor(data?: PartialMessage<AddSecondFactorToLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddSecondFactorToLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(SecondFactorType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSecondFactorToLoginPolicyRequest {
    return new AddSecondFactorToLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSecondFactorToLoginPolicyRequest {
    return new AddSecondFactorToLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSecondFactorToLoginPolicyRequest {
    return new AddSecondFactorToLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddSecondFactorToLoginPolicyRequest | PlainMessage<AddSecondFactorToLoginPolicyRequest> | undefined, b: AddSecondFactorToLoginPolicyRequest | PlainMessage<AddSecondFactorToLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddSecondFactorToLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddSecondFactorToLoginPolicyResponse
 */
export class AddSecondFactorToLoginPolicyResponse extends Message<AddSecondFactorToLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddSecondFactorToLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddSecondFactorToLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSecondFactorToLoginPolicyResponse {
    return new AddSecondFactorToLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSecondFactorToLoginPolicyResponse {
    return new AddSecondFactorToLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSecondFactorToLoginPolicyResponse {
    return new AddSecondFactorToLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddSecondFactorToLoginPolicyResponse | PlainMessage<AddSecondFactorToLoginPolicyResponse> | undefined, b: AddSecondFactorToLoginPolicyResponse | PlainMessage<AddSecondFactorToLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddSecondFactorToLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveSecondFactorFromLoginPolicyRequest
 */
export class RemoveSecondFactorFromLoginPolicyRequest extends Message<RemoveSecondFactorFromLoginPolicyRequest> {
  /**
   * @generated from field: zitadel.policy.v1.SecondFactorType type = 1;
   */
  type = SecondFactorType.UNSPECIFIED;

  constructor(data?: PartialMessage<RemoveSecondFactorFromLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveSecondFactorFromLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(SecondFactorType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveSecondFactorFromLoginPolicyRequest {
    return new RemoveSecondFactorFromLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveSecondFactorFromLoginPolicyRequest {
    return new RemoveSecondFactorFromLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveSecondFactorFromLoginPolicyRequest {
    return new RemoveSecondFactorFromLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveSecondFactorFromLoginPolicyRequest | PlainMessage<RemoveSecondFactorFromLoginPolicyRequest> | undefined, b: RemoveSecondFactorFromLoginPolicyRequest | PlainMessage<RemoveSecondFactorFromLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(RemoveSecondFactorFromLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveSecondFactorFromLoginPolicyResponse
 */
export class RemoveSecondFactorFromLoginPolicyResponse extends Message<RemoveSecondFactorFromLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveSecondFactorFromLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveSecondFactorFromLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveSecondFactorFromLoginPolicyResponse {
    return new RemoveSecondFactorFromLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveSecondFactorFromLoginPolicyResponse {
    return new RemoveSecondFactorFromLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveSecondFactorFromLoginPolicyResponse {
    return new RemoveSecondFactorFromLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveSecondFactorFromLoginPolicyResponse | PlainMessage<RemoveSecondFactorFromLoginPolicyResponse> | undefined, b: RemoveSecondFactorFromLoginPolicyResponse | PlainMessage<RemoveSecondFactorFromLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(RemoveSecondFactorFromLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListLoginPolicyMultiFactorsRequest
 */
export class ListLoginPolicyMultiFactorsRequest extends Message<ListLoginPolicyMultiFactorsRequest> {
  constructor(data?: PartialMessage<ListLoginPolicyMultiFactorsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListLoginPolicyMultiFactorsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListLoginPolicyMultiFactorsRequest {
    return new ListLoginPolicyMultiFactorsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListLoginPolicyMultiFactorsRequest {
    return new ListLoginPolicyMultiFactorsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListLoginPolicyMultiFactorsRequest {
    return new ListLoginPolicyMultiFactorsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListLoginPolicyMultiFactorsRequest | PlainMessage<ListLoginPolicyMultiFactorsRequest> | undefined, b: ListLoginPolicyMultiFactorsRequest | PlainMessage<ListLoginPolicyMultiFactorsRequest> | undefined): boolean {
    return proto3.util.equals(ListLoginPolicyMultiFactorsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListLoginPolicyMultiFactorsResponse
 */
export class ListLoginPolicyMultiFactorsResponse extends Message<ListLoginPolicyMultiFactorsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.policy.v1.MultiFactorType result = 2;
   */
  result: MultiFactorType[] = [];

  constructor(data?: PartialMessage<ListLoginPolicyMultiFactorsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListLoginPolicyMultiFactorsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "enum", T: proto3.getEnumType(MultiFactorType), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListLoginPolicyMultiFactorsResponse {
    return new ListLoginPolicyMultiFactorsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListLoginPolicyMultiFactorsResponse {
    return new ListLoginPolicyMultiFactorsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListLoginPolicyMultiFactorsResponse {
    return new ListLoginPolicyMultiFactorsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListLoginPolicyMultiFactorsResponse | PlainMessage<ListLoginPolicyMultiFactorsResponse> | undefined, b: ListLoginPolicyMultiFactorsResponse | PlainMessage<ListLoginPolicyMultiFactorsResponse> | undefined): boolean {
    return proto3.util.equals(ListLoginPolicyMultiFactorsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddMultiFactorToLoginPolicyRequest
 */
export class AddMultiFactorToLoginPolicyRequest extends Message<AddMultiFactorToLoginPolicyRequest> {
  /**
   * @generated from field: zitadel.policy.v1.MultiFactorType type = 1;
   */
  type = MultiFactorType.UNSPECIFIED;

  constructor(data?: PartialMessage<AddMultiFactorToLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddMultiFactorToLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(MultiFactorType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMultiFactorToLoginPolicyRequest {
    return new AddMultiFactorToLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMultiFactorToLoginPolicyRequest {
    return new AddMultiFactorToLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMultiFactorToLoginPolicyRequest {
    return new AddMultiFactorToLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddMultiFactorToLoginPolicyRequest | PlainMessage<AddMultiFactorToLoginPolicyRequest> | undefined, b: AddMultiFactorToLoginPolicyRequest | PlainMessage<AddMultiFactorToLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddMultiFactorToLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddMultiFactorToLoginPolicyResponse
 */
export class AddMultiFactorToLoginPolicyResponse extends Message<AddMultiFactorToLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddMultiFactorToLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddMultiFactorToLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMultiFactorToLoginPolicyResponse {
    return new AddMultiFactorToLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMultiFactorToLoginPolicyResponse {
    return new AddMultiFactorToLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMultiFactorToLoginPolicyResponse {
    return new AddMultiFactorToLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddMultiFactorToLoginPolicyResponse | PlainMessage<AddMultiFactorToLoginPolicyResponse> | undefined, b: AddMultiFactorToLoginPolicyResponse | PlainMessage<AddMultiFactorToLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddMultiFactorToLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveMultiFactorFromLoginPolicyRequest
 */
export class RemoveMultiFactorFromLoginPolicyRequest extends Message<RemoveMultiFactorFromLoginPolicyRequest> {
  /**
   * @generated from field: zitadel.policy.v1.MultiFactorType type = 1;
   */
  type = MultiFactorType.UNSPECIFIED;

  constructor(data?: PartialMessage<RemoveMultiFactorFromLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveMultiFactorFromLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(MultiFactorType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMultiFactorFromLoginPolicyRequest {
    return new RemoveMultiFactorFromLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMultiFactorFromLoginPolicyRequest {
    return new RemoveMultiFactorFromLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMultiFactorFromLoginPolicyRequest {
    return new RemoveMultiFactorFromLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMultiFactorFromLoginPolicyRequest | PlainMessage<RemoveMultiFactorFromLoginPolicyRequest> | undefined, b: RemoveMultiFactorFromLoginPolicyRequest | PlainMessage<RemoveMultiFactorFromLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMultiFactorFromLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveMultiFactorFromLoginPolicyResponse
 */
export class RemoveMultiFactorFromLoginPolicyResponse extends Message<RemoveMultiFactorFromLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMultiFactorFromLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveMultiFactorFromLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMultiFactorFromLoginPolicyResponse {
    return new RemoveMultiFactorFromLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMultiFactorFromLoginPolicyResponse {
    return new RemoveMultiFactorFromLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMultiFactorFromLoginPolicyResponse {
    return new RemoveMultiFactorFromLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMultiFactorFromLoginPolicyResponse | PlainMessage<RemoveMultiFactorFromLoginPolicyResponse> | undefined, b: RemoveMultiFactorFromLoginPolicyResponse | PlainMessage<RemoveMultiFactorFromLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMultiFactorFromLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetPasswordComplexityPolicyRequest
 */
export class GetPasswordComplexityPolicyRequest extends Message<GetPasswordComplexityPolicyRequest> {
  constructor(data?: PartialMessage<GetPasswordComplexityPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetPasswordComplexityPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPasswordComplexityPolicyRequest {
    return new GetPasswordComplexityPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPasswordComplexityPolicyRequest {
    return new GetPasswordComplexityPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPasswordComplexityPolicyRequest {
    return new GetPasswordComplexityPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPasswordComplexityPolicyRequest | PlainMessage<GetPasswordComplexityPolicyRequest> | undefined, b: GetPasswordComplexityPolicyRequest | PlainMessage<GetPasswordComplexityPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetPasswordComplexityPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetPasswordComplexityPolicyResponse
 */
export class GetPasswordComplexityPolicyResponse extends Message<GetPasswordComplexityPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.PasswordComplexityPolicy policy = 1;
   */
  policy?: PasswordComplexityPolicy;

  /**
   * deprecated: is_default is also defined in zitadel.policy.v1.PasswordComplexityPolicy
   *
   * @generated from field: bool is_default = 2;
   */
  isDefault = false;

  constructor(data?: PartialMessage<GetPasswordComplexityPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetPasswordComplexityPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: PasswordComplexityPolicy },
    { no: 2, name: "is_default", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPasswordComplexityPolicyResponse {
    return new GetPasswordComplexityPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPasswordComplexityPolicyResponse {
    return new GetPasswordComplexityPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPasswordComplexityPolicyResponse {
    return new GetPasswordComplexityPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPasswordComplexityPolicyResponse | PlainMessage<GetPasswordComplexityPolicyResponse> | undefined, b: GetPasswordComplexityPolicyResponse | PlainMessage<GetPasswordComplexityPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetPasswordComplexityPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetDefaultPasswordComplexityPolicyRequest
 */
export class GetDefaultPasswordComplexityPolicyRequest extends Message<GetDefaultPasswordComplexityPolicyRequest> {
  constructor(data?: PartialMessage<GetDefaultPasswordComplexityPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultPasswordComplexityPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordComplexityPolicyRequest {
    return new GetDefaultPasswordComplexityPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordComplexityPolicyRequest {
    return new GetDefaultPasswordComplexityPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordComplexityPolicyRequest {
    return new GetDefaultPasswordComplexityPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordComplexityPolicyRequest | PlainMessage<GetDefaultPasswordComplexityPolicyRequest> | undefined, b: GetDefaultPasswordComplexityPolicyRequest | PlainMessage<GetDefaultPasswordComplexityPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordComplexityPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultPasswordComplexityPolicyResponse
 */
export class GetDefaultPasswordComplexityPolicyResponse extends Message<GetDefaultPasswordComplexityPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.PasswordComplexityPolicy policy = 1;
   */
  policy?: PasswordComplexityPolicy;

  constructor(data?: PartialMessage<GetDefaultPasswordComplexityPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultPasswordComplexityPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: PasswordComplexityPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordComplexityPolicyResponse {
    return new GetDefaultPasswordComplexityPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordComplexityPolicyResponse {
    return new GetDefaultPasswordComplexityPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordComplexityPolicyResponse {
    return new GetDefaultPasswordComplexityPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordComplexityPolicyResponse | PlainMessage<GetDefaultPasswordComplexityPolicyResponse> | undefined, b: GetDefaultPasswordComplexityPolicyResponse | PlainMessage<GetDefaultPasswordComplexityPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordComplexityPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomPasswordComplexityPolicyRequest
 */
export class AddCustomPasswordComplexityPolicyRequest extends Message<AddCustomPasswordComplexityPolicyRequest> {
  /**
   * @generated from field: uint64 min_length = 1;
   */
  minLength = protoInt64.zero;

  /**
   * @generated from field: bool has_uppercase = 2;
   */
  hasUppercase = false;

  /**
   * @generated from field: bool has_lowercase = 3;
   */
  hasLowercase = false;

  /**
   * @generated from field: bool has_number = 4;
   */
  hasNumber = false;

  /**
   * @generated from field: bool has_symbol = 5;
   */
  hasSymbol = false;

  constructor(data?: PartialMessage<AddCustomPasswordComplexityPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomPasswordComplexityPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "min_length", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "has_uppercase", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "has_lowercase", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "has_number", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "has_symbol", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomPasswordComplexityPolicyRequest {
    return new AddCustomPasswordComplexityPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomPasswordComplexityPolicyRequest {
    return new AddCustomPasswordComplexityPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomPasswordComplexityPolicyRequest {
    return new AddCustomPasswordComplexityPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomPasswordComplexityPolicyRequest | PlainMessage<AddCustomPasswordComplexityPolicyRequest> | undefined, b: AddCustomPasswordComplexityPolicyRequest | PlainMessage<AddCustomPasswordComplexityPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddCustomPasswordComplexityPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomPasswordComplexityPolicyResponse
 */
export class AddCustomPasswordComplexityPolicyResponse extends Message<AddCustomPasswordComplexityPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddCustomPasswordComplexityPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomPasswordComplexityPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomPasswordComplexityPolicyResponse {
    return new AddCustomPasswordComplexityPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomPasswordComplexityPolicyResponse {
    return new AddCustomPasswordComplexityPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomPasswordComplexityPolicyResponse {
    return new AddCustomPasswordComplexityPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomPasswordComplexityPolicyResponse | PlainMessage<AddCustomPasswordComplexityPolicyResponse> | undefined, b: AddCustomPasswordComplexityPolicyResponse | PlainMessage<AddCustomPasswordComplexityPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddCustomPasswordComplexityPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomPasswordComplexityPolicyRequest
 */
export class UpdateCustomPasswordComplexityPolicyRequest extends Message<UpdateCustomPasswordComplexityPolicyRequest> {
  /**
   * @generated from field: uint64 min_length = 1;
   */
  minLength = protoInt64.zero;

  /**
   * @generated from field: bool has_uppercase = 2;
   */
  hasUppercase = false;

  /**
   * @generated from field: bool has_lowercase = 3;
   */
  hasLowercase = false;

  /**
   * @generated from field: bool has_number = 4;
   */
  hasNumber = false;

  /**
   * @generated from field: bool has_symbol = 5;
   */
  hasSymbol = false;

  constructor(data?: PartialMessage<UpdateCustomPasswordComplexityPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomPasswordComplexityPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "min_length", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "has_uppercase", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "has_lowercase", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "has_number", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "has_symbol", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomPasswordComplexityPolicyRequest {
    return new UpdateCustomPasswordComplexityPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomPasswordComplexityPolicyRequest {
    return new UpdateCustomPasswordComplexityPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomPasswordComplexityPolicyRequest {
    return new UpdateCustomPasswordComplexityPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomPasswordComplexityPolicyRequest | PlainMessage<UpdateCustomPasswordComplexityPolicyRequest> | undefined, b: UpdateCustomPasswordComplexityPolicyRequest | PlainMessage<UpdateCustomPasswordComplexityPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateCustomPasswordComplexityPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomPasswordComplexityPolicyResponse
 */
export class UpdateCustomPasswordComplexityPolicyResponse extends Message<UpdateCustomPasswordComplexityPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateCustomPasswordComplexityPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomPasswordComplexityPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomPasswordComplexityPolicyResponse {
    return new UpdateCustomPasswordComplexityPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomPasswordComplexityPolicyResponse {
    return new UpdateCustomPasswordComplexityPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomPasswordComplexityPolicyResponse {
    return new UpdateCustomPasswordComplexityPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomPasswordComplexityPolicyResponse | PlainMessage<UpdateCustomPasswordComplexityPolicyResponse> | undefined, b: UpdateCustomPasswordComplexityPolicyResponse | PlainMessage<UpdateCustomPasswordComplexityPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateCustomPasswordComplexityPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.ResetPasswordComplexityPolicyToDefaultRequest
 */
export class ResetPasswordComplexityPolicyToDefaultRequest extends Message<ResetPasswordComplexityPolicyToDefaultRequest> {
  constructor(data?: PartialMessage<ResetPasswordComplexityPolicyToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetPasswordComplexityPolicyToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetPasswordComplexityPolicyToDefaultRequest {
    return new ResetPasswordComplexityPolicyToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetPasswordComplexityPolicyToDefaultRequest {
    return new ResetPasswordComplexityPolicyToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetPasswordComplexityPolicyToDefaultRequest {
    return new ResetPasswordComplexityPolicyToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetPasswordComplexityPolicyToDefaultRequest | PlainMessage<ResetPasswordComplexityPolicyToDefaultRequest> | undefined, b: ResetPasswordComplexityPolicyToDefaultRequest | PlainMessage<ResetPasswordComplexityPolicyToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetPasswordComplexityPolicyToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetPasswordComplexityPolicyToDefaultResponse
 */
export class ResetPasswordComplexityPolicyToDefaultResponse extends Message<ResetPasswordComplexityPolicyToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetPasswordComplexityPolicyToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetPasswordComplexityPolicyToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetPasswordComplexityPolicyToDefaultResponse {
    return new ResetPasswordComplexityPolicyToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetPasswordComplexityPolicyToDefaultResponse {
    return new ResetPasswordComplexityPolicyToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetPasswordComplexityPolicyToDefaultResponse {
    return new ResetPasswordComplexityPolicyToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetPasswordComplexityPolicyToDefaultResponse | PlainMessage<ResetPasswordComplexityPolicyToDefaultResponse> | undefined, b: ResetPasswordComplexityPolicyToDefaultResponse | PlainMessage<ResetPasswordComplexityPolicyToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetPasswordComplexityPolicyToDefaultResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetPasswordAgePolicyRequest
 */
export class GetPasswordAgePolicyRequest extends Message<GetPasswordAgePolicyRequest> {
  constructor(data?: PartialMessage<GetPasswordAgePolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetPasswordAgePolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPasswordAgePolicyRequest {
    return new GetPasswordAgePolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPasswordAgePolicyRequest {
    return new GetPasswordAgePolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPasswordAgePolicyRequest {
    return new GetPasswordAgePolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPasswordAgePolicyRequest | PlainMessage<GetPasswordAgePolicyRequest> | undefined, b: GetPasswordAgePolicyRequest | PlainMessage<GetPasswordAgePolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetPasswordAgePolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetPasswordAgePolicyResponse
 */
export class GetPasswordAgePolicyResponse extends Message<GetPasswordAgePolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.PasswordAgePolicy policy = 1;
   */
  policy?: PasswordAgePolicy;

  /**
   * deprecated: is_default is also defined in zitadel.policy.v1.PasswordAgePolicy
   *
   * @generated from field: bool is_default = 2;
   */
  isDefault = false;

  constructor(data?: PartialMessage<GetPasswordAgePolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetPasswordAgePolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: PasswordAgePolicy },
    { no: 2, name: "is_default", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPasswordAgePolicyResponse {
    return new GetPasswordAgePolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPasswordAgePolicyResponse {
    return new GetPasswordAgePolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPasswordAgePolicyResponse {
    return new GetPasswordAgePolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPasswordAgePolicyResponse | PlainMessage<GetPasswordAgePolicyResponse> | undefined, b: GetPasswordAgePolicyResponse | PlainMessage<GetPasswordAgePolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetPasswordAgePolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetDefaultPasswordAgePolicyRequest
 */
export class GetDefaultPasswordAgePolicyRequest extends Message<GetDefaultPasswordAgePolicyRequest> {
  constructor(data?: PartialMessage<GetDefaultPasswordAgePolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultPasswordAgePolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordAgePolicyRequest {
    return new GetDefaultPasswordAgePolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordAgePolicyRequest {
    return new GetDefaultPasswordAgePolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordAgePolicyRequest {
    return new GetDefaultPasswordAgePolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordAgePolicyRequest | PlainMessage<GetDefaultPasswordAgePolicyRequest> | undefined, b: GetDefaultPasswordAgePolicyRequest | PlainMessage<GetDefaultPasswordAgePolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordAgePolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultPasswordAgePolicyResponse
 */
export class GetDefaultPasswordAgePolicyResponse extends Message<GetDefaultPasswordAgePolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.PasswordAgePolicy policy = 1;
   */
  policy?: PasswordAgePolicy;

  constructor(data?: PartialMessage<GetDefaultPasswordAgePolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultPasswordAgePolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: PasswordAgePolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordAgePolicyResponse {
    return new GetDefaultPasswordAgePolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordAgePolicyResponse {
    return new GetDefaultPasswordAgePolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordAgePolicyResponse {
    return new GetDefaultPasswordAgePolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordAgePolicyResponse | PlainMessage<GetDefaultPasswordAgePolicyResponse> | undefined, b: GetDefaultPasswordAgePolicyResponse | PlainMessage<GetDefaultPasswordAgePolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordAgePolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomPasswordAgePolicyRequest
 */
export class AddCustomPasswordAgePolicyRequest extends Message<AddCustomPasswordAgePolicyRequest> {
  /**
   * Amount of days after which a password will expire. The user will be forced to change the password on the following authentication.
   *
   * @generated from field: uint32 max_age_days = 1;
   */
  maxAgeDays = 0;

  /**
   * Amount of days after which the user should be notified of the upcoming expiry. ZITADEL will not notify the user.
   *
   * @generated from field: uint32 expire_warn_days = 2;
   */
  expireWarnDays = 0;

  constructor(data?: PartialMessage<AddCustomPasswordAgePolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomPasswordAgePolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "max_age_days", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "expire_warn_days", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomPasswordAgePolicyRequest {
    return new AddCustomPasswordAgePolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomPasswordAgePolicyRequest {
    return new AddCustomPasswordAgePolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomPasswordAgePolicyRequest {
    return new AddCustomPasswordAgePolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomPasswordAgePolicyRequest | PlainMessage<AddCustomPasswordAgePolicyRequest> | undefined, b: AddCustomPasswordAgePolicyRequest | PlainMessage<AddCustomPasswordAgePolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddCustomPasswordAgePolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomPasswordAgePolicyResponse
 */
export class AddCustomPasswordAgePolicyResponse extends Message<AddCustomPasswordAgePolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddCustomPasswordAgePolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomPasswordAgePolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomPasswordAgePolicyResponse {
    return new AddCustomPasswordAgePolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomPasswordAgePolicyResponse {
    return new AddCustomPasswordAgePolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomPasswordAgePolicyResponse {
    return new AddCustomPasswordAgePolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomPasswordAgePolicyResponse | PlainMessage<AddCustomPasswordAgePolicyResponse> | undefined, b: AddCustomPasswordAgePolicyResponse | PlainMessage<AddCustomPasswordAgePolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddCustomPasswordAgePolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomPasswordAgePolicyRequest
 */
export class UpdateCustomPasswordAgePolicyRequest extends Message<UpdateCustomPasswordAgePolicyRequest> {
  /**
   * Amount of days after which a password will expire. The user will be forced to change the password on the following authentication.
   *
   * @generated from field: uint32 max_age_days = 1;
   */
  maxAgeDays = 0;

  /**
   * Amount of days after which the user should be notified of the upcoming expiry. ZITADEL will not notify the user.
   *
   * @generated from field: uint32 expire_warn_days = 2;
   */
  expireWarnDays = 0;

  constructor(data?: PartialMessage<UpdateCustomPasswordAgePolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomPasswordAgePolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "max_age_days", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "expire_warn_days", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomPasswordAgePolicyRequest {
    return new UpdateCustomPasswordAgePolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomPasswordAgePolicyRequest {
    return new UpdateCustomPasswordAgePolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomPasswordAgePolicyRequest {
    return new UpdateCustomPasswordAgePolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomPasswordAgePolicyRequest | PlainMessage<UpdateCustomPasswordAgePolicyRequest> | undefined, b: UpdateCustomPasswordAgePolicyRequest | PlainMessage<UpdateCustomPasswordAgePolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateCustomPasswordAgePolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomPasswordAgePolicyResponse
 */
export class UpdateCustomPasswordAgePolicyResponse extends Message<UpdateCustomPasswordAgePolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateCustomPasswordAgePolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomPasswordAgePolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomPasswordAgePolicyResponse {
    return new UpdateCustomPasswordAgePolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomPasswordAgePolicyResponse {
    return new UpdateCustomPasswordAgePolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomPasswordAgePolicyResponse {
    return new UpdateCustomPasswordAgePolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomPasswordAgePolicyResponse | PlainMessage<UpdateCustomPasswordAgePolicyResponse> | undefined, b: UpdateCustomPasswordAgePolicyResponse | PlainMessage<UpdateCustomPasswordAgePolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateCustomPasswordAgePolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.ResetPasswordAgePolicyToDefaultRequest
 */
export class ResetPasswordAgePolicyToDefaultRequest extends Message<ResetPasswordAgePolicyToDefaultRequest> {
  constructor(data?: PartialMessage<ResetPasswordAgePolicyToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetPasswordAgePolicyToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetPasswordAgePolicyToDefaultRequest {
    return new ResetPasswordAgePolicyToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetPasswordAgePolicyToDefaultRequest {
    return new ResetPasswordAgePolicyToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetPasswordAgePolicyToDefaultRequest {
    return new ResetPasswordAgePolicyToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetPasswordAgePolicyToDefaultRequest | PlainMessage<ResetPasswordAgePolicyToDefaultRequest> | undefined, b: ResetPasswordAgePolicyToDefaultRequest | PlainMessage<ResetPasswordAgePolicyToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetPasswordAgePolicyToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetPasswordAgePolicyToDefaultResponse
 */
export class ResetPasswordAgePolicyToDefaultResponse extends Message<ResetPasswordAgePolicyToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetPasswordAgePolicyToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetPasswordAgePolicyToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetPasswordAgePolicyToDefaultResponse {
    return new ResetPasswordAgePolicyToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetPasswordAgePolicyToDefaultResponse {
    return new ResetPasswordAgePolicyToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetPasswordAgePolicyToDefaultResponse {
    return new ResetPasswordAgePolicyToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetPasswordAgePolicyToDefaultResponse | PlainMessage<ResetPasswordAgePolicyToDefaultResponse> | undefined, b: ResetPasswordAgePolicyToDefaultResponse | PlainMessage<ResetPasswordAgePolicyToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetPasswordAgePolicyToDefaultResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetLockoutPolicyRequest
 */
export class GetLockoutPolicyRequest extends Message<GetLockoutPolicyRequest> {
  constructor(data?: PartialMessage<GetLockoutPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetLockoutPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLockoutPolicyRequest {
    return new GetLockoutPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLockoutPolicyRequest {
    return new GetLockoutPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLockoutPolicyRequest {
    return new GetLockoutPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetLockoutPolicyRequest | PlainMessage<GetLockoutPolicyRequest> | undefined, b: GetLockoutPolicyRequest | PlainMessage<GetLockoutPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetLockoutPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetLockoutPolicyResponse
 */
export class GetLockoutPolicyResponse extends Message<GetLockoutPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.LockoutPolicy policy = 1;
   */
  policy?: LockoutPolicy;

  /**
   * deprecated: is_default is also defined in zitadel.policy.v1.LockoutPolicy
   *
   * @generated from field: bool is_default = 2;
   */
  isDefault = false;

  constructor(data?: PartialMessage<GetLockoutPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetLockoutPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: LockoutPolicy },
    { no: 2, name: "is_default", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLockoutPolicyResponse {
    return new GetLockoutPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLockoutPolicyResponse {
    return new GetLockoutPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLockoutPolicyResponse {
    return new GetLockoutPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetLockoutPolicyResponse | PlainMessage<GetLockoutPolicyResponse> | undefined, b: GetLockoutPolicyResponse | PlainMessage<GetLockoutPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetLockoutPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetDefaultLockoutPolicyRequest
 */
export class GetDefaultLockoutPolicyRequest extends Message<GetDefaultLockoutPolicyRequest> {
  constructor(data?: PartialMessage<GetDefaultLockoutPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultLockoutPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultLockoutPolicyRequest {
    return new GetDefaultLockoutPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultLockoutPolicyRequest {
    return new GetDefaultLockoutPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultLockoutPolicyRequest {
    return new GetDefaultLockoutPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultLockoutPolicyRequest | PlainMessage<GetDefaultLockoutPolicyRequest> | undefined, b: GetDefaultLockoutPolicyRequest | PlainMessage<GetDefaultLockoutPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultLockoutPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultLockoutPolicyResponse
 */
export class GetDefaultLockoutPolicyResponse extends Message<GetDefaultLockoutPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.LockoutPolicy policy = 1;
   */
  policy?: LockoutPolicy;

  constructor(data?: PartialMessage<GetDefaultLockoutPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultLockoutPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: LockoutPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultLockoutPolicyResponse {
    return new GetDefaultLockoutPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultLockoutPolicyResponse {
    return new GetDefaultLockoutPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultLockoutPolicyResponse {
    return new GetDefaultLockoutPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultLockoutPolicyResponse | PlainMessage<GetDefaultLockoutPolicyResponse> | undefined, b: GetDefaultLockoutPolicyResponse | PlainMessage<GetDefaultLockoutPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultLockoutPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomLockoutPolicyRequest
 */
export class AddCustomLockoutPolicyRequest extends Message<AddCustomLockoutPolicyRequest> {
  /**
   * @generated from field: uint32 max_password_attempts = 1;
   */
  maxPasswordAttempts = 0;

  /**
   * @generated from field: uint32 max_otp_attempts = 2;
   */
  maxOtpAttempts = 0;

  constructor(data?: PartialMessage<AddCustomLockoutPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomLockoutPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "max_password_attempts", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "max_otp_attempts", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomLockoutPolicyRequest {
    return new AddCustomLockoutPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomLockoutPolicyRequest {
    return new AddCustomLockoutPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomLockoutPolicyRequest {
    return new AddCustomLockoutPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomLockoutPolicyRequest | PlainMessage<AddCustomLockoutPolicyRequest> | undefined, b: AddCustomLockoutPolicyRequest | PlainMessage<AddCustomLockoutPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddCustomLockoutPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomLockoutPolicyResponse
 */
export class AddCustomLockoutPolicyResponse extends Message<AddCustomLockoutPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddCustomLockoutPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomLockoutPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomLockoutPolicyResponse {
    return new AddCustomLockoutPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomLockoutPolicyResponse {
    return new AddCustomLockoutPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomLockoutPolicyResponse {
    return new AddCustomLockoutPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomLockoutPolicyResponse | PlainMessage<AddCustomLockoutPolicyResponse> | undefined, b: AddCustomLockoutPolicyResponse | PlainMessage<AddCustomLockoutPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddCustomLockoutPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomLockoutPolicyRequest
 */
export class UpdateCustomLockoutPolicyRequest extends Message<UpdateCustomLockoutPolicyRequest> {
  /**
   * @generated from field: uint32 max_password_attempts = 1;
   */
  maxPasswordAttempts = 0;

  /**
   * @generated from field: uint32 max_otp_attempts = 2;
   */
  maxOtpAttempts = 0;

  constructor(data?: PartialMessage<UpdateCustomLockoutPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomLockoutPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "max_password_attempts", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "max_otp_attempts", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomLockoutPolicyRequest {
    return new UpdateCustomLockoutPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomLockoutPolicyRequest {
    return new UpdateCustomLockoutPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomLockoutPolicyRequest {
    return new UpdateCustomLockoutPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomLockoutPolicyRequest | PlainMessage<UpdateCustomLockoutPolicyRequest> | undefined, b: UpdateCustomLockoutPolicyRequest | PlainMessage<UpdateCustomLockoutPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateCustomLockoutPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomLockoutPolicyResponse
 */
export class UpdateCustomLockoutPolicyResponse extends Message<UpdateCustomLockoutPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateCustomLockoutPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomLockoutPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomLockoutPolicyResponse {
    return new UpdateCustomLockoutPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomLockoutPolicyResponse {
    return new UpdateCustomLockoutPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomLockoutPolicyResponse {
    return new UpdateCustomLockoutPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomLockoutPolicyResponse | PlainMessage<UpdateCustomLockoutPolicyResponse> | undefined, b: UpdateCustomLockoutPolicyResponse | PlainMessage<UpdateCustomLockoutPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateCustomLockoutPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.ResetLockoutPolicyToDefaultRequest
 */
export class ResetLockoutPolicyToDefaultRequest extends Message<ResetLockoutPolicyToDefaultRequest> {
  constructor(data?: PartialMessage<ResetLockoutPolicyToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetLockoutPolicyToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetLockoutPolicyToDefaultRequest {
    return new ResetLockoutPolicyToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetLockoutPolicyToDefaultRequest {
    return new ResetLockoutPolicyToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetLockoutPolicyToDefaultRequest {
    return new ResetLockoutPolicyToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetLockoutPolicyToDefaultRequest | PlainMessage<ResetLockoutPolicyToDefaultRequest> | undefined, b: ResetLockoutPolicyToDefaultRequest | PlainMessage<ResetLockoutPolicyToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetLockoutPolicyToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetLockoutPolicyToDefaultResponse
 */
export class ResetLockoutPolicyToDefaultResponse extends Message<ResetLockoutPolicyToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetLockoutPolicyToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetLockoutPolicyToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetLockoutPolicyToDefaultResponse {
    return new ResetLockoutPolicyToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetLockoutPolicyToDefaultResponse {
    return new ResetLockoutPolicyToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetLockoutPolicyToDefaultResponse {
    return new ResetLockoutPolicyToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetLockoutPolicyToDefaultResponse | PlainMessage<ResetLockoutPolicyToDefaultResponse> | undefined, b: ResetLockoutPolicyToDefaultResponse | PlainMessage<ResetLockoutPolicyToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetLockoutPolicyToDefaultResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetPrivacyPolicyRequest
 */
export class GetPrivacyPolicyRequest extends Message<GetPrivacyPolicyRequest> {
  constructor(data?: PartialMessage<GetPrivacyPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetPrivacyPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPrivacyPolicyRequest {
    return new GetPrivacyPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPrivacyPolicyRequest {
    return new GetPrivacyPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPrivacyPolicyRequest {
    return new GetPrivacyPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPrivacyPolicyRequest | PlainMessage<GetPrivacyPolicyRequest> | undefined, b: GetPrivacyPolicyRequest | PlainMessage<GetPrivacyPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetPrivacyPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetPrivacyPolicyResponse
 */
export class GetPrivacyPolicyResponse extends Message<GetPrivacyPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.PrivacyPolicy policy = 1;
   */
  policy?: PrivacyPolicy;

  constructor(data?: PartialMessage<GetPrivacyPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetPrivacyPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: PrivacyPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPrivacyPolicyResponse {
    return new GetPrivacyPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPrivacyPolicyResponse {
    return new GetPrivacyPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPrivacyPolicyResponse {
    return new GetPrivacyPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPrivacyPolicyResponse | PlainMessage<GetPrivacyPolicyResponse> | undefined, b: GetPrivacyPolicyResponse | PlainMessage<GetPrivacyPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetPrivacyPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetDefaultPrivacyPolicyRequest
 */
export class GetDefaultPrivacyPolicyRequest extends Message<GetDefaultPrivacyPolicyRequest> {
  constructor(data?: PartialMessage<GetDefaultPrivacyPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultPrivacyPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPrivacyPolicyRequest {
    return new GetDefaultPrivacyPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPrivacyPolicyRequest {
    return new GetDefaultPrivacyPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPrivacyPolicyRequest {
    return new GetDefaultPrivacyPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPrivacyPolicyRequest | PlainMessage<GetDefaultPrivacyPolicyRequest> | undefined, b: GetDefaultPrivacyPolicyRequest | PlainMessage<GetDefaultPrivacyPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultPrivacyPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultPrivacyPolicyResponse
 */
export class GetDefaultPrivacyPolicyResponse extends Message<GetDefaultPrivacyPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.PrivacyPolicy policy = 1;
   */
  policy?: PrivacyPolicy;

  constructor(data?: PartialMessage<GetDefaultPrivacyPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultPrivacyPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: PrivacyPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPrivacyPolicyResponse {
    return new GetDefaultPrivacyPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPrivacyPolicyResponse {
    return new GetDefaultPrivacyPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPrivacyPolicyResponse {
    return new GetDefaultPrivacyPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPrivacyPolicyResponse | PlainMessage<GetDefaultPrivacyPolicyResponse> | undefined, b: GetDefaultPrivacyPolicyResponse | PlainMessage<GetDefaultPrivacyPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultPrivacyPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomPrivacyPolicyRequest
 */
export class AddCustomPrivacyPolicyRequest extends Message<AddCustomPrivacyPolicyRequest> {
  /**
   * @generated from field: string tos_link = 1;
   */
  tosLink = "";

  /**
   * @generated from field: string privacy_link = 2;
   */
  privacyLink = "";

  /**
   * @generated from field: string help_link = 3;
   */
  helpLink = "";

  /**
   * @generated from field: string support_email = 4;
   */
  supportEmail = "";

  /**
   * @generated from field: string docs_link = 5;
   */
  docsLink = "";

  /**
   * @generated from field: string custom_link = 6;
   */
  customLink = "";

  /**
   * @generated from field: string custom_link_text = 7;
   */
  customLinkText = "";

  constructor(data?: PartialMessage<AddCustomPrivacyPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomPrivacyPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tos_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "privacy_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "help_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "support_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "docs_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "custom_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "custom_link_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomPrivacyPolicyRequest {
    return new AddCustomPrivacyPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomPrivacyPolicyRequest {
    return new AddCustomPrivacyPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomPrivacyPolicyRequest {
    return new AddCustomPrivacyPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomPrivacyPolicyRequest | PlainMessage<AddCustomPrivacyPolicyRequest> | undefined, b: AddCustomPrivacyPolicyRequest | PlainMessage<AddCustomPrivacyPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddCustomPrivacyPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomPrivacyPolicyResponse
 */
export class AddCustomPrivacyPolicyResponse extends Message<AddCustomPrivacyPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddCustomPrivacyPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomPrivacyPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomPrivacyPolicyResponse {
    return new AddCustomPrivacyPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomPrivacyPolicyResponse {
    return new AddCustomPrivacyPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomPrivacyPolicyResponse {
    return new AddCustomPrivacyPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomPrivacyPolicyResponse | PlainMessage<AddCustomPrivacyPolicyResponse> | undefined, b: AddCustomPrivacyPolicyResponse | PlainMessage<AddCustomPrivacyPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddCustomPrivacyPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomPrivacyPolicyRequest
 */
export class UpdateCustomPrivacyPolicyRequest extends Message<UpdateCustomPrivacyPolicyRequest> {
  /**
   * @generated from field: string tos_link = 1;
   */
  tosLink = "";

  /**
   * @generated from field: string privacy_link = 2;
   */
  privacyLink = "";

  /**
   * @generated from field: string help_link = 3;
   */
  helpLink = "";

  /**
   * @generated from field: string support_email = 4;
   */
  supportEmail = "";

  /**
   * @generated from field: string docs_link = 5;
   */
  docsLink = "";

  /**
   * @generated from field: string custom_link = 6;
   */
  customLink = "";

  /**
   * @generated from field: string custom_link_text = 7;
   */
  customLinkText = "";

  constructor(data?: PartialMessage<UpdateCustomPrivacyPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomPrivacyPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tos_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "privacy_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "help_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "support_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "docs_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "custom_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "custom_link_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomPrivacyPolicyRequest {
    return new UpdateCustomPrivacyPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomPrivacyPolicyRequest {
    return new UpdateCustomPrivacyPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomPrivacyPolicyRequest {
    return new UpdateCustomPrivacyPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomPrivacyPolicyRequest | PlainMessage<UpdateCustomPrivacyPolicyRequest> | undefined, b: UpdateCustomPrivacyPolicyRequest | PlainMessage<UpdateCustomPrivacyPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateCustomPrivacyPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomPrivacyPolicyResponse
 */
export class UpdateCustomPrivacyPolicyResponse extends Message<UpdateCustomPrivacyPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateCustomPrivacyPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomPrivacyPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomPrivacyPolicyResponse {
    return new UpdateCustomPrivacyPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomPrivacyPolicyResponse {
    return new UpdateCustomPrivacyPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomPrivacyPolicyResponse {
    return new UpdateCustomPrivacyPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomPrivacyPolicyResponse | PlainMessage<UpdateCustomPrivacyPolicyResponse> | undefined, b: UpdateCustomPrivacyPolicyResponse | PlainMessage<UpdateCustomPrivacyPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateCustomPrivacyPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.ResetPrivacyPolicyToDefaultRequest
 */
export class ResetPrivacyPolicyToDefaultRequest extends Message<ResetPrivacyPolicyToDefaultRequest> {
  constructor(data?: PartialMessage<ResetPrivacyPolicyToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetPrivacyPolicyToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetPrivacyPolicyToDefaultRequest {
    return new ResetPrivacyPolicyToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetPrivacyPolicyToDefaultRequest {
    return new ResetPrivacyPolicyToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetPrivacyPolicyToDefaultRequest {
    return new ResetPrivacyPolicyToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetPrivacyPolicyToDefaultRequest | PlainMessage<ResetPrivacyPolicyToDefaultRequest> | undefined, b: ResetPrivacyPolicyToDefaultRequest | PlainMessage<ResetPrivacyPolicyToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetPrivacyPolicyToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetPrivacyPolicyToDefaultResponse
 */
export class ResetPrivacyPolicyToDefaultResponse extends Message<ResetPrivacyPolicyToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetPrivacyPolicyToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetPrivacyPolicyToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetPrivacyPolicyToDefaultResponse {
    return new ResetPrivacyPolicyToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetPrivacyPolicyToDefaultResponse {
    return new ResetPrivacyPolicyToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetPrivacyPolicyToDefaultResponse {
    return new ResetPrivacyPolicyToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetPrivacyPolicyToDefaultResponse | PlainMessage<ResetPrivacyPolicyToDefaultResponse> | undefined, b: ResetPrivacyPolicyToDefaultResponse | PlainMessage<ResetPrivacyPolicyToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetPrivacyPolicyToDefaultResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetNotificationPolicyRequest
 */
export class GetNotificationPolicyRequest extends Message<GetNotificationPolicyRequest> {
  constructor(data?: PartialMessage<GetNotificationPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetNotificationPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetNotificationPolicyRequest {
    return new GetNotificationPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetNotificationPolicyRequest {
    return new GetNotificationPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetNotificationPolicyRequest {
    return new GetNotificationPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetNotificationPolicyRequest | PlainMessage<GetNotificationPolicyRequest> | undefined, b: GetNotificationPolicyRequest | PlainMessage<GetNotificationPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetNotificationPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetNotificationPolicyResponse
 */
export class GetNotificationPolicyResponse extends Message<GetNotificationPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.NotificationPolicy policy = 1;
   */
  policy?: NotificationPolicy;

  constructor(data?: PartialMessage<GetNotificationPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetNotificationPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: NotificationPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetNotificationPolicyResponse {
    return new GetNotificationPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetNotificationPolicyResponse {
    return new GetNotificationPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetNotificationPolicyResponse {
    return new GetNotificationPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetNotificationPolicyResponse | PlainMessage<GetNotificationPolicyResponse> | undefined, b: GetNotificationPolicyResponse | PlainMessage<GetNotificationPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetNotificationPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetDefaultNotificationPolicyRequest
 */
export class GetDefaultNotificationPolicyRequest extends Message<GetDefaultNotificationPolicyRequest> {
  constructor(data?: PartialMessage<GetDefaultNotificationPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultNotificationPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultNotificationPolicyRequest {
    return new GetDefaultNotificationPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultNotificationPolicyRequest {
    return new GetDefaultNotificationPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultNotificationPolicyRequest {
    return new GetDefaultNotificationPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultNotificationPolicyRequest | PlainMessage<GetDefaultNotificationPolicyRequest> | undefined, b: GetDefaultNotificationPolicyRequest | PlainMessage<GetDefaultNotificationPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultNotificationPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultNotificationPolicyResponse
 */
export class GetDefaultNotificationPolicyResponse extends Message<GetDefaultNotificationPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.NotificationPolicy policy = 1;
   */
  policy?: NotificationPolicy;

  constructor(data?: PartialMessage<GetDefaultNotificationPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultNotificationPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: NotificationPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultNotificationPolicyResponse {
    return new GetDefaultNotificationPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultNotificationPolicyResponse {
    return new GetDefaultNotificationPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultNotificationPolicyResponse {
    return new GetDefaultNotificationPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultNotificationPolicyResponse | PlainMessage<GetDefaultNotificationPolicyResponse> | undefined, b: GetDefaultNotificationPolicyResponse | PlainMessage<GetDefaultNotificationPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultNotificationPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomNotificationPolicyRequest
 */
export class AddCustomNotificationPolicyRequest extends Message<AddCustomNotificationPolicyRequest> {
  /**
   * @generated from field: bool password_change = 1;
   */
  passwordChange = false;

  constructor(data?: PartialMessage<AddCustomNotificationPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomNotificationPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "password_change", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomNotificationPolicyRequest {
    return new AddCustomNotificationPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomNotificationPolicyRequest {
    return new AddCustomNotificationPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomNotificationPolicyRequest {
    return new AddCustomNotificationPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomNotificationPolicyRequest | PlainMessage<AddCustomNotificationPolicyRequest> | undefined, b: AddCustomNotificationPolicyRequest | PlainMessage<AddCustomNotificationPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddCustomNotificationPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomNotificationPolicyResponse
 */
export class AddCustomNotificationPolicyResponse extends Message<AddCustomNotificationPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddCustomNotificationPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomNotificationPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomNotificationPolicyResponse {
    return new AddCustomNotificationPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomNotificationPolicyResponse {
    return new AddCustomNotificationPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomNotificationPolicyResponse {
    return new AddCustomNotificationPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomNotificationPolicyResponse | PlainMessage<AddCustomNotificationPolicyResponse> | undefined, b: AddCustomNotificationPolicyResponse | PlainMessage<AddCustomNotificationPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddCustomNotificationPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomNotificationPolicyRequest
 */
export class UpdateCustomNotificationPolicyRequest extends Message<UpdateCustomNotificationPolicyRequest> {
  /**
   * @generated from field: bool password_change = 1;
   */
  passwordChange = false;

  constructor(data?: PartialMessage<UpdateCustomNotificationPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomNotificationPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "password_change", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomNotificationPolicyRequest {
    return new UpdateCustomNotificationPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomNotificationPolicyRequest {
    return new UpdateCustomNotificationPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomNotificationPolicyRequest {
    return new UpdateCustomNotificationPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomNotificationPolicyRequest | PlainMessage<UpdateCustomNotificationPolicyRequest> | undefined, b: UpdateCustomNotificationPolicyRequest | PlainMessage<UpdateCustomNotificationPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateCustomNotificationPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomNotificationPolicyResponse
 */
export class UpdateCustomNotificationPolicyResponse extends Message<UpdateCustomNotificationPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateCustomNotificationPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomNotificationPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomNotificationPolicyResponse {
    return new UpdateCustomNotificationPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomNotificationPolicyResponse {
    return new UpdateCustomNotificationPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomNotificationPolicyResponse {
    return new UpdateCustomNotificationPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomNotificationPolicyResponse | PlainMessage<UpdateCustomNotificationPolicyResponse> | undefined, b: UpdateCustomNotificationPolicyResponse | PlainMessage<UpdateCustomNotificationPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateCustomNotificationPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.ResetNotificationPolicyToDefaultRequest
 */
export class ResetNotificationPolicyToDefaultRequest extends Message<ResetNotificationPolicyToDefaultRequest> {
  constructor(data?: PartialMessage<ResetNotificationPolicyToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetNotificationPolicyToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetNotificationPolicyToDefaultRequest {
    return new ResetNotificationPolicyToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetNotificationPolicyToDefaultRequest {
    return new ResetNotificationPolicyToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetNotificationPolicyToDefaultRequest {
    return new ResetNotificationPolicyToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetNotificationPolicyToDefaultRequest | PlainMessage<ResetNotificationPolicyToDefaultRequest> | undefined, b: ResetNotificationPolicyToDefaultRequest | PlainMessage<ResetNotificationPolicyToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetNotificationPolicyToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetNotificationPolicyToDefaultResponse
 */
export class ResetNotificationPolicyToDefaultResponse extends Message<ResetNotificationPolicyToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetNotificationPolicyToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetNotificationPolicyToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetNotificationPolicyToDefaultResponse {
    return new ResetNotificationPolicyToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetNotificationPolicyToDefaultResponse {
    return new ResetNotificationPolicyToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetNotificationPolicyToDefaultResponse {
    return new ResetNotificationPolicyToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetNotificationPolicyToDefaultResponse | PlainMessage<ResetNotificationPolicyToDefaultResponse> | undefined, b: ResetNotificationPolicyToDefaultResponse | PlainMessage<ResetNotificationPolicyToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetNotificationPolicyToDefaultResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetLabelPolicyRequest
 */
export class GetLabelPolicyRequest extends Message<GetLabelPolicyRequest> {
  constructor(data?: PartialMessage<GetLabelPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetLabelPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLabelPolicyRequest {
    return new GetLabelPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLabelPolicyRequest {
    return new GetLabelPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLabelPolicyRequest {
    return new GetLabelPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetLabelPolicyRequest | PlainMessage<GetLabelPolicyRequest> | undefined, b: GetLabelPolicyRequest | PlainMessage<GetLabelPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetLabelPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetLabelPolicyResponse
 */
export class GetLabelPolicyResponse extends Message<GetLabelPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.LabelPolicy policy = 1;
   */
  policy?: LabelPolicy;

  /**
   * deprecated: is_default is also defined in zitadel.policy.v1.LabelPolicy
   *
   * @generated from field: bool is_default = 2;
   */
  isDefault = false;

  constructor(data?: PartialMessage<GetLabelPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetLabelPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: LabelPolicy },
    { no: 2, name: "is_default", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLabelPolicyResponse {
    return new GetLabelPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLabelPolicyResponse {
    return new GetLabelPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLabelPolicyResponse {
    return new GetLabelPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetLabelPolicyResponse | PlainMessage<GetLabelPolicyResponse> | undefined, b: GetLabelPolicyResponse | PlainMessage<GetLabelPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetLabelPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetPreviewLabelPolicyRequest
 */
export class GetPreviewLabelPolicyRequest extends Message<GetPreviewLabelPolicyRequest> {
  constructor(data?: PartialMessage<GetPreviewLabelPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetPreviewLabelPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPreviewLabelPolicyRequest {
    return new GetPreviewLabelPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPreviewLabelPolicyRequest {
    return new GetPreviewLabelPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPreviewLabelPolicyRequest {
    return new GetPreviewLabelPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPreviewLabelPolicyRequest | PlainMessage<GetPreviewLabelPolicyRequest> | undefined, b: GetPreviewLabelPolicyRequest | PlainMessage<GetPreviewLabelPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetPreviewLabelPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetPreviewLabelPolicyResponse
 */
export class GetPreviewLabelPolicyResponse extends Message<GetPreviewLabelPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.LabelPolicy policy = 1;
   */
  policy?: LabelPolicy;

  /**
   * deprecated: is_default is also defined in zitadel.policy.v1.LabelPolicy
   *
   * @generated from field: bool is_default = 2;
   */
  isDefault = false;

  constructor(data?: PartialMessage<GetPreviewLabelPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetPreviewLabelPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: LabelPolicy },
    { no: 2, name: "is_default", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPreviewLabelPolicyResponse {
    return new GetPreviewLabelPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPreviewLabelPolicyResponse {
    return new GetPreviewLabelPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPreviewLabelPolicyResponse {
    return new GetPreviewLabelPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPreviewLabelPolicyResponse | PlainMessage<GetPreviewLabelPolicyResponse> | undefined, b: GetPreviewLabelPolicyResponse | PlainMessage<GetPreviewLabelPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetPreviewLabelPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.GetDefaultLabelPolicyRequest
 */
export class GetDefaultLabelPolicyRequest extends Message<GetDefaultLabelPolicyRequest> {
  constructor(data?: PartialMessage<GetDefaultLabelPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultLabelPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultLabelPolicyRequest {
    return new GetDefaultLabelPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultLabelPolicyRequest {
    return new GetDefaultLabelPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultLabelPolicyRequest {
    return new GetDefaultLabelPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultLabelPolicyRequest | PlainMessage<GetDefaultLabelPolicyRequest> | undefined, b: GetDefaultLabelPolicyRequest | PlainMessage<GetDefaultLabelPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultLabelPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultLabelPolicyResponse
 */
export class GetDefaultLabelPolicyResponse extends Message<GetDefaultLabelPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.LabelPolicy policy = 1;
   */
  policy?: LabelPolicy;

  constructor(data?: PartialMessage<GetDefaultLabelPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultLabelPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: LabelPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultLabelPolicyResponse {
    return new GetDefaultLabelPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultLabelPolicyResponse {
    return new GetDefaultLabelPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultLabelPolicyResponse {
    return new GetDefaultLabelPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultLabelPolicyResponse | PlainMessage<GetDefaultLabelPolicyResponse> | undefined, b: GetDefaultLabelPolicyResponse | PlainMessage<GetDefaultLabelPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultLabelPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomLabelPolicyRequest
 */
export class AddCustomLabelPolicyRequest extends Message<AddCustomLabelPolicyRequest> {
  /**
   * @generated from field: string primary_color = 1;
   */
  primaryColor = "";

  /**
   * hides the org suffix on the login form if the scope \"urn:zitadel:iam:org:domain:primary:{domainname}\" is set
   *
   * @generated from field: bool hide_login_name_suffix = 3;
   */
  hideLoginNameSuffix = false;

  /**
   * @generated from field: string warn_color = 4;
   */
  warnColor = "";

  /**
   * @generated from field: string background_color = 5;
   */
  backgroundColor = "";

  /**
   * @generated from field: string font_color = 6;
   */
  fontColor = "";

  /**
   * @generated from field: string primary_color_dark = 7;
   */
  primaryColorDark = "";

  /**
   * @generated from field: string background_color_dark = 8;
   */
  backgroundColorDark = "";

  /**
   * @generated from field: string warn_color_dark = 9;
   */
  warnColorDark = "";

  /**
   * @generated from field: string font_color_dark = 10;
   */
  fontColorDark = "";

  /**
   * @generated from field: bool disable_watermark = 11;
   */
  disableWatermark = false;

  /**
   * @generated from field: zitadel.policy.v1.ThemeMode theme_mode = 12;
   */
  themeMode = ThemeMode.UNSPECIFIED;

  constructor(data?: PartialMessage<AddCustomLabelPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomLabelPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "primary_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "hide_login_name_suffix", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "warn_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "background_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "font_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "primary_color_dark", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "background_color_dark", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "warn_color_dark", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "font_color_dark", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "disable_watermark", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "theme_mode", kind: "enum", T: proto3.getEnumType(ThemeMode) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomLabelPolicyRequest {
    return new AddCustomLabelPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomLabelPolicyRequest {
    return new AddCustomLabelPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomLabelPolicyRequest {
    return new AddCustomLabelPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomLabelPolicyRequest | PlainMessage<AddCustomLabelPolicyRequest> | undefined, b: AddCustomLabelPolicyRequest | PlainMessage<AddCustomLabelPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddCustomLabelPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddCustomLabelPolicyResponse
 */
export class AddCustomLabelPolicyResponse extends Message<AddCustomLabelPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddCustomLabelPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddCustomLabelPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomLabelPolicyResponse {
    return new AddCustomLabelPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomLabelPolicyResponse {
    return new AddCustomLabelPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomLabelPolicyResponse {
    return new AddCustomLabelPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomLabelPolicyResponse | PlainMessage<AddCustomLabelPolicyResponse> | undefined, b: AddCustomLabelPolicyResponse | PlainMessage<AddCustomLabelPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddCustomLabelPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomLabelPolicyRequest
 */
export class UpdateCustomLabelPolicyRequest extends Message<UpdateCustomLabelPolicyRequest> {
  /**
   * @generated from field: string primary_color = 1;
   */
  primaryColor = "";

  /**
   * @generated from field: bool hide_login_name_suffix = 3;
   */
  hideLoginNameSuffix = false;

  /**
   * @generated from field: string warn_color = 4;
   */
  warnColor = "";

  /**
   * @generated from field: string background_color = 5;
   */
  backgroundColor = "";

  /**
   * @generated from field: string font_color = 6;
   */
  fontColor = "";

  /**
   * @generated from field: string primary_color_dark = 7;
   */
  primaryColorDark = "";

  /**
   * @generated from field: string background_color_dark = 8;
   */
  backgroundColorDark = "";

  /**
   * @generated from field: string warn_color_dark = 9;
   */
  warnColorDark = "";

  /**
   * @generated from field: string font_color_dark = 10;
   */
  fontColorDark = "";

  /**
   * @generated from field: bool disable_watermark = 11;
   */
  disableWatermark = false;

  /**
   * @generated from field: zitadel.policy.v1.ThemeMode theme_mode = 12;
   */
  themeMode = ThemeMode.UNSPECIFIED;

  constructor(data?: PartialMessage<UpdateCustomLabelPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomLabelPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "primary_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "hide_login_name_suffix", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "warn_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "background_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "font_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "primary_color_dark", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "background_color_dark", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "warn_color_dark", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "font_color_dark", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "disable_watermark", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "theme_mode", kind: "enum", T: proto3.getEnumType(ThemeMode) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomLabelPolicyRequest {
    return new UpdateCustomLabelPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomLabelPolicyRequest {
    return new UpdateCustomLabelPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomLabelPolicyRequest {
    return new UpdateCustomLabelPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomLabelPolicyRequest | PlainMessage<UpdateCustomLabelPolicyRequest> | undefined, b: UpdateCustomLabelPolicyRequest | PlainMessage<UpdateCustomLabelPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateCustomLabelPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateCustomLabelPolicyResponse
 */
export class UpdateCustomLabelPolicyResponse extends Message<UpdateCustomLabelPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateCustomLabelPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateCustomLabelPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomLabelPolicyResponse {
    return new UpdateCustomLabelPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomLabelPolicyResponse {
    return new UpdateCustomLabelPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomLabelPolicyResponse {
    return new UpdateCustomLabelPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomLabelPolicyResponse | PlainMessage<UpdateCustomLabelPolicyResponse> | undefined, b: UpdateCustomLabelPolicyResponse | PlainMessage<UpdateCustomLabelPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateCustomLabelPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.ActivateCustomLabelPolicyRequest
 */
export class ActivateCustomLabelPolicyRequest extends Message<ActivateCustomLabelPolicyRequest> {
  constructor(data?: PartialMessage<ActivateCustomLabelPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ActivateCustomLabelPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivateCustomLabelPolicyRequest {
    return new ActivateCustomLabelPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivateCustomLabelPolicyRequest {
    return new ActivateCustomLabelPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivateCustomLabelPolicyRequest {
    return new ActivateCustomLabelPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ActivateCustomLabelPolicyRequest | PlainMessage<ActivateCustomLabelPolicyRequest> | undefined, b: ActivateCustomLabelPolicyRequest | PlainMessage<ActivateCustomLabelPolicyRequest> | undefined): boolean {
    return proto3.util.equals(ActivateCustomLabelPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ActivateCustomLabelPolicyResponse
 */
export class ActivateCustomLabelPolicyResponse extends Message<ActivateCustomLabelPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ActivateCustomLabelPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ActivateCustomLabelPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivateCustomLabelPolicyResponse {
    return new ActivateCustomLabelPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivateCustomLabelPolicyResponse {
    return new ActivateCustomLabelPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivateCustomLabelPolicyResponse {
    return new ActivateCustomLabelPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ActivateCustomLabelPolicyResponse | PlainMessage<ActivateCustomLabelPolicyResponse> | undefined, b: ActivateCustomLabelPolicyResponse | PlainMessage<ActivateCustomLabelPolicyResponse> | undefined): boolean {
    return proto3.util.equals(ActivateCustomLabelPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.RemoveCustomLabelPolicyLogoRequest
 */
export class RemoveCustomLabelPolicyLogoRequest extends Message<RemoveCustomLabelPolicyLogoRequest> {
  constructor(data?: PartialMessage<RemoveCustomLabelPolicyLogoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveCustomLabelPolicyLogoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveCustomLabelPolicyLogoRequest {
    return new RemoveCustomLabelPolicyLogoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyLogoRequest {
    return new RemoveCustomLabelPolicyLogoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyLogoRequest {
    return new RemoveCustomLabelPolicyLogoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveCustomLabelPolicyLogoRequest | PlainMessage<RemoveCustomLabelPolicyLogoRequest> | undefined, b: RemoveCustomLabelPolicyLogoRequest | PlainMessage<RemoveCustomLabelPolicyLogoRequest> | undefined): boolean {
    return proto3.util.equals(RemoveCustomLabelPolicyLogoRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveCustomLabelPolicyLogoResponse
 */
export class RemoveCustomLabelPolicyLogoResponse extends Message<RemoveCustomLabelPolicyLogoResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveCustomLabelPolicyLogoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveCustomLabelPolicyLogoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveCustomLabelPolicyLogoResponse {
    return new RemoveCustomLabelPolicyLogoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyLogoResponse {
    return new RemoveCustomLabelPolicyLogoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyLogoResponse {
    return new RemoveCustomLabelPolicyLogoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveCustomLabelPolicyLogoResponse | PlainMessage<RemoveCustomLabelPolicyLogoResponse> | undefined, b: RemoveCustomLabelPolicyLogoResponse | PlainMessage<RemoveCustomLabelPolicyLogoResponse> | undefined): boolean {
    return proto3.util.equals(RemoveCustomLabelPolicyLogoResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.RemoveCustomLabelPolicyLogoDarkRequest
 */
export class RemoveCustomLabelPolicyLogoDarkRequest extends Message<RemoveCustomLabelPolicyLogoDarkRequest> {
  constructor(data?: PartialMessage<RemoveCustomLabelPolicyLogoDarkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveCustomLabelPolicyLogoDarkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveCustomLabelPolicyLogoDarkRequest {
    return new RemoveCustomLabelPolicyLogoDarkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyLogoDarkRequest {
    return new RemoveCustomLabelPolicyLogoDarkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyLogoDarkRequest {
    return new RemoveCustomLabelPolicyLogoDarkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveCustomLabelPolicyLogoDarkRequest | PlainMessage<RemoveCustomLabelPolicyLogoDarkRequest> | undefined, b: RemoveCustomLabelPolicyLogoDarkRequest | PlainMessage<RemoveCustomLabelPolicyLogoDarkRequest> | undefined): boolean {
    return proto3.util.equals(RemoveCustomLabelPolicyLogoDarkRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveCustomLabelPolicyLogoDarkResponse
 */
export class RemoveCustomLabelPolicyLogoDarkResponse extends Message<RemoveCustomLabelPolicyLogoDarkResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveCustomLabelPolicyLogoDarkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveCustomLabelPolicyLogoDarkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveCustomLabelPolicyLogoDarkResponse {
    return new RemoveCustomLabelPolicyLogoDarkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyLogoDarkResponse {
    return new RemoveCustomLabelPolicyLogoDarkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyLogoDarkResponse {
    return new RemoveCustomLabelPolicyLogoDarkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveCustomLabelPolicyLogoDarkResponse | PlainMessage<RemoveCustomLabelPolicyLogoDarkResponse> | undefined, b: RemoveCustomLabelPolicyLogoDarkResponse | PlainMessage<RemoveCustomLabelPolicyLogoDarkResponse> | undefined): boolean {
    return proto3.util.equals(RemoveCustomLabelPolicyLogoDarkResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.RemoveCustomLabelPolicyIconRequest
 */
export class RemoveCustomLabelPolicyIconRequest extends Message<RemoveCustomLabelPolicyIconRequest> {
  constructor(data?: PartialMessage<RemoveCustomLabelPolicyIconRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveCustomLabelPolicyIconRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveCustomLabelPolicyIconRequest {
    return new RemoveCustomLabelPolicyIconRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyIconRequest {
    return new RemoveCustomLabelPolicyIconRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyIconRequest {
    return new RemoveCustomLabelPolicyIconRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveCustomLabelPolicyIconRequest | PlainMessage<RemoveCustomLabelPolicyIconRequest> | undefined, b: RemoveCustomLabelPolicyIconRequest | PlainMessage<RemoveCustomLabelPolicyIconRequest> | undefined): boolean {
    return proto3.util.equals(RemoveCustomLabelPolicyIconRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveCustomLabelPolicyIconResponse
 */
export class RemoveCustomLabelPolicyIconResponse extends Message<RemoveCustomLabelPolicyIconResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveCustomLabelPolicyIconResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveCustomLabelPolicyIconResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveCustomLabelPolicyIconResponse {
    return new RemoveCustomLabelPolicyIconResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyIconResponse {
    return new RemoveCustomLabelPolicyIconResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyIconResponse {
    return new RemoveCustomLabelPolicyIconResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveCustomLabelPolicyIconResponse | PlainMessage<RemoveCustomLabelPolicyIconResponse> | undefined, b: RemoveCustomLabelPolicyIconResponse | PlainMessage<RemoveCustomLabelPolicyIconResponse> | undefined): boolean {
    return proto3.util.equals(RemoveCustomLabelPolicyIconResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.RemoveCustomLabelPolicyIconDarkRequest
 */
export class RemoveCustomLabelPolicyIconDarkRequest extends Message<RemoveCustomLabelPolicyIconDarkRequest> {
  constructor(data?: PartialMessage<RemoveCustomLabelPolicyIconDarkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveCustomLabelPolicyIconDarkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveCustomLabelPolicyIconDarkRequest {
    return new RemoveCustomLabelPolicyIconDarkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyIconDarkRequest {
    return new RemoveCustomLabelPolicyIconDarkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyIconDarkRequest {
    return new RemoveCustomLabelPolicyIconDarkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveCustomLabelPolicyIconDarkRequest | PlainMessage<RemoveCustomLabelPolicyIconDarkRequest> | undefined, b: RemoveCustomLabelPolicyIconDarkRequest | PlainMessage<RemoveCustomLabelPolicyIconDarkRequest> | undefined): boolean {
    return proto3.util.equals(RemoveCustomLabelPolicyIconDarkRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveCustomLabelPolicyIconDarkResponse
 */
export class RemoveCustomLabelPolicyIconDarkResponse extends Message<RemoveCustomLabelPolicyIconDarkResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveCustomLabelPolicyIconDarkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveCustomLabelPolicyIconDarkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveCustomLabelPolicyIconDarkResponse {
    return new RemoveCustomLabelPolicyIconDarkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyIconDarkResponse {
    return new RemoveCustomLabelPolicyIconDarkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyIconDarkResponse {
    return new RemoveCustomLabelPolicyIconDarkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveCustomLabelPolicyIconDarkResponse | PlainMessage<RemoveCustomLabelPolicyIconDarkResponse> | undefined, b: RemoveCustomLabelPolicyIconDarkResponse | PlainMessage<RemoveCustomLabelPolicyIconDarkResponse> | undefined): boolean {
    return proto3.util.equals(RemoveCustomLabelPolicyIconDarkResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.RemoveCustomLabelPolicyFontRequest
 */
export class RemoveCustomLabelPolicyFontRequest extends Message<RemoveCustomLabelPolicyFontRequest> {
  constructor(data?: PartialMessage<RemoveCustomLabelPolicyFontRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveCustomLabelPolicyFontRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveCustomLabelPolicyFontRequest {
    return new RemoveCustomLabelPolicyFontRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyFontRequest {
    return new RemoveCustomLabelPolicyFontRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyFontRequest {
    return new RemoveCustomLabelPolicyFontRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveCustomLabelPolicyFontRequest | PlainMessage<RemoveCustomLabelPolicyFontRequest> | undefined, b: RemoveCustomLabelPolicyFontRequest | PlainMessage<RemoveCustomLabelPolicyFontRequest> | undefined): boolean {
    return proto3.util.equals(RemoveCustomLabelPolicyFontRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveCustomLabelPolicyFontResponse
 */
export class RemoveCustomLabelPolicyFontResponse extends Message<RemoveCustomLabelPolicyFontResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveCustomLabelPolicyFontResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveCustomLabelPolicyFontResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveCustomLabelPolicyFontResponse {
    return new RemoveCustomLabelPolicyFontResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyFontResponse {
    return new RemoveCustomLabelPolicyFontResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveCustomLabelPolicyFontResponse {
    return new RemoveCustomLabelPolicyFontResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveCustomLabelPolicyFontResponse | PlainMessage<RemoveCustomLabelPolicyFontResponse> | undefined, b: RemoveCustomLabelPolicyFontResponse | PlainMessage<RemoveCustomLabelPolicyFontResponse> | undefined): boolean {
    return proto3.util.equals(RemoveCustomLabelPolicyFontResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.ResetLabelPolicyToDefaultRequest
 */
export class ResetLabelPolicyToDefaultRequest extends Message<ResetLabelPolicyToDefaultRequest> {
  constructor(data?: PartialMessage<ResetLabelPolicyToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetLabelPolicyToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetLabelPolicyToDefaultRequest {
    return new ResetLabelPolicyToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetLabelPolicyToDefaultRequest {
    return new ResetLabelPolicyToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetLabelPolicyToDefaultRequest {
    return new ResetLabelPolicyToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetLabelPolicyToDefaultRequest | PlainMessage<ResetLabelPolicyToDefaultRequest> | undefined, b: ResetLabelPolicyToDefaultRequest | PlainMessage<ResetLabelPolicyToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetLabelPolicyToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetLabelPolicyToDefaultResponse
 */
export class ResetLabelPolicyToDefaultResponse extends Message<ResetLabelPolicyToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetLabelPolicyToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetLabelPolicyToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetLabelPolicyToDefaultResponse {
    return new ResetLabelPolicyToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetLabelPolicyToDefaultResponse {
    return new ResetLabelPolicyToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetLabelPolicyToDefaultResponse {
    return new ResetLabelPolicyToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetLabelPolicyToDefaultResponse | PlainMessage<ResetLabelPolicyToDefaultResponse> | undefined, b: ResetLabelPolicyToDefaultResponse | PlainMessage<ResetLabelPolicyToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetLabelPolicyToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomInitMessageTextRequest
 */
export class GetCustomInitMessageTextRequest extends Message<GetCustomInitMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomInitMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomInitMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomInitMessageTextRequest {
    return new GetCustomInitMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomInitMessageTextRequest {
    return new GetCustomInitMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomInitMessageTextRequest {
    return new GetCustomInitMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomInitMessageTextRequest | PlainMessage<GetCustomInitMessageTextRequest> | undefined, b: GetCustomInitMessageTextRequest | PlainMessage<GetCustomInitMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomInitMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomInitMessageTextResponse
 */
export class GetCustomInitMessageTextResponse extends Message<GetCustomInitMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomInitMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomInitMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomInitMessageTextResponse {
    return new GetCustomInitMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomInitMessageTextResponse {
    return new GetCustomInitMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomInitMessageTextResponse {
    return new GetCustomInitMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomInitMessageTextResponse | PlainMessage<GetCustomInitMessageTextResponse> | undefined, b: GetCustomInitMessageTextResponse | PlainMessage<GetCustomInitMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomInitMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultInitMessageTextRequest
 */
export class GetDefaultInitMessageTextRequest extends Message<GetDefaultInitMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultInitMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultInitMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultInitMessageTextRequest {
    return new GetDefaultInitMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultInitMessageTextRequest {
    return new GetDefaultInitMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultInitMessageTextRequest {
    return new GetDefaultInitMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultInitMessageTextRequest | PlainMessage<GetDefaultInitMessageTextRequest> | undefined, b: GetDefaultInitMessageTextRequest | PlainMessage<GetDefaultInitMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultInitMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultInitMessageTextResponse
 */
export class GetDefaultInitMessageTextResponse extends Message<GetDefaultInitMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultInitMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultInitMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultInitMessageTextResponse {
    return new GetDefaultInitMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultInitMessageTextResponse {
    return new GetDefaultInitMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultInitMessageTextResponse {
    return new GetDefaultInitMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultInitMessageTextResponse | PlainMessage<GetDefaultInitMessageTextResponse> | undefined, b: GetDefaultInitMessageTextResponse | PlainMessage<GetDefaultInitMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultInitMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomInitMessageTextRequest
 */
export class SetCustomInitMessageTextRequest extends Message<SetCustomInitMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetCustomInitMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomInitMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomInitMessageTextRequest {
    return new SetCustomInitMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomInitMessageTextRequest {
    return new SetCustomInitMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomInitMessageTextRequest {
    return new SetCustomInitMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomInitMessageTextRequest | PlainMessage<SetCustomInitMessageTextRequest> | undefined, b: SetCustomInitMessageTextRequest | PlainMessage<SetCustomInitMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetCustomInitMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomInitMessageTextResponse
 */
export class SetCustomInitMessageTextResponse extends Message<SetCustomInitMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetCustomInitMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomInitMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomInitMessageTextResponse {
    return new SetCustomInitMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomInitMessageTextResponse {
    return new SetCustomInitMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomInitMessageTextResponse {
    return new SetCustomInitMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomInitMessageTextResponse | PlainMessage<SetCustomInitMessageTextResponse> | undefined, b: SetCustomInitMessageTextResponse | PlainMessage<SetCustomInitMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetCustomInitMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomInitMessageTextToDefaultRequest
 */
export class ResetCustomInitMessageTextToDefaultRequest extends Message<ResetCustomInitMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomInitMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomInitMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomInitMessageTextToDefaultRequest {
    return new ResetCustomInitMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomInitMessageTextToDefaultRequest {
    return new ResetCustomInitMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomInitMessageTextToDefaultRequest {
    return new ResetCustomInitMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomInitMessageTextToDefaultRequest | PlainMessage<ResetCustomInitMessageTextToDefaultRequest> | undefined, b: ResetCustomInitMessageTextToDefaultRequest | PlainMessage<ResetCustomInitMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomInitMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomInitMessageTextToDefaultResponse
 */
export class ResetCustomInitMessageTextToDefaultResponse extends Message<ResetCustomInitMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomInitMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomInitMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomInitMessageTextToDefaultResponse {
    return new ResetCustomInitMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomInitMessageTextToDefaultResponse {
    return new ResetCustomInitMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomInitMessageTextToDefaultResponse {
    return new ResetCustomInitMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomInitMessageTextToDefaultResponse | PlainMessage<ResetCustomInitMessageTextToDefaultResponse> | undefined, b: ResetCustomInitMessageTextToDefaultResponse | PlainMessage<ResetCustomInitMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomInitMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultLoginTextsRequest
 */
export class GetDefaultLoginTextsRequest extends Message<GetDefaultLoginTextsRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultLoginTextsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultLoginTextsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultLoginTextsRequest {
    return new GetDefaultLoginTextsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultLoginTextsRequest {
    return new GetDefaultLoginTextsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultLoginTextsRequest {
    return new GetDefaultLoginTextsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultLoginTextsRequest | PlainMessage<GetDefaultLoginTextsRequest> | undefined, b: GetDefaultLoginTextsRequest | PlainMessage<GetDefaultLoginTextsRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultLoginTextsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultLoginTextsResponse
 */
export class GetDefaultLoginTextsResponse extends Message<GetDefaultLoginTextsResponse> {
  /**
   * @generated from field: zitadel.text.v1.LoginCustomText custom_text = 1;
   */
  customText?: LoginCustomText;

  constructor(data?: PartialMessage<GetDefaultLoginTextsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultLoginTextsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: LoginCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultLoginTextsResponse {
    return new GetDefaultLoginTextsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultLoginTextsResponse {
    return new GetDefaultLoginTextsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultLoginTextsResponse {
    return new GetDefaultLoginTextsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultLoginTextsResponse | PlainMessage<GetDefaultLoginTextsResponse> | undefined, b: GetDefaultLoginTextsResponse | PlainMessage<GetDefaultLoginTextsResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultLoginTextsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomLoginTextsRequest
 */
export class GetCustomLoginTextsRequest extends Message<GetCustomLoginTextsRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomLoginTextsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomLoginTextsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomLoginTextsRequest {
    return new GetCustomLoginTextsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomLoginTextsRequest {
    return new GetCustomLoginTextsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomLoginTextsRequest {
    return new GetCustomLoginTextsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomLoginTextsRequest | PlainMessage<GetCustomLoginTextsRequest> | undefined, b: GetCustomLoginTextsRequest | PlainMessage<GetCustomLoginTextsRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomLoginTextsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomLoginTextsResponse
 */
export class GetCustomLoginTextsResponse extends Message<GetCustomLoginTextsResponse> {
  /**
   * @generated from field: zitadel.text.v1.LoginCustomText custom_text = 1;
   */
  customText?: LoginCustomText;

  constructor(data?: PartialMessage<GetCustomLoginTextsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomLoginTextsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: LoginCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomLoginTextsResponse {
    return new GetCustomLoginTextsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomLoginTextsResponse {
    return new GetCustomLoginTextsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomLoginTextsResponse {
    return new GetCustomLoginTextsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomLoginTextsResponse | PlainMessage<GetCustomLoginTextsResponse> | undefined, b: GetCustomLoginTextsResponse | PlainMessage<GetCustomLoginTextsResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomLoginTextsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomLoginTextsRequest
 */
export class SetCustomLoginTextsRequest extends Message<SetCustomLoginTextsRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: zitadel.text.v1.SelectAccountScreenText select_account_text = 2;
   */
  selectAccountText?: SelectAccountScreenText;

  /**
   * @generated from field: zitadel.text.v1.LoginScreenText login_text = 3;
   */
  loginText?: LoginScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordScreenText password_text = 4;
   */
  passwordText?: PasswordScreenText;

  /**
   * @generated from field: zitadel.text.v1.UsernameChangeScreenText username_change_text = 5;
   */
  usernameChangeText?: UsernameChangeScreenText;

  /**
   * @generated from field: zitadel.text.v1.UsernameChangeDoneScreenText username_change_done_text = 6;
   */
  usernameChangeDoneText?: UsernameChangeDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitPasswordScreenText init_password_text = 7;
   */
  initPasswordText?: InitPasswordScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitPasswordDoneScreenText init_password_done_text = 8;
   */
  initPasswordDoneText?: InitPasswordDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.EmailVerificationScreenText email_verification_text = 9;
   */
  emailVerificationText?: EmailVerificationScreenText;

  /**
   * @generated from field: zitadel.text.v1.EmailVerificationDoneScreenText email_verification_done_text = 10;
   */
  emailVerificationDoneText?: EmailVerificationDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitializeUserScreenText initialize_user_text = 11;
   */
  initializeUserText?: InitializeUserScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitializeUserDoneScreenText initialize_done_text = 12;
   */
  initializeDoneText?: InitializeUserDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitMFAPromptScreenText init_mfa_prompt_text = 13;
   */
  initMfaPromptText?: InitMFAPromptScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitMFAOTPScreenText init_mfa_otp_text = 14;
   */
  initMfaOtpText?: InitMFAOTPScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitMFAU2FScreenText init_mfa_u2f_text = 15;
   */
  initMfaU2fText?: InitMFAU2FScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitMFADoneScreenText init_mfa_done_text = 16;
   */
  initMfaDoneText?: InitMFADoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.MFAProvidersText mfa_providers_text = 17;
   */
  mfaProvidersText?: MFAProvidersText;

  /**
   * @generated from field: zitadel.text.v1.VerifyMFAOTPScreenText verify_mfa_otp_text = 18;
   */
  verifyMfaOtpText?: VerifyMFAOTPScreenText;

  /**
   * @generated from field: zitadel.text.v1.VerifyMFAU2FScreenText verify_mfa_u2f_text = 19;
   */
  verifyMfaU2fText?: VerifyMFAU2FScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordlessScreenText passwordless_text = 20;
   */
  passwordlessText?: PasswordlessScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordChangeScreenText password_change_text = 21;
   */
  passwordChangeText?: PasswordChangeScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordChangeDoneScreenText password_change_done_text = 22;
   */
  passwordChangeDoneText?: PasswordChangeDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordResetDoneScreenText password_reset_done_text = 23;
   */
  passwordResetDoneText?: PasswordResetDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.RegistrationOptionScreenText registration_option_text = 24;
   */
  registrationOptionText?: RegistrationOptionScreenText;

  /**
   * @generated from field: zitadel.text.v1.RegistrationUserScreenText registration_user_text = 25;
   */
  registrationUserText?: RegistrationUserScreenText;

  /**
   * @generated from field: zitadel.text.v1.RegistrationOrgScreenText registration_org_text = 26;
   */
  registrationOrgText?: RegistrationOrgScreenText;

  /**
   * @generated from field: zitadel.text.v1.LinkingUserDoneScreenText linking_user_done_text = 27;
   */
  linkingUserDoneText?: LinkingUserDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.ExternalUserNotFoundScreenText external_user_not_found_text = 28;
   */
  externalUserNotFoundText?: ExternalUserNotFoundScreenText;

  /**
   * @generated from field: zitadel.text.v1.SuccessLoginScreenText success_login_text = 29;
   */
  successLoginText?: SuccessLoginScreenText;

  /**
   * @generated from field: zitadel.text.v1.LogoutDoneScreenText logout_text = 30;
   */
  logoutText?: LogoutDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.FooterText footer_text = 31;
   */
  footerText?: FooterText;

  /**
   * @generated from field: zitadel.text.v1.PasswordlessPromptScreenText passwordless_prompt_text = 32;
   */
  passwordlessPromptText?: PasswordlessPromptScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordlessRegistrationScreenText passwordless_registration_text = 33;
   */
  passwordlessRegistrationText?: PasswordlessRegistrationScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordlessRegistrationDoneScreenText passwordless_registration_done_text = 34;
   */
  passwordlessRegistrationDoneText?: PasswordlessRegistrationDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.ExternalRegistrationUserOverviewScreenText external_registration_user_overview_text = 35;
   */
  externalRegistrationUserOverviewText?: ExternalRegistrationUserOverviewScreenText;

  /**
   * @generated from field: zitadel.text.v1.LinkingUserPromptScreenText linking_user_prompt_text = 36;
   */
  linkingUserPromptText?: LinkingUserPromptScreenText;

  constructor(data?: PartialMessage<SetCustomLoginTextsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomLoginTextsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "select_account_text", kind: "message", T: SelectAccountScreenText },
    { no: 3, name: "login_text", kind: "message", T: LoginScreenText },
    { no: 4, name: "password_text", kind: "message", T: PasswordScreenText },
    { no: 5, name: "username_change_text", kind: "message", T: UsernameChangeScreenText },
    { no: 6, name: "username_change_done_text", kind: "message", T: UsernameChangeDoneScreenText },
    { no: 7, name: "init_password_text", kind: "message", T: InitPasswordScreenText },
    { no: 8, name: "init_password_done_text", kind: "message", T: InitPasswordDoneScreenText },
    { no: 9, name: "email_verification_text", kind: "message", T: EmailVerificationScreenText },
    { no: 10, name: "email_verification_done_text", kind: "message", T: EmailVerificationDoneScreenText },
    { no: 11, name: "initialize_user_text", kind: "message", T: InitializeUserScreenText },
    { no: 12, name: "initialize_done_text", kind: "message", T: InitializeUserDoneScreenText },
    { no: 13, name: "init_mfa_prompt_text", kind: "message", T: InitMFAPromptScreenText },
    { no: 14, name: "init_mfa_otp_text", kind: "message", T: InitMFAOTPScreenText },
    { no: 15, name: "init_mfa_u2f_text", kind: "message", T: InitMFAU2FScreenText },
    { no: 16, name: "init_mfa_done_text", kind: "message", T: InitMFADoneScreenText },
    { no: 17, name: "mfa_providers_text", kind: "message", T: MFAProvidersText },
    { no: 18, name: "verify_mfa_otp_text", kind: "message", T: VerifyMFAOTPScreenText },
    { no: 19, name: "verify_mfa_u2f_text", kind: "message", T: VerifyMFAU2FScreenText },
    { no: 20, name: "passwordless_text", kind: "message", T: PasswordlessScreenText },
    { no: 21, name: "password_change_text", kind: "message", T: PasswordChangeScreenText },
    { no: 22, name: "password_change_done_text", kind: "message", T: PasswordChangeDoneScreenText },
    { no: 23, name: "password_reset_done_text", kind: "message", T: PasswordResetDoneScreenText },
    { no: 24, name: "registration_option_text", kind: "message", T: RegistrationOptionScreenText },
    { no: 25, name: "registration_user_text", kind: "message", T: RegistrationUserScreenText },
    { no: 26, name: "registration_org_text", kind: "message", T: RegistrationOrgScreenText },
    { no: 27, name: "linking_user_done_text", kind: "message", T: LinkingUserDoneScreenText },
    { no: 28, name: "external_user_not_found_text", kind: "message", T: ExternalUserNotFoundScreenText },
    { no: 29, name: "success_login_text", kind: "message", T: SuccessLoginScreenText },
    { no: 30, name: "logout_text", kind: "message", T: LogoutDoneScreenText },
    { no: 31, name: "footer_text", kind: "message", T: FooterText },
    { no: 32, name: "passwordless_prompt_text", kind: "message", T: PasswordlessPromptScreenText },
    { no: 33, name: "passwordless_registration_text", kind: "message", T: PasswordlessRegistrationScreenText },
    { no: 34, name: "passwordless_registration_done_text", kind: "message", T: PasswordlessRegistrationDoneScreenText },
    { no: 35, name: "external_registration_user_overview_text", kind: "message", T: ExternalRegistrationUserOverviewScreenText },
    { no: 36, name: "linking_user_prompt_text", kind: "message", T: LinkingUserPromptScreenText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomLoginTextsRequest {
    return new SetCustomLoginTextsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomLoginTextsRequest {
    return new SetCustomLoginTextsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomLoginTextsRequest {
    return new SetCustomLoginTextsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomLoginTextsRequest | PlainMessage<SetCustomLoginTextsRequest> | undefined, b: SetCustomLoginTextsRequest | PlainMessage<SetCustomLoginTextsRequest> | undefined): boolean {
    return proto3.util.equals(SetCustomLoginTextsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomLoginTextsResponse
 */
export class SetCustomLoginTextsResponse extends Message<SetCustomLoginTextsResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetCustomLoginTextsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomLoginTextsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomLoginTextsResponse {
    return new SetCustomLoginTextsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomLoginTextsResponse {
    return new SetCustomLoginTextsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomLoginTextsResponse {
    return new SetCustomLoginTextsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomLoginTextsResponse | PlainMessage<SetCustomLoginTextsResponse> | undefined, b: SetCustomLoginTextsResponse | PlainMessage<SetCustomLoginTextsResponse> | undefined): boolean {
    return proto3.util.equals(SetCustomLoginTextsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomLoginTextsToDefaultRequest
 */
export class ResetCustomLoginTextsToDefaultRequest extends Message<ResetCustomLoginTextsToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomLoginTextsToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomLoginTextsToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomLoginTextsToDefaultRequest {
    return new ResetCustomLoginTextsToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomLoginTextsToDefaultRequest {
    return new ResetCustomLoginTextsToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomLoginTextsToDefaultRequest {
    return new ResetCustomLoginTextsToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomLoginTextsToDefaultRequest | PlainMessage<ResetCustomLoginTextsToDefaultRequest> | undefined, b: ResetCustomLoginTextsToDefaultRequest | PlainMessage<ResetCustomLoginTextsToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomLoginTextsToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomLoginTextsToDefaultResponse
 */
export class ResetCustomLoginTextsToDefaultResponse extends Message<ResetCustomLoginTextsToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomLoginTextsToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomLoginTextsToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomLoginTextsToDefaultResponse {
    return new ResetCustomLoginTextsToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomLoginTextsToDefaultResponse {
    return new ResetCustomLoginTextsToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomLoginTextsToDefaultResponse {
    return new ResetCustomLoginTextsToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomLoginTextsToDefaultResponse | PlainMessage<ResetCustomLoginTextsToDefaultResponse> | undefined, b: ResetCustomLoginTextsToDefaultResponse | PlainMessage<ResetCustomLoginTextsToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomLoginTextsToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomPasswordResetMessageTextRequest
 */
export class GetCustomPasswordResetMessageTextRequest extends Message<GetCustomPasswordResetMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomPasswordResetMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomPasswordResetMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomPasswordResetMessageTextRequest {
    return new GetCustomPasswordResetMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomPasswordResetMessageTextRequest {
    return new GetCustomPasswordResetMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomPasswordResetMessageTextRequest {
    return new GetCustomPasswordResetMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomPasswordResetMessageTextRequest | PlainMessage<GetCustomPasswordResetMessageTextRequest> | undefined, b: GetCustomPasswordResetMessageTextRequest | PlainMessage<GetCustomPasswordResetMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomPasswordResetMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomPasswordResetMessageTextResponse
 */
export class GetCustomPasswordResetMessageTextResponse extends Message<GetCustomPasswordResetMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomPasswordResetMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomPasswordResetMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomPasswordResetMessageTextResponse {
    return new GetCustomPasswordResetMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomPasswordResetMessageTextResponse {
    return new GetCustomPasswordResetMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomPasswordResetMessageTextResponse {
    return new GetCustomPasswordResetMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomPasswordResetMessageTextResponse | PlainMessage<GetCustomPasswordResetMessageTextResponse> | undefined, b: GetCustomPasswordResetMessageTextResponse | PlainMessage<GetCustomPasswordResetMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomPasswordResetMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultPasswordResetMessageTextRequest
 */
export class GetDefaultPasswordResetMessageTextRequest extends Message<GetDefaultPasswordResetMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultPasswordResetMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultPasswordResetMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordResetMessageTextRequest {
    return new GetDefaultPasswordResetMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordResetMessageTextRequest {
    return new GetDefaultPasswordResetMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordResetMessageTextRequest {
    return new GetDefaultPasswordResetMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordResetMessageTextRequest | PlainMessage<GetDefaultPasswordResetMessageTextRequest> | undefined, b: GetDefaultPasswordResetMessageTextRequest | PlainMessage<GetDefaultPasswordResetMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordResetMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultPasswordResetMessageTextResponse
 */
export class GetDefaultPasswordResetMessageTextResponse extends Message<GetDefaultPasswordResetMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultPasswordResetMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultPasswordResetMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordResetMessageTextResponse {
    return new GetDefaultPasswordResetMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordResetMessageTextResponse {
    return new GetDefaultPasswordResetMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordResetMessageTextResponse {
    return new GetDefaultPasswordResetMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordResetMessageTextResponse | PlainMessage<GetDefaultPasswordResetMessageTextResponse> | undefined, b: GetDefaultPasswordResetMessageTextResponse | PlainMessage<GetDefaultPasswordResetMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordResetMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomPasswordResetMessageTextRequest
 */
export class SetCustomPasswordResetMessageTextRequest extends Message<SetCustomPasswordResetMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetCustomPasswordResetMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomPasswordResetMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomPasswordResetMessageTextRequest {
    return new SetCustomPasswordResetMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomPasswordResetMessageTextRequest {
    return new SetCustomPasswordResetMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomPasswordResetMessageTextRequest {
    return new SetCustomPasswordResetMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomPasswordResetMessageTextRequest | PlainMessage<SetCustomPasswordResetMessageTextRequest> | undefined, b: SetCustomPasswordResetMessageTextRequest | PlainMessage<SetCustomPasswordResetMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetCustomPasswordResetMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomPasswordResetMessageTextResponse
 */
export class SetCustomPasswordResetMessageTextResponse extends Message<SetCustomPasswordResetMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetCustomPasswordResetMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomPasswordResetMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomPasswordResetMessageTextResponse {
    return new SetCustomPasswordResetMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomPasswordResetMessageTextResponse {
    return new SetCustomPasswordResetMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomPasswordResetMessageTextResponse {
    return new SetCustomPasswordResetMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomPasswordResetMessageTextResponse | PlainMessage<SetCustomPasswordResetMessageTextResponse> | undefined, b: SetCustomPasswordResetMessageTextResponse | PlainMessage<SetCustomPasswordResetMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetCustomPasswordResetMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomPasswordResetMessageTextToDefaultRequest
 */
export class ResetCustomPasswordResetMessageTextToDefaultRequest extends Message<ResetCustomPasswordResetMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomPasswordResetMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomPasswordResetMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomPasswordResetMessageTextToDefaultRequest {
    return new ResetCustomPasswordResetMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomPasswordResetMessageTextToDefaultRequest {
    return new ResetCustomPasswordResetMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomPasswordResetMessageTextToDefaultRequest {
    return new ResetCustomPasswordResetMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomPasswordResetMessageTextToDefaultRequest | PlainMessage<ResetCustomPasswordResetMessageTextToDefaultRequest> | undefined, b: ResetCustomPasswordResetMessageTextToDefaultRequest | PlainMessage<ResetCustomPasswordResetMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomPasswordResetMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomPasswordResetMessageTextToDefaultResponse
 */
export class ResetCustomPasswordResetMessageTextToDefaultResponse extends Message<ResetCustomPasswordResetMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomPasswordResetMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomPasswordResetMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomPasswordResetMessageTextToDefaultResponse {
    return new ResetCustomPasswordResetMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomPasswordResetMessageTextToDefaultResponse {
    return new ResetCustomPasswordResetMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomPasswordResetMessageTextToDefaultResponse {
    return new ResetCustomPasswordResetMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomPasswordResetMessageTextToDefaultResponse | PlainMessage<ResetCustomPasswordResetMessageTextToDefaultResponse> | undefined, b: ResetCustomPasswordResetMessageTextToDefaultResponse | PlainMessage<ResetCustomPasswordResetMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomPasswordResetMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomVerifyEmailMessageTextRequest
 */
export class GetCustomVerifyEmailMessageTextRequest extends Message<GetCustomVerifyEmailMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomVerifyEmailMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomVerifyEmailMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifyEmailMessageTextRequest {
    return new GetCustomVerifyEmailMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailMessageTextRequest {
    return new GetCustomVerifyEmailMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailMessageTextRequest {
    return new GetCustomVerifyEmailMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifyEmailMessageTextRequest | PlainMessage<GetCustomVerifyEmailMessageTextRequest> | undefined, b: GetCustomVerifyEmailMessageTextRequest | PlainMessage<GetCustomVerifyEmailMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifyEmailMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomVerifyEmailMessageTextResponse
 */
export class GetCustomVerifyEmailMessageTextResponse extends Message<GetCustomVerifyEmailMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomVerifyEmailMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomVerifyEmailMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifyEmailMessageTextResponse {
    return new GetCustomVerifyEmailMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailMessageTextResponse {
    return new GetCustomVerifyEmailMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailMessageTextResponse {
    return new GetCustomVerifyEmailMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifyEmailMessageTextResponse | PlainMessage<GetCustomVerifyEmailMessageTextResponse> | undefined, b: GetCustomVerifyEmailMessageTextResponse | PlainMessage<GetCustomVerifyEmailMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifyEmailMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultVerifyEmailMessageTextRequest
 */
export class GetDefaultVerifyEmailMessageTextRequest extends Message<GetDefaultVerifyEmailMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultVerifyEmailMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultVerifyEmailMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifyEmailMessageTextRequest {
    return new GetDefaultVerifyEmailMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailMessageTextRequest {
    return new GetDefaultVerifyEmailMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailMessageTextRequest {
    return new GetDefaultVerifyEmailMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifyEmailMessageTextRequest | PlainMessage<GetDefaultVerifyEmailMessageTextRequest> | undefined, b: GetDefaultVerifyEmailMessageTextRequest | PlainMessage<GetDefaultVerifyEmailMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifyEmailMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultVerifyEmailMessageTextResponse
 */
export class GetDefaultVerifyEmailMessageTextResponse extends Message<GetDefaultVerifyEmailMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultVerifyEmailMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultVerifyEmailMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifyEmailMessageTextResponse {
    return new GetDefaultVerifyEmailMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailMessageTextResponse {
    return new GetDefaultVerifyEmailMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailMessageTextResponse {
    return new GetDefaultVerifyEmailMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifyEmailMessageTextResponse | PlainMessage<GetDefaultVerifyEmailMessageTextResponse> | undefined, b: GetDefaultVerifyEmailMessageTextResponse | PlainMessage<GetDefaultVerifyEmailMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifyEmailMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomVerifyEmailMessageTextRequest
 */
export class SetCustomVerifyEmailMessageTextRequest extends Message<SetCustomVerifyEmailMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetCustomVerifyEmailMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomVerifyEmailMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomVerifyEmailMessageTextRequest {
    return new SetCustomVerifyEmailMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomVerifyEmailMessageTextRequest {
    return new SetCustomVerifyEmailMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomVerifyEmailMessageTextRequest {
    return new SetCustomVerifyEmailMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomVerifyEmailMessageTextRequest | PlainMessage<SetCustomVerifyEmailMessageTextRequest> | undefined, b: SetCustomVerifyEmailMessageTextRequest | PlainMessage<SetCustomVerifyEmailMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetCustomVerifyEmailMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomVerifyEmailMessageTextResponse
 */
export class SetCustomVerifyEmailMessageTextResponse extends Message<SetCustomVerifyEmailMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetCustomVerifyEmailMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomVerifyEmailMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomVerifyEmailMessageTextResponse {
    return new SetCustomVerifyEmailMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomVerifyEmailMessageTextResponse {
    return new SetCustomVerifyEmailMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomVerifyEmailMessageTextResponse {
    return new SetCustomVerifyEmailMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomVerifyEmailMessageTextResponse | PlainMessage<SetCustomVerifyEmailMessageTextResponse> | undefined, b: SetCustomVerifyEmailMessageTextResponse | PlainMessage<SetCustomVerifyEmailMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetCustomVerifyEmailMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomVerifyEmailMessageTextToDefaultRequest
 */
export class ResetCustomVerifyEmailMessageTextToDefaultRequest extends Message<ResetCustomVerifyEmailMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomVerifyEmailMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomVerifyEmailMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifyEmailMessageTextToDefaultRequest {
    return new ResetCustomVerifyEmailMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailMessageTextToDefaultRequest {
    return new ResetCustomVerifyEmailMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailMessageTextToDefaultRequest {
    return new ResetCustomVerifyEmailMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifyEmailMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifyEmailMessageTextToDefaultRequest> | undefined, b: ResetCustomVerifyEmailMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifyEmailMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifyEmailMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomVerifyEmailMessageTextToDefaultResponse
 */
export class ResetCustomVerifyEmailMessageTextToDefaultResponse extends Message<ResetCustomVerifyEmailMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomVerifyEmailMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomVerifyEmailMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifyEmailMessageTextToDefaultResponse {
    return new ResetCustomVerifyEmailMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailMessageTextToDefaultResponse {
    return new ResetCustomVerifyEmailMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailMessageTextToDefaultResponse {
    return new ResetCustomVerifyEmailMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifyEmailMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifyEmailMessageTextToDefaultResponse> | undefined, b: ResetCustomVerifyEmailMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifyEmailMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifyEmailMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomVerifyPhoneMessageTextRequest
 */
export class GetCustomVerifyPhoneMessageTextRequest extends Message<GetCustomVerifyPhoneMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomVerifyPhoneMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomVerifyPhoneMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifyPhoneMessageTextRequest {
    return new GetCustomVerifyPhoneMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifyPhoneMessageTextRequest {
    return new GetCustomVerifyPhoneMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifyPhoneMessageTextRequest {
    return new GetCustomVerifyPhoneMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifyPhoneMessageTextRequest | PlainMessage<GetCustomVerifyPhoneMessageTextRequest> | undefined, b: GetCustomVerifyPhoneMessageTextRequest | PlainMessage<GetCustomVerifyPhoneMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifyPhoneMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomVerifyPhoneMessageTextResponse
 */
export class GetCustomVerifyPhoneMessageTextResponse extends Message<GetCustomVerifyPhoneMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomVerifyPhoneMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomVerifyPhoneMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifyPhoneMessageTextResponse {
    return new GetCustomVerifyPhoneMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifyPhoneMessageTextResponse {
    return new GetCustomVerifyPhoneMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifyPhoneMessageTextResponse {
    return new GetCustomVerifyPhoneMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifyPhoneMessageTextResponse | PlainMessage<GetCustomVerifyPhoneMessageTextResponse> | undefined, b: GetCustomVerifyPhoneMessageTextResponse | PlainMessage<GetCustomVerifyPhoneMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifyPhoneMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultVerifyPhoneMessageTextRequest
 */
export class GetDefaultVerifyPhoneMessageTextRequest extends Message<GetDefaultVerifyPhoneMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultVerifyPhoneMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultVerifyPhoneMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifyPhoneMessageTextRequest {
    return new GetDefaultVerifyPhoneMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifyPhoneMessageTextRequest {
    return new GetDefaultVerifyPhoneMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifyPhoneMessageTextRequest {
    return new GetDefaultVerifyPhoneMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifyPhoneMessageTextRequest | PlainMessage<GetDefaultVerifyPhoneMessageTextRequest> | undefined, b: GetDefaultVerifyPhoneMessageTextRequest | PlainMessage<GetDefaultVerifyPhoneMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifyPhoneMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultVerifyPhoneMessageTextResponse
 */
export class GetDefaultVerifyPhoneMessageTextResponse extends Message<GetDefaultVerifyPhoneMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultVerifyPhoneMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultVerifyPhoneMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifyPhoneMessageTextResponse {
    return new GetDefaultVerifyPhoneMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifyPhoneMessageTextResponse {
    return new GetDefaultVerifyPhoneMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifyPhoneMessageTextResponse {
    return new GetDefaultVerifyPhoneMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifyPhoneMessageTextResponse | PlainMessage<GetDefaultVerifyPhoneMessageTextResponse> | undefined, b: GetDefaultVerifyPhoneMessageTextResponse | PlainMessage<GetDefaultVerifyPhoneMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifyPhoneMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomVerifyPhoneMessageTextRequest
 */
export class SetCustomVerifyPhoneMessageTextRequest extends Message<SetCustomVerifyPhoneMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetCustomVerifyPhoneMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomVerifyPhoneMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomVerifyPhoneMessageTextRequest {
    return new SetCustomVerifyPhoneMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomVerifyPhoneMessageTextRequest {
    return new SetCustomVerifyPhoneMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomVerifyPhoneMessageTextRequest {
    return new SetCustomVerifyPhoneMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomVerifyPhoneMessageTextRequest | PlainMessage<SetCustomVerifyPhoneMessageTextRequest> | undefined, b: SetCustomVerifyPhoneMessageTextRequest | PlainMessage<SetCustomVerifyPhoneMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetCustomVerifyPhoneMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomVerifyPhoneMessageTextResponse
 */
export class SetCustomVerifyPhoneMessageTextResponse extends Message<SetCustomVerifyPhoneMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetCustomVerifyPhoneMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomVerifyPhoneMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomVerifyPhoneMessageTextResponse {
    return new SetCustomVerifyPhoneMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomVerifyPhoneMessageTextResponse {
    return new SetCustomVerifyPhoneMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomVerifyPhoneMessageTextResponse {
    return new SetCustomVerifyPhoneMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomVerifyPhoneMessageTextResponse | PlainMessage<SetCustomVerifyPhoneMessageTextResponse> | undefined, b: SetCustomVerifyPhoneMessageTextResponse | PlainMessage<SetCustomVerifyPhoneMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetCustomVerifyPhoneMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomVerifyPhoneMessageTextToDefaultRequest
 */
export class ResetCustomVerifyPhoneMessageTextToDefaultRequest extends Message<ResetCustomVerifyPhoneMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomVerifyPhoneMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomVerifyPhoneMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifyPhoneMessageTextToDefaultRequest {
    return new ResetCustomVerifyPhoneMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifyPhoneMessageTextToDefaultRequest {
    return new ResetCustomVerifyPhoneMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifyPhoneMessageTextToDefaultRequest {
    return new ResetCustomVerifyPhoneMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifyPhoneMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifyPhoneMessageTextToDefaultRequest> | undefined, b: ResetCustomVerifyPhoneMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifyPhoneMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifyPhoneMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomVerifyPhoneMessageTextToDefaultResponse
 */
export class ResetCustomVerifyPhoneMessageTextToDefaultResponse extends Message<ResetCustomVerifyPhoneMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomVerifyPhoneMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomVerifyPhoneMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifyPhoneMessageTextToDefaultResponse {
    return new ResetCustomVerifyPhoneMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifyPhoneMessageTextToDefaultResponse {
    return new ResetCustomVerifyPhoneMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifyPhoneMessageTextToDefaultResponse {
    return new ResetCustomVerifyPhoneMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifyPhoneMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifyPhoneMessageTextToDefaultResponse> | undefined, b: ResetCustomVerifyPhoneMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifyPhoneMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifyPhoneMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomVerifySMSOTPMessageTextRequest
 */
export class GetCustomVerifySMSOTPMessageTextRequest extends Message<GetCustomVerifySMSOTPMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomVerifySMSOTPMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomVerifySMSOTPMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifySMSOTPMessageTextRequest {
    return new GetCustomVerifySMSOTPMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifySMSOTPMessageTextRequest {
    return new GetCustomVerifySMSOTPMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifySMSOTPMessageTextRequest {
    return new GetCustomVerifySMSOTPMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifySMSOTPMessageTextRequest | PlainMessage<GetCustomVerifySMSOTPMessageTextRequest> | undefined, b: GetCustomVerifySMSOTPMessageTextRequest | PlainMessage<GetCustomVerifySMSOTPMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifySMSOTPMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomVerifySMSOTPMessageTextResponse
 */
export class GetCustomVerifySMSOTPMessageTextResponse extends Message<GetCustomVerifySMSOTPMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomVerifySMSOTPMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomVerifySMSOTPMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifySMSOTPMessageTextResponse {
    return new GetCustomVerifySMSOTPMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifySMSOTPMessageTextResponse {
    return new GetCustomVerifySMSOTPMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifySMSOTPMessageTextResponse {
    return new GetCustomVerifySMSOTPMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifySMSOTPMessageTextResponse | PlainMessage<GetCustomVerifySMSOTPMessageTextResponse> | undefined, b: GetCustomVerifySMSOTPMessageTextResponse | PlainMessage<GetCustomVerifySMSOTPMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifySMSOTPMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultVerifySMSOTPMessageTextRequest
 */
export class GetDefaultVerifySMSOTPMessageTextRequest extends Message<GetDefaultVerifySMSOTPMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultVerifySMSOTPMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultVerifySMSOTPMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifySMSOTPMessageTextRequest {
    return new GetDefaultVerifySMSOTPMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifySMSOTPMessageTextRequest {
    return new GetDefaultVerifySMSOTPMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifySMSOTPMessageTextRequest {
    return new GetDefaultVerifySMSOTPMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifySMSOTPMessageTextRequest | PlainMessage<GetDefaultVerifySMSOTPMessageTextRequest> | undefined, b: GetDefaultVerifySMSOTPMessageTextRequest | PlainMessage<GetDefaultVerifySMSOTPMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifySMSOTPMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultVerifySMSOTPMessageTextResponse
 */
export class GetDefaultVerifySMSOTPMessageTextResponse extends Message<GetDefaultVerifySMSOTPMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultVerifySMSOTPMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultVerifySMSOTPMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifySMSOTPMessageTextResponse {
    return new GetDefaultVerifySMSOTPMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifySMSOTPMessageTextResponse {
    return new GetDefaultVerifySMSOTPMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifySMSOTPMessageTextResponse {
    return new GetDefaultVerifySMSOTPMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifySMSOTPMessageTextResponse | PlainMessage<GetDefaultVerifySMSOTPMessageTextResponse> | undefined, b: GetDefaultVerifySMSOTPMessageTextResponse | PlainMessage<GetDefaultVerifySMSOTPMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifySMSOTPMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomVerifySMSOTPMessageTextRequest
 */
export class SetCustomVerifySMSOTPMessageTextRequest extends Message<SetCustomVerifySMSOTPMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string text = 2;
   */
  text = "";

  constructor(data?: PartialMessage<SetCustomVerifySMSOTPMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomVerifySMSOTPMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomVerifySMSOTPMessageTextRequest {
    return new SetCustomVerifySMSOTPMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomVerifySMSOTPMessageTextRequest {
    return new SetCustomVerifySMSOTPMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomVerifySMSOTPMessageTextRequest {
    return new SetCustomVerifySMSOTPMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomVerifySMSOTPMessageTextRequest | PlainMessage<SetCustomVerifySMSOTPMessageTextRequest> | undefined, b: SetCustomVerifySMSOTPMessageTextRequest | PlainMessage<SetCustomVerifySMSOTPMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetCustomVerifySMSOTPMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomVerifySMSOTPMessageTextResponse
 */
export class SetCustomVerifySMSOTPMessageTextResponse extends Message<SetCustomVerifySMSOTPMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetCustomVerifySMSOTPMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomVerifySMSOTPMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomVerifySMSOTPMessageTextResponse {
    return new SetCustomVerifySMSOTPMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomVerifySMSOTPMessageTextResponse {
    return new SetCustomVerifySMSOTPMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomVerifySMSOTPMessageTextResponse {
    return new SetCustomVerifySMSOTPMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomVerifySMSOTPMessageTextResponse | PlainMessage<SetCustomVerifySMSOTPMessageTextResponse> | undefined, b: SetCustomVerifySMSOTPMessageTextResponse | PlainMessage<SetCustomVerifySMSOTPMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetCustomVerifySMSOTPMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest
 */
export class ResetCustomVerifySMSOTPMessageTextToDefaultRequest extends Message<ResetCustomVerifySMSOTPMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomVerifySMSOTPMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifySMSOTPMessageTextToDefaultRequest {
    return new ResetCustomVerifySMSOTPMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifySMSOTPMessageTextToDefaultRequest {
    return new ResetCustomVerifySMSOTPMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifySMSOTPMessageTextToDefaultRequest {
    return new ResetCustomVerifySMSOTPMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifySMSOTPMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifySMSOTPMessageTextToDefaultRequest> | undefined, b: ResetCustomVerifySMSOTPMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifySMSOTPMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifySMSOTPMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse
 */
export class ResetCustomVerifySMSOTPMessageTextToDefaultResponse extends Message<ResetCustomVerifySMSOTPMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomVerifySMSOTPMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifySMSOTPMessageTextToDefaultResponse {
    return new ResetCustomVerifySMSOTPMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifySMSOTPMessageTextToDefaultResponse {
    return new ResetCustomVerifySMSOTPMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifySMSOTPMessageTextToDefaultResponse {
    return new ResetCustomVerifySMSOTPMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifySMSOTPMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifySMSOTPMessageTextToDefaultResponse> | undefined, b: ResetCustomVerifySMSOTPMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifySMSOTPMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifySMSOTPMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomVerifyEmailOTPMessageTextRequest
 */
export class GetCustomVerifyEmailOTPMessageTextRequest extends Message<GetCustomVerifyEmailOTPMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomVerifyEmailOTPMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomVerifyEmailOTPMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifyEmailOTPMessageTextRequest {
    return new GetCustomVerifyEmailOTPMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailOTPMessageTextRequest {
    return new GetCustomVerifyEmailOTPMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailOTPMessageTextRequest {
    return new GetCustomVerifyEmailOTPMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifyEmailOTPMessageTextRequest | PlainMessage<GetCustomVerifyEmailOTPMessageTextRequest> | undefined, b: GetCustomVerifyEmailOTPMessageTextRequest | PlainMessage<GetCustomVerifyEmailOTPMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifyEmailOTPMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomVerifyEmailOTPMessageTextResponse
 */
export class GetCustomVerifyEmailOTPMessageTextResponse extends Message<GetCustomVerifyEmailOTPMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomVerifyEmailOTPMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomVerifyEmailOTPMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifyEmailOTPMessageTextResponse {
    return new GetCustomVerifyEmailOTPMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailOTPMessageTextResponse {
    return new GetCustomVerifyEmailOTPMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailOTPMessageTextResponse {
    return new GetCustomVerifyEmailOTPMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifyEmailOTPMessageTextResponse | PlainMessage<GetCustomVerifyEmailOTPMessageTextResponse> | undefined, b: GetCustomVerifyEmailOTPMessageTextResponse | PlainMessage<GetCustomVerifyEmailOTPMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifyEmailOTPMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultVerifyEmailOTPMessageTextRequest
 */
export class GetDefaultVerifyEmailOTPMessageTextRequest extends Message<GetDefaultVerifyEmailOTPMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultVerifyEmailOTPMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultVerifyEmailOTPMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifyEmailOTPMessageTextRequest {
    return new GetDefaultVerifyEmailOTPMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailOTPMessageTextRequest {
    return new GetDefaultVerifyEmailOTPMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailOTPMessageTextRequest {
    return new GetDefaultVerifyEmailOTPMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifyEmailOTPMessageTextRequest | PlainMessage<GetDefaultVerifyEmailOTPMessageTextRequest> | undefined, b: GetDefaultVerifyEmailOTPMessageTextRequest | PlainMessage<GetDefaultVerifyEmailOTPMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifyEmailOTPMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultVerifyEmailOTPMessageTextResponse
 */
export class GetDefaultVerifyEmailOTPMessageTextResponse extends Message<GetDefaultVerifyEmailOTPMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultVerifyEmailOTPMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultVerifyEmailOTPMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifyEmailOTPMessageTextResponse {
    return new GetDefaultVerifyEmailOTPMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailOTPMessageTextResponse {
    return new GetDefaultVerifyEmailOTPMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailOTPMessageTextResponse {
    return new GetDefaultVerifyEmailOTPMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifyEmailOTPMessageTextResponse | PlainMessage<GetDefaultVerifyEmailOTPMessageTextResponse> | undefined, b: GetDefaultVerifyEmailOTPMessageTextResponse | PlainMessage<GetDefaultVerifyEmailOTPMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifyEmailOTPMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomVerifyEmailOTPMessageTextRequest
 */
export class SetCustomVerifyEmailOTPMessageTextRequest extends Message<SetCustomVerifyEmailOTPMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetCustomVerifyEmailOTPMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomVerifyEmailOTPMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomVerifyEmailOTPMessageTextRequest {
    return new SetCustomVerifyEmailOTPMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomVerifyEmailOTPMessageTextRequest {
    return new SetCustomVerifyEmailOTPMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomVerifyEmailOTPMessageTextRequest {
    return new SetCustomVerifyEmailOTPMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomVerifyEmailOTPMessageTextRequest | PlainMessage<SetCustomVerifyEmailOTPMessageTextRequest> | undefined, b: SetCustomVerifyEmailOTPMessageTextRequest | PlainMessage<SetCustomVerifyEmailOTPMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetCustomVerifyEmailOTPMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomVerifyEmailOTPMessageTextResponse
 */
export class SetCustomVerifyEmailOTPMessageTextResponse extends Message<SetCustomVerifyEmailOTPMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetCustomVerifyEmailOTPMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomVerifyEmailOTPMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomVerifyEmailOTPMessageTextResponse {
    return new SetCustomVerifyEmailOTPMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomVerifyEmailOTPMessageTextResponse {
    return new SetCustomVerifyEmailOTPMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomVerifyEmailOTPMessageTextResponse {
    return new SetCustomVerifyEmailOTPMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomVerifyEmailOTPMessageTextResponse | PlainMessage<SetCustomVerifyEmailOTPMessageTextResponse> | undefined, b: SetCustomVerifyEmailOTPMessageTextResponse | PlainMessage<SetCustomVerifyEmailOTPMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetCustomVerifyEmailOTPMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest
 */
export class ResetCustomVerifyEmailOTPMessageTextToDefaultRequest extends Message<ResetCustomVerifyEmailOTPMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomVerifyEmailOTPMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifyEmailOTPMessageTextToDefaultRequest {
    return new ResetCustomVerifyEmailOTPMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailOTPMessageTextToDefaultRequest {
    return new ResetCustomVerifyEmailOTPMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailOTPMessageTextToDefaultRequest {
    return new ResetCustomVerifyEmailOTPMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifyEmailOTPMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifyEmailOTPMessageTextToDefaultRequest> | undefined, b: ResetCustomVerifyEmailOTPMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifyEmailOTPMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifyEmailOTPMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse
 */
export class ResetCustomVerifyEmailOTPMessageTextToDefaultResponse extends Message<ResetCustomVerifyEmailOTPMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomVerifyEmailOTPMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifyEmailOTPMessageTextToDefaultResponse {
    return new ResetCustomVerifyEmailOTPMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailOTPMessageTextToDefaultResponse {
    return new ResetCustomVerifyEmailOTPMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailOTPMessageTextToDefaultResponse {
    return new ResetCustomVerifyEmailOTPMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifyEmailOTPMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifyEmailOTPMessageTextToDefaultResponse> | undefined, b: ResetCustomVerifyEmailOTPMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifyEmailOTPMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifyEmailOTPMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomDomainClaimedMessageTextRequest
 */
export class GetCustomDomainClaimedMessageTextRequest extends Message<GetCustomDomainClaimedMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomDomainClaimedMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomDomainClaimedMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomDomainClaimedMessageTextRequest {
    return new GetCustomDomainClaimedMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomDomainClaimedMessageTextRequest {
    return new GetCustomDomainClaimedMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomDomainClaimedMessageTextRequest {
    return new GetCustomDomainClaimedMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomDomainClaimedMessageTextRequest | PlainMessage<GetCustomDomainClaimedMessageTextRequest> | undefined, b: GetCustomDomainClaimedMessageTextRequest | PlainMessage<GetCustomDomainClaimedMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomDomainClaimedMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomDomainClaimedMessageTextResponse
 */
export class GetCustomDomainClaimedMessageTextResponse extends Message<GetCustomDomainClaimedMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomDomainClaimedMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomDomainClaimedMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomDomainClaimedMessageTextResponse {
    return new GetCustomDomainClaimedMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomDomainClaimedMessageTextResponse {
    return new GetCustomDomainClaimedMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomDomainClaimedMessageTextResponse {
    return new GetCustomDomainClaimedMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomDomainClaimedMessageTextResponse | PlainMessage<GetCustomDomainClaimedMessageTextResponse> | undefined, b: GetCustomDomainClaimedMessageTextResponse | PlainMessage<GetCustomDomainClaimedMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomDomainClaimedMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultDomainClaimedMessageTextRequest
 */
export class GetDefaultDomainClaimedMessageTextRequest extends Message<GetDefaultDomainClaimedMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultDomainClaimedMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultDomainClaimedMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultDomainClaimedMessageTextRequest {
    return new GetDefaultDomainClaimedMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultDomainClaimedMessageTextRequest {
    return new GetDefaultDomainClaimedMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultDomainClaimedMessageTextRequest {
    return new GetDefaultDomainClaimedMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultDomainClaimedMessageTextRequest | PlainMessage<GetDefaultDomainClaimedMessageTextRequest> | undefined, b: GetDefaultDomainClaimedMessageTextRequest | PlainMessage<GetDefaultDomainClaimedMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultDomainClaimedMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultDomainClaimedMessageTextResponse
 */
export class GetDefaultDomainClaimedMessageTextResponse extends Message<GetDefaultDomainClaimedMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultDomainClaimedMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultDomainClaimedMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultDomainClaimedMessageTextResponse {
    return new GetDefaultDomainClaimedMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultDomainClaimedMessageTextResponse {
    return new GetDefaultDomainClaimedMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultDomainClaimedMessageTextResponse {
    return new GetDefaultDomainClaimedMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultDomainClaimedMessageTextResponse | PlainMessage<GetDefaultDomainClaimedMessageTextResponse> | undefined, b: GetDefaultDomainClaimedMessageTextResponse | PlainMessage<GetDefaultDomainClaimedMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultDomainClaimedMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomDomainClaimedMessageTextRequest
 */
export class SetCustomDomainClaimedMessageTextRequest extends Message<SetCustomDomainClaimedMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetCustomDomainClaimedMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomDomainClaimedMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomDomainClaimedMessageTextRequest {
    return new SetCustomDomainClaimedMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomDomainClaimedMessageTextRequest {
    return new SetCustomDomainClaimedMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomDomainClaimedMessageTextRequest {
    return new SetCustomDomainClaimedMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomDomainClaimedMessageTextRequest | PlainMessage<SetCustomDomainClaimedMessageTextRequest> | undefined, b: SetCustomDomainClaimedMessageTextRequest | PlainMessage<SetCustomDomainClaimedMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetCustomDomainClaimedMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomDomainClaimedMessageTextResponse
 */
export class SetCustomDomainClaimedMessageTextResponse extends Message<SetCustomDomainClaimedMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetCustomDomainClaimedMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomDomainClaimedMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomDomainClaimedMessageTextResponse {
    return new SetCustomDomainClaimedMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomDomainClaimedMessageTextResponse {
    return new SetCustomDomainClaimedMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomDomainClaimedMessageTextResponse {
    return new SetCustomDomainClaimedMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomDomainClaimedMessageTextResponse | PlainMessage<SetCustomDomainClaimedMessageTextResponse> | undefined, b: SetCustomDomainClaimedMessageTextResponse | PlainMessage<SetCustomDomainClaimedMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetCustomDomainClaimedMessageTextResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.management.v1.ResetCustomDomainClaimedMessageTextToDefaultRequest
 */
export class ResetCustomDomainClaimedMessageTextToDefaultRequest extends Message<ResetCustomDomainClaimedMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomDomainClaimedMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomDomainClaimedMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomDomainClaimedMessageTextToDefaultRequest {
    return new ResetCustomDomainClaimedMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomDomainClaimedMessageTextToDefaultRequest {
    return new ResetCustomDomainClaimedMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomDomainClaimedMessageTextToDefaultRequest {
    return new ResetCustomDomainClaimedMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomDomainClaimedMessageTextToDefaultRequest | PlainMessage<ResetCustomDomainClaimedMessageTextToDefaultRequest> | undefined, b: ResetCustomDomainClaimedMessageTextToDefaultRequest | PlainMessage<ResetCustomDomainClaimedMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomDomainClaimedMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomDomainClaimedMessageTextToDefaultResponse
 */
export class ResetCustomDomainClaimedMessageTextToDefaultResponse extends Message<ResetCustomDomainClaimedMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomDomainClaimedMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomDomainClaimedMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomDomainClaimedMessageTextToDefaultResponse {
    return new ResetCustomDomainClaimedMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomDomainClaimedMessageTextToDefaultResponse {
    return new ResetCustomDomainClaimedMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomDomainClaimedMessageTextToDefaultResponse {
    return new ResetCustomDomainClaimedMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomDomainClaimedMessageTextToDefaultResponse | PlainMessage<ResetCustomDomainClaimedMessageTextToDefaultResponse> | undefined, b: ResetCustomDomainClaimedMessageTextToDefaultResponse | PlainMessage<ResetCustomDomainClaimedMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomDomainClaimedMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomPasswordlessRegistrationMessageTextRequest
 */
export class GetCustomPasswordlessRegistrationMessageTextRequest extends Message<GetCustomPasswordlessRegistrationMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomPasswordlessRegistrationMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomPasswordlessRegistrationMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomPasswordlessRegistrationMessageTextRequest {
    return new GetCustomPasswordlessRegistrationMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomPasswordlessRegistrationMessageTextRequest {
    return new GetCustomPasswordlessRegistrationMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomPasswordlessRegistrationMessageTextRequest {
    return new GetCustomPasswordlessRegistrationMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomPasswordlessRegistrationMessageTextRequest | PlainMessage<GetCustomPasswordlessRegistrationMessageTextRequest> | undefined, b: GetCustomPasswordlessRegistrationMessageTextRequest | PlainMessage<GetCustomPasswordlessRegistrationMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomPasswordlessRegistrationMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomPasswordlessRegistrationMessageTextResponse
 */
export class GetCustomPasswordlessRegistrationMessageTextResponse extends Message<GetCustomPasswordlessRegistrationMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomPasswordlessRegistrationMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomPasswordlessRegistrationMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomPasswordlessRegistrationMessageTextResponse {
    return new GetCustomPasswordlessRegistrationMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomPasswordlessRegistrationMessageTextResponse {
    return new GetCustomPasswordlessRegistrationMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomPasswordlessRegistrationMessageTextResponse {
    return new GetCustomPasswordlessRegistrationMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomPasswordlessRegistrationMessageTextResponse | PlainMessage<GetCustomPasswordlessRegistrationMessageTextResponse> | undefined, b: GetCustomPasswordlessRegistrationMessageTextResponse | PlainMessage<GetCustomPasswordlessRegistrationMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomPasswordlessRegistrationMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultPasswordlessRegistrationMessageTextRequest
 */
export class GetDefaultPasswordlessRegistrationMessageTextRequest extends Message<GetDefaultPasswordlessRegistrationMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultPasswordlessRegistrationMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultPasswordlessRegistrationMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordlessRegistrationMessageTextRequest {
    return new GetDefaultPasswordlessRegistrationMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordlessRegistrationMessageTextRequest {
    return new GetDefaultPasswordlessRegistrationMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordlessRegistrationMessageTextRequest {
    return new GetDefaultPasswordlessRegistrationMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordlessRegistrationMessageTextRequest | PlainMessage<GetDefaultPasswordlessRegistrationMessageTextRequest> | undefined, b: GetDefaultPasswordlessRegistrationMessageTextRequest | PlainMessage<GetDefaultPasswordlessRegistrationMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordlessRegistrationMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultPasswordlessRegistrationMessageTextResponse
 */
export class GetDefaultPasswordlessRegistrationMessageTextResponse extends Message<GetDefaultPasswordlessRegistrationMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultPasswordlessRegistrationMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultPasswordlessRegistrationMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordlessRegistrationMessageTextResponse {
    return new GetDefaultPasswordlessRegistrationMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordlessRegistrationMessageTextResponse {
    return new GetDefaultPasswordlessRegistrationMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordlessRegistrationMessageTextResponse {
    return new GetDefaultPasswordlessRegistrationMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordlessRegistrationMessageTextResponse | PlainMessage<GetDefaultPasswordlessRegistrationMessageTextResponse> | undefined, b: GetDefaultPasswordlessRegistrationMessageTextResponse | PlainMessage<GetDefaultPasswordlessRegistrationMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordlessRegistrationMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomPasswordlessRegistrationMessageTextRequest
 */
export class SetCustomPasswordlessRegistrationMessageTextRequest extends Message<SetCustomPasswordlessRegistrationMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetCustomPasswordlessRegistrationMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomPasswordlessRegistrationMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomPasswordlessRegistrationMessageTextRequest {
    return new SetCustomPasswordlessRegistrationMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomPasswordlessRegistrationMessageTextRequest {
    return new SetCustomPasswordlessRegistrationMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomPasswordlessRegistrationMessageTextRequest {
    return new SetCustomPasswordlessRegistrationMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomPasswordlessRegistrationMessageTextRequest | PlainMessage<SetCustomPasswordlessRegistrationMessageTextRequest> | undefined, b: SetCustomPasswordlessRegistrationMessageTextRequest | PlainMessage<SetCustomPasswordlessRegistrationMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetCustomPasswordlessRegistrationMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomPasswordlessRegistrationMessageTextResponse
 */
export class SetCustomPasswordlessRegistrationMessageTextResponse extends Message<SetCustomPasswordlessRegistrationMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetCustomPasswordlessRegistrationMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomPasswordlessRegistrationMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomPasswordlessRegistrationMessageTextResponse {
    return new SetCustomPasswordlessRegistrationMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomPasswordlessRegistrationMessageTextResponse {
    return new SetCustomPasswordlessRegistrationMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomPasswordlessRegistrationMessageTextResponse {
    return new SetCustomPasswordlessRegistrationMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomPasswordlessRegistrationMessageTextResponse | PlainMessage<SetCustomPasswordlessRegistrationMessageTextResponse> | undefined, b: SetCustomPasswordlessRegistrationMessageTextResponse | PlainMessage<SetCustomPasswordlessRegistrationMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetCustomPasswordlessRegistrationMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest
 */
export class ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest extends Message<ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest {
    return new ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest {
    return new ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest {
    return new ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest | PlainMessage<ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest> | undefined, b: ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest | PlainMessage<ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse
 */
export class ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse extends Message<ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse {
    return new ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse {
    return new ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse {
    return new ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse | PlainMessage<ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse> | undefined, b: ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse | PlainMessage<ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomPasswordChangeMessageTextRequest
 */
export class GetCustomPasswordChangeMessageTextRequest extends Message<GetCustomPasswordChangeMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomPasswordChangeMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomPasswordChangeMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomPasswordChangeMessageTextRequest {
    return new GetCustomPasswordChangeMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomPasswordChangeMessageTextRequest {
    return new GetCustomPasswordChangeMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomPasswordChangeMessageTextRequest {
    return new GetCustomPasswordChangeMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomPasswordChangeMessageTextRequest | PlainMessage<GetCustomPasswordChangeMessageTextRequest> | undefined, b: GetCustomPasswordChangeMessageTextRequest | PlainMessage<GetCustomPasswordChangeMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomPasswordChangeMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetCustomPasswordChangeMessageTextResponse
 */
export class GetCustomPasswordChangeMessageTextResponse extends Message<GetCustomPasswordChangeMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomPasswordChangeMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetCustomPasswordChangeMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomPasswordChangeMessageTextResponse {
    return new GetCustomPasswordChangeMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomPasswordChangeMessageTextResponse {
    return new GetCustomPasswordChangeMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomPasswordChangeMessageTextResponse {
    return new GetCustomPasswordChangeMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomPasswordChangeMessageTextResponse | PlainMessage<GetCustomPasswordChangeMessageTextResponse> | undefined, b: GetCustomPasswordChangeMessageTextResponse | PlainMessage<GetCustomPasswordChangeMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomPasswordChangeMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultPasswordChangeMessageTextRequest
 */
export class GetDefaultPasswordChangeMessageTextRequest extends Message<GetDefaultPasswordChangeMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultPasswordChangeMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultPasswordChangeMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordChangeMessageTextRequest {
    return new GetDefaultPasswordChangeMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordChangeMessageTextRequest {
    return new GetDefaultPasswordChangeMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordChangeMessageTextRequest {
    return new GetDefaultPasswordChangeMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordChangeMessageTextRequest | PlainMessage<GetDefaultPasswordChangeMessageTextRequest> | undefined, b: GetDefaultPasswordChangeMessageTextRequest | PlainMessage<GetDefaultPasswordChangeMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordChangeMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetDefaultPasswordChangeMessageTextResponse
 */
export class GetDefaultPasswordChangeMessageTextResponse extends Message<GetDefaultPasswordChangeMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultPasswordChangeMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetDefaultPasswordChangeMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordChangeMessageTextResponse {
    return new GetDefaultPasswordChangeMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordChangeMessageTextResponse {
    return new GetDefaultPasswordChangeMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordChangeMessageTextResponse {
    return new GetDefaultPasswordChangeMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordChangeMessageTextResponse | PlainMessage<GetDefaultPasswordChangeMessageTextResponse> | undefined, b: GetDefaultPasswordChangeMessageTextResponse | PlainMessage<GetDefaultPasswordChangeMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordChangeMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomPasswordChangeMessageTextRequest
 */
export class SetCustomPasswordChangeMessageTextRequest extends Message<SetCustomPasswordChangeMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetCustomPasswordChangeMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomPasswordChangeMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomPasswordChangeMessageTextRequest {
    return new SetCustomPasswordChangeMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomPasswordChangeMessageTextRequest {
    return new SetCustomPasswordChangeMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomPasswordChangeMessageTextRequest {
    return new SetCustomPasswordChangeMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomPasswordChangeMessageTextRequest | PlainMessage<SetCustomPasswordChangeMessageTextRequest> | undefined, b: SetCustomPasswordChangeMessageTextRequest | PlainMessage<SetCustomPasswordChangeMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetCustomPasswordChangeMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetCustomPasswordChangeMessageTextResponse
 */
export class SetCustomPasswordChangeMessageTextResponse extends Message<SetCustomPasswordChangeMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetCustomPasswordChangeMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetCustomPasswordChangeMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomPasswordChangeMessageTextResponse {
    return new SetCustomPasswordChangeMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomPasswordChangeMessageTextResponse {
    return new SetCustomPasswordChangeMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomPasswordChangeMessageTextResponse {
    return new SetCustomPasswordChangeMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomPasswordChangeMessageTextResponse | PlainMessage<SetCustomPasswordChangeMessageTextResponse> | undefined, b: SetCustomPasswordChangeMessageTextResponse | PlainMessage<SetCustomPasswordChangeMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetCustomPasswordChangeMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomPasswordChangeMessageTextToDefaultRequest
 */
export class ResetCustomPasswordChangeMessageTextToDefaultRequest extends Message<ResetCustomPasswordChangeMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomPasswordChangeMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomPasswordChangeMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomPasswordChangeMessageTextToDefaultRequest {
    return new ResetCustomPasswordChangeMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomPasswordChangeMessageTextToDefaultRequest {
    return new ResetCustomPasswordChangeMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomPasswordChangeMessageTextToDefaultRequest {
    return new ResetCustomPasswordChangeMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomPasswordChangeMessageTextToDefaultRequest | PlainMessage<ResetCustomPasswordChangeMessageTextToDefaultRequest> | undefined, b: ResetCustomPasswordChangeMessageTextToDefaultRequest | PlainMessage<ResetCustomPasswordChangeMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomPasswordChangeMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ResetCustomPasswordChangeMessageTextToDefaultResponse
 */
export class ResetCustomPasswordChangeMessageTextToDefaultResponse extends Message<ResetCustomPasswordChangeMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomPasswordChangeMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ResetCustomPasswordChangeMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomPasswordChangeMessageTextToDefaultResponse {
    return new ResetCustomPasswordChangeMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomPasswordChangeMessageTextToDefaultResponse {
    return new ResetCustomPasswordChangeMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomPasswordChangeMessageTextToDefaultResponse {
    return new ResetCustomPasswordChangeMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomPasswordChangeMessageTextToDefaultResponse | PlainMessage<ResetCustomPasswordChangeMessageTextToDefaultResponse> | undefined, b: ResetCustomPasswordChangeMessageTextToDefaultResponse | PlainMessage<ResetCustomPasswordChangeMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomPasswordChangeMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetOrgIDPByIDRequest
 */
export class GetOrgIDPByIDRequest extends Message<GetOrgIDPByIDRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetOrgIDPByIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetOrgIDPByIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrgIDPByIDRequest {
    return new GetOrgIDPByIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrgIDPByIDRequest {
    return new GetOrgIDPByIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrgIDPByIDRequest {
    return new GetOrgIDPByIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrgIDPByIDRequest | PlainMessage<GetOrgIDPByIDRequest> | undefined, b: GetOrgIDPByIDRequest | PlainMessage<GetOrgIDPByIDRequest> | undefined): boolean {
    return proto3.util.equals(GetOrgIDPByIDRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetOrgIDPByIDResponse
 */
export class GetOrgIDPByIDResponse extends Message<GetOrgIDPByIDResponse> {
  /**
   * @generated from field: zitadel.idp.v1.IDP idp = 1;
   */
  idp?: IDP;

  constructor(data?: PartialMessage<GetOrgIDPByIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetOrgIDPByIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp", kind: "message", T: IDP },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrgIDPByIDResponse {
    return new GetOrgIDPByIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrgIDPByIDResponse {
    return new GetOrgIDPByIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrgIDPByIDResponse {
    return new GetOrgIDPByIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrgIDPByIDResponse | PlainMessage<GetOrgIDPByIDResponse> | undefined, b: GetOrgIDPByIDResponse | PlainMessage<GetOrgIDPByIDResponse> | undefined): boolean {
    return proto3.util.equals(GetOrgIDPByIDResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListOrgIDPsRequest
 */
export class ListOrgIDPsRequest extends Message<ListOrgIDPsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.idp.v1.IDPFieldName sorting_column = 2;
   */
  sortingColumn = IDPFieldName.IDP_FIELD_NAME_UNSPECIFIED;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.management.v1.IDPQuery queries = 3;
   */
  queries: IDPQuery[] = [];

  constructor(data?: PartialMessage<ListOrgIDPsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListOrgIDPsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(IDPFieldName) },
    { no: 3, name: "queries", kind: "message", T: IDPQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgIDPsRequest {
    return new ListOrgIDPsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgIDPsRequest {
    return new ListOrgIDPsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgIDPsRequest {
    return new ListOrgIDPsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgIDPsRequest | PlainMessage<ListOrgIDPsRequest> | undefined, b: ListOrgIDPsRequest | PlainMessage<ListOrgIDPsRequest> | undefined): boolean {
    return proto3.util.equals(ListOrgIDPsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.IDPQuery
 */
export class IDPQuery extends Message<IDPQuery> {
  /**
   * @generated from oneof zitadel.management.v1.IDPQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.idp.v1.IDPIDQuery idp_id_query = 1;
     */
    value: IDPIDQuery;
    case: "idpIdQuery";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.IDPNameQuery idp_name_query = 2;
     */
    value: IDPNameQuery;
    case: "idpNameQuery";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.IDPOwnerTypeQuery owner_type_query = 3;
     */
    value: IDPOwnerTypeQuery;
    case: "ownerTypeQuery";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<IDPQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.IDPQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id_query", kind: "message", T: IDPIDQuery, oneof: "query" },
    { no: 2, name: "idp_name_query", kind: "message", T: IDPNameQuery, oneof: "query" },
    { no: 3, name: "owner_type_query", kind: "message", T: IDPOwnerTypeQuery, oneof: "query" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IDPQuery {
    return new IDPQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IDPQuery {
    return new IDPQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IDPQuery {
    return new IDPQuery().fromJsonString(jsonString, options);
  }

  static equals(a: IDPQuery | PlainMessage<IDPQuery> | undefined, b: IDPQuery | PlainMessage<IDPQuery> | undefined): boolean {
    return proto3.util.equals(IDPQuery, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListOrgIDPsResponse
 */
export class ListOrgIDPsResponse extends Message<ListOrgIDPsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: zitadel.idp.v1.IDPFieldName sorting_column = 2;
   */
  sortingColumn = IDPFieldName.IDP_FIELD_NAME_UNSPECIFIED;

  /**
   * @generated from field: repeated zitadel.idp.v1.IDP result = 3;
   */
  result: IDP[] = [];

  constructor(data?: PartialMessage<ListOrgIDPsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListOrgIDPsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(IDPFieldName) },
    { no: 3, name: "result", kind: "message", T: IDP, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgIDPsResponse {
    return new ListOrgIDPsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgIDPsResponse {
    return new ListOrgIDPsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgIDPsResponse {
    return new ListOrgIDPsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgIDPsResponse | PlainMessage<ListOrgIDPsResponse> | undefined, b: ListOrgIDPsResponse | PlainMessage<ListOrgIDPsResponse> | undefined): boolean {
    return proto3.util.equals(ListOrgIDPsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddOrgOIDCIDPRequest
 */
export class AddOrgOIDCIDPRequest extends Message<AddOrgOIDCIDPRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: zitadel.idp.v1.IDPStylingType styling_type = 2;
   */
  stylingType = IDPStylingType.STYLING_TYPE_UNSPECIFIED;

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: string issuer = 5;
   */
  issuer = "";

  /**
   * @generated from field: repeated string scopes = 6;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.OIDCMappingField display_name_mapping = 7;
   */
  displayNameMapping = OIDCMappingField.OIDC_MAPPING_FIELD_UNSPECIFIED;

  /**
   * @generated from field: zitadel.idp.v1.OIDCMappingField username_mapping = 8;
   */
  usernameMapping = OIDCMappingField.OIDC_MAPPING_FIELD_UNSPECIFIED;

  /**
   * @generated from field: bool auto_register = 9;
   */
  autoRegister = false;

  constructor(data?: PartialMessage<AddOrgOIDCIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddOrgOIDCIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "styling_type", kind: "enum", T: proto3.getEnumType(IDPStylingType) },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "display_name_mapping", kind: "enum", T: proto3.getEnumType(OIDCMappingField) },
    { no: 8, name: "username_mapping", kind: "enum", T: proto3.getEnumType(OIDCMappingField) },
    { no: 9, name: "auto_register", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOrgOIDCIDPRequest {
    return new AddOrgOIDCIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOrgOIDCIDPRequest {
    return new AddOrgOIDCIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOrgOIDCIDPRequest {
    return new AddOrgOIDCIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddOrgOIDCIDPRequest | PlainMessage<AddOrgOIDCIDPRequest> | undefined, b: AddOrgOIDCIDPRequest | PlainMessage<AddOrgOIDCIDPRequest> | undefined): boolean {
    return proto3.util.equals(AddOrgOIDCIDPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddOrgOIDCIDPResponse
 */
export class AddOrgOIDCIDPResponse extends Message<AddOrgOIDCIDPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string idp_id = 2;
   */
  idpId = "";

  constructor(data?: PartialMessage<AddOrgOIDCIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddOrgOIDCIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOrgOIDCIDPResponse {
    return new AddOrgOIDCIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOrgOIDCIDPResponse {
    return new AddOrgOIDCIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOrgOIDCIDPResponse {
    return new AddOrgOIDCIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddOrgOIDCIDPResponse | PlainMessage<AddOrgOIDCIDPResponse> | undefined, b: AddOrgOIDCIDPResponse | PlainMessage<AddOrgOIDCIDPResponse> | undefined): boolean {
    return proto3.util.equals(AddOrgOIDCIDPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddOrgJWTIDPRequest
 */
export class AddOrgJWTIDPRequest extends Message<AddOrgJWTIDPRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: zitadel.idp.v1.IDPStylingType styling_type = 2;
   */
  stylingType = IDPStylingType.STYLING_TYPE_UNSPECIFIED;

  /**
   * @generated from field: string jwt_endpoint = 3;
   */
  jwtEndpoint = "";

  /**
   * @generated from field: string issuer = 4;
   */
  issuer = "";

  /**
   * @generated from field: string keys_endpoint = 5;
   */
  keysEndpoint = "";

  /**
   * @generated from field: string header_name = 6;
   */
  headerName = "";

  /**
   * @generated from field: bool auto_register = 7;
   */
  autoRegister = false;

  constructor(data?: PartialMessage<AddOrgJWTIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddOrgJWTIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "styling_type", kind: "enum", T: proto3.getEnumType(IDPStylingType) },
    { no: 3, name: "jwt_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "keys_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "header_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "auto_register", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOrgJWTIDPRequest {
    return new AddOrgJWTIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOrgJWTIDPRequest {
    return new AddOrgJWTIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOrgJWTIDPRequest {
    return new AddOrgJWTIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddOrgJWTIDPRequest | PlainMessage<AddOrgJWTIDPRequest> | undefined, b: AddOrgJWTIDPRequest | PlainMessage<AddOrgJWTIDPRequest> | undefined): boolean {
    return proto3.util.equals(AddOrgJWTIDPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddOrgJWTIDPResponse
 */
export class AddOrgJWTIDPResponse extends Message<AddOrgJWTIDPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string idp_id = 2;
   */
  idpId = "";

  constructor(data?: PartialMessage<AddOrgJWTIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddOrgJWTIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOrgJWTIDPResponse {
    return new AddOrgJWTIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOrgJWTIDPResponse {
    return new AddOrgJWTIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOrgJWTIDPResponse {
    return new AddOrgJWTIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddOrgJWTIDPResponse | PlainMessage<AddOrgJWTIDPResponse> | undefined, b: AddOrgJWTIDPResponse | PlainMessage<AddOrgJWTIDPResponse> | undefined): boolean {
    return proto3.util.equals(AddOrgJWTIDPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateOrgIDPRequest
 */
export class DeactivateOrgIDPRequest extends Message<DeactivateOrgIDPRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  constructor(data?: PartialMessage<DeactivateOrgIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateOrgIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateOrgIDPRequest {
    return new DeactivateOrgIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateOrgIDPRequest {
    return new DeactivateOrgIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateOrgIDPRequest {
    return new DeactivateOrgIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateOrgIDPRequest | PlainMessage<DeactivateOrgIDPRequest> | undefined, b: DeactivateOrgIDPRequest | PlainMessage<DeactivateOrgIDPRequest> | undefined): boolean {
    return proto3.util.equals(DeactivateOrgIDPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateOrgIDPResponse
 */
export class DeactivateOrgIDPResponse extends Message<DeactivateOrgIDPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<DeactivateOrgIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateOrgIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateOrgIDPResponse {
    return new DeactivateOrgIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateOrgIDPResponse {
    return new DeactivateOrgIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateOrgIDPResponse {
    return new DeactivateOrgIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateOrgIDPResponse | PlainMessage<DeactivateOrgIDPResponse> | undefined, b: DeactivateOrgIDPResponse | PlainMessage<DeactivateOrgIDPResponse> | undefined): boolean {
    return proto3.util.equals(DeactivateOrgIDPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateOrgIDPRequest
 */
export class ReactivateOrgIDPRequest extends Message<ReactivateOrgIDPRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  constructor(data?: PartialMessage<ReactivateOrgIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateOrgIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateOrgIDPRequest {
    return new ReactivateOrgIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateOrgIDPRequest {
    return new ReactivateOrgIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateOrgIDPRequest {
    return new ReactivateOrgIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateOrgIDPRequest | PlainMessage<ReactivateOrgIDPRequest> | undefined, b: ReactivateOrgIDPRequest | PlainMessage<ReactivateOrgIDPRequest> | undefined): boolean {
    return proto3.util.equals(ReactivateOrgIDPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateOrgIDPResponse
 */
export class ReactivateOrgIDPResponse extends Message<ReactivateOrgIDPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ReactivateOrgIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateOrgIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateOrgIDPResponse {
    return new ReactivateOrgIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateOrgIDPResponse {
    return new ReactivateOrgIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateOrgIDPResponse {
    return new ReactivateOrgIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateOrgIDPResponse | PlainMessage<ReactivateOrgIDPResponse> | undefined, b: ReactivateOrgIDPResponse | PlainMessage<ReactivateOrgIDPResponse> | undefined): boolean {
    return proto3.util.equals(ReactivateOrgIDPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RemoveOrgIDPRequest
 */
export class RemoveOrgIDPRequest extends Message<RemoveOrgIDPRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  constructor(data?: PartialMessage<RemoveOrgIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveOrgIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOrgIDPRequest {
    return new RemoveOrgIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOrgIDPRequest {
    return new RemoveOrgIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOrgIDPRequest {
    return new RemoveOrgIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOrgIDPRequest | PlainMessage<RemoveOrgIDPRequest> | undefined, b: RemoveOrgIDPRequest | PlainMessage<RemoveOrgIDPRequest> | undefined): boolean {
    return proto3.util.equals(RemoveOrgIDPRequest, a, b);
  }
}

/**
 * This is an empty response
 *
 * @generated from message zitadel.management.v1.RemoveOrgIDPResponse
 */
export class RemoveOrgIDPResponse extends Message<RemoveOrgIDPResponse> {
  constructor(data?: PartialMessage<RemoveOrgIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RemoveOrgIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOrgIDPResponse {
    return new RemoveOrgIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOrgIDPResponse {
    return new RemoveOrgIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOrgIDPResponse {
    return new RemoveOrgIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOrgIDPResponse | PlainMessage<RemoveOrgIDPResponse> | undefined, b: RemoveOrgIDPResponse | PlainMessage<RemoveOrgIDPResponse> | undefined): boolean {
    return proto3.util.equals(RemoveOrgIDPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateOrgIDPRequest
 */
export class UpdateOrgIDPRequest extends Message<UpdateOrgIDPRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: zitadel.idp.v1.IDPStylingType styling_type = 3;
   */
  stylingType = IDPStylingType.STYLING_TYPE_UNSPECIFIED;

  /**
   * @generated from field: bool auto_register = 4;
   */
  autoRegister = false;

  constructor(data?: PartialMessage<UpdateOrgIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateOrgIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "styling_type", kind: "enum", T: proto3.getEnumType(IDPStylingType) },
    { no: 4, name: "auto_register", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrgIDPRequest {
    return new UpdateOrgIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrgIDPRequest {
    return new UpdateOrgIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrgIDPRequest {
    return new UpdateOrgIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrgIDPRequest | PlainMessage<UpdateOrgIDPRequest> | undefined, b: UpdateOrgIDPRequest | PlainMessage<UpdateOrgIDPRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOrgIDPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateOrgIDPResponse
 */
export class UpdateOrgIDPResponse extends Message<UpdateOrgIDPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateOrgIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateOrgIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrgIDPResponse {
    return new UpdateOrgIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrgIDPResponse {
    return new UpdateOrgIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrgIDPResponse {
    return new UpdateOrgIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrgIDPResponse | PlainMessage<UpdateOrgIDPResponse> | undefined, b: UpdateOrgIDPResponse | PlainMessage<UpdateOrgIDPResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOrgIDPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateOrgIDPOIDCConfigRequest
 */
export class UpdateOrgIDPOIDCConfigRequest extends Message<UpdateOrgIDPOIDCConfigRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  /**
   * @generated from field: string issuer = 4;
   */
  issuer = "";

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.OIDCMappingField display_name_mapping = 6;
   */
  displayNameMapping = OIDCMappingField.OIDC_MAPPING_FIELD_UNSPECIFIED;

  /**
   * @generated from field: zitadel.idp.v1.OIDCMappingField username_mapping = 7;
   */
  usernameMapping = OIDCMappingField.OIDC_MAPPING_FIELD_UNSPECIFIED;

  constructor(data?: PartialMessage<UpdateOrgIDPOIDCConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateOrgIDPOIDCConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "display_name_mapping", kind: "enum", T: proto3.getEnumType(OIDCMappingField) },
    { no: 7, name: "username_mapping", kind: "enum", T: proto3.getEnumType(OIDCMappingField) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrgIDPOIDCConfigRequest {
    return new UpdateOrgIDPOIDCConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrgIDPOIDCConfigRequest {
    return new UpdateOrgIDPOIDCConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrgIDPOIDCConfigRequest {
    return new UpdateOrgIDPOIDCConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrgIDPOIDCConfigRequest | PlainMessage<UpdateOrgIDPOIDCConfigRequest> | undefined, b: UpdateOrgIDPOIDCConfigRequest | PlainMessage<UpdateOrgIDPOIDCConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOrgIDPOIDCConfigRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateOrgIDPOIDCConfigResponse
 */
export class UpdateOrgIDPOIDCConfigResponse extends Message<UpdateOrgIDPOIDCConfigResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateOrgIDPOIDCConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateOrgIDPOIDCConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrgIDPOIDCConfigResponse {
    return new UpdateOrgIDPOIDCConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrgIDPOIDCConfigResponse {
    return new UpdateOrgIDPOIDCConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrgIDPOIDCConfigResponse {
    return new UpdateOrgIDPOIDCConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrgIDPOIDCConfigResponse | PlainMessage<UpdateOrgIDPOIDCConfigResponse> | undefined, b: UpdateOrgIDPOIDCConfigResponse | PlainMessage<UpdateOrgIDPOIDCConfigResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOrgIDPOIDCConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateOrgIDPJWTConfigRequest
 */
export class UpdateOrgIDPJWTConfigRequest extends Message<UpdateOrgIDPJWTConfigRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  /**
   * @generated from field: string jwt_endpoint = 2;
   */
  jwtEndpoint = "";

  /**
   * @generated from field: string issuer = 3;
   */
  issuer = "";

  /**
   * @generated from field: string keys_endpoint = 4;
   */
  keysEndpoint = "";

  /**
   * @generated from field: string header_name = 5;
   */
  headerName = "";

  constructor(data?: PartialMessage<UpdateOrgIDPJWTConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateOrgIDPJWTConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "jwt_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "keys_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "header_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrgIDPJWTConfigRequest {
    return new UpdateOrgIDPJWTConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrgIDPJWTConfigRequest {
    return new UpdateOrgIDPJWTConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrgIDPJWTConfigRequest {
    return new UpdateOrgIDPJWTConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrgIDPJWTConfigRequest | PlainMessage<UpdateOrgIDPJWTConfigRequest> | undefined, b: UpdateOrgIDPJWTConfigRequest | PlainMessage<UpdateOrgIDPJWTConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOrgIDPJWTConfigRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateOrgIDPJWTConfigResponse
 */
export class UpdateOrgIDPJWTConfigResponse extends Message<UpdateOrgIDPJWTConfigResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateOrgIDPJWTConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateOrgIDPJWTConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrgIDPJWTConfigResponse {
    return new UpdateOrgIDPJWTConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrgIDPJWTConfigResponse {
    return new UpdateOrgIDPJWTConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrgIDPJWTConfigResponse {
    return new UpdateOrgIDPJWTConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrgIDPJWTConfigResponse | PlainMessage<UpdateOrgIDPJWTConfigResponse> | undefined, b: UpdateOrgIDPJWTConfigResponse | PlainMessage<UpdateOrgIDPJWTConfigResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOrgIDPJWTConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProvidersRequest
 */
export class ListProvidersRequest extends Message<ListProvidersRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.management.v1.ProviderQuery queries = 2;
   */
  queries: ProviderQuery[] = [];

  constructor(data?: PartialMessage<ListProvidersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProvidersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: ProviderQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProvidersRequest {
    return new ListProvidersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProvidersRequest {
    return new ListProvidersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProvidersRequest {
    return new ListProvidersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListProvidersRequest | PlainMessage<ListProvidersRequest> | undefined, b: ListProvidersRequest | PlainMessage<ListProvidersRequest> | undefined): boolean {
    return proto3.util.equals(ListProvidersRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ProviderQuery
 */
export class ProviderQuery extends Message<ProviderQuery> {
  /**
   * @generated from oneof zitadel.management.v1.ProviderQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.idp.v1.IDPIDQuery idp_id_query = 1;
     */
    value: IDPIDQuery;
    case: "idpIdQuery";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.IDPNameQuery idp_name_query = 2;
     */
    value: IDPNameQuery;
    case: "idpNameQuery";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.IDPOwnerTypeQuery owner_type_query = 3;
     */
    value: IDPOwnerTypeQuery;
    case: "ownerTypeQuery";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ProviderQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ProviderQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id_query", kind: "message", T: IDPIDQuery, oneof: "query" },
    { no: 2, name: "idp_name_query", kind: "message", T: IDPNameQuery, oneof: "query" },
    { no: 3, name: "owner_type_query", kind: "message", T: IDPOwnerTypeQuery, oneof: "query" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProviderQuery {
    return new ProviderQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProviderQuery {
    return new ProviderQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProviderQuery {
    return new ProviderQuery().fromJsonString(jsonString, options);
  }

  static equals(a: ProviderQuery | PlainMessage<ProviderQuery> | undefined, b: ProviderQuery | PlainMessage<ProviderQuery> | undefined): boolean {
    return proto3.util.equals(ProviderQuery, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListProvidersResponse
 */
export class ListProvidersResponse extends Message<ListProvidersResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.idp.v1.Provider result = 2;
   */
  result: Provider[] = [];

  constructor(data?: PartialMessage<ListProvidersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListProvidersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Provider, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProvidersResponse {
    return new ListProvidersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProvidersResponse {
    return new ListProvidersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProvidersResponse {
    return new ListProvidersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProvidersResponse | PlainMessage<ListProvidersResponse> | undefined, b: ListProvidersResponse | PlainMessage<ListProvidersResponse> | undefined): boolean {
    return proto3.util.equals(ListProvidersResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetProviderByIDRequest
 */
export class GetProviderByIDRequest extends Message<GetProviderByIDRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetProviderByIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetProviderByIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProviderByIDRequest {
    return new GetProviderByIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProviderByIDRequest {
    return new GetProviderByIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProviderByIDRequest {
    return new GetProviderByIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetProviderByIDRequest | PlainMessage<GetProviderByIDRequest> | undefined, b: GetProviderByIDRequest | PlainMessage<GetProviderByIDRequest> | undefined): boolean {
    return proto3.util.equals(GetProviderByIDRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetProviderByIDResponse
 */
export class GetProviderByIDResponse extends Message<GetProviderByIDResponse> {
  /**
   * @generated from field: zitadel.idp.v1.Provider idp = 1;
   */
  idp?: Provider;

  constructor(data?: PartialMessage<GetProviderByIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetProviderByIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp", kind: "message", T: Provider },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProviderByIDResponse {
    return new GetProviderByIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProviderByIDResponse {
    return new GetProviderByIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProviderByIDResponse {
    return new GetProviderByIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetProviderByIDResponse | PlainMessage<GetProviderByIDResponse> | undefined, b: GetProviderByIDResponse | PlainMessage<GetProviderByIDResponse> | undefined): boolean {
    return proto3.util.equals(GetProviderByIDResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGenericOAuthProviderRequest
 */
export class AddGenericOAuthProviderRequest extends Message<AddGenericOAuthProviderRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  /**
   * @generated from field: string authorization_endpoint = 4;
   */
  authorizationEndpoint = "";

  /**
   * @generated from field: string token_endpoint = 5;
   */
  tokenEndpoint = "";

  /**
   * @generated from field: string user_endpoint = 6;
   */
  userEndpoint = "";

  /**
   * @generated from field: repeated string scopes = 7;
   */
  scopes: string[] = [];

  /**
   * identifying attribute of the user in the response of the user_endpoint
   *
   * @generated from field: string id_attribute = 8;
   */
  idAttribute = "";

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 9;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddGenericOAuthProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGenericOAuthProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "authorization_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "token_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "user_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "id_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGenericOAuthProviderRequest {
    return new AddGenericOAuthProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGenericOAuthProviderRequest {
    return new AddGenericOAuthProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGenericOAuthProviderRequest {
    return new AddGenericOAuthProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGenericOAuthProviderRequest | PlainMessage<AddGenericOAuthProviderRequest> | undefined, b: AddGenericOAuthProviderRequest | PlainMessage<AddGenericOAuthProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGenericOAuthProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGenericOAuthProviderResponse
 */
export class AddGenericOAuthProviderResponse extends Message<AddGenericOAuthProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGenericOAuthProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGenericOAuthProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGenericOAuthProviderResponse {
    return new AddGenericOAuthProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGenericOAuthProviderResponse {
    return new AddGenericOAuthProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGenericOAuthProviderResponse {
    return new AddGenericOAuthProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGenericOAuthProviderResponse | PlainMessage<AddGenericOAuthProviderResponse> | undefined, b: AddGenericOAuthProviderResponse | PlainMessage<AddGenericOAuthProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGenericOAuthProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGenericOAuthProviderRequest
 */
export class UpdateGenericOAuthProviderRequest extends Message<UpdateGenericOAuthProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: string authorization_endpoint = 5;
   */
  authorizationEndpoint = "";

  /**
   * @generated from field: string token_endpoint = 6;
   */
  tokenEndpoint = "";

  /**
   * @generated from field: string user_endpoint = 7;
   */
  userEndpoint = "";

  /**
   * @generated from field: repeated string scopes = 8;
   */
  scopes: string[] = [];

  /**
   * identifying attribute of the user in the response of the user_endpoint
   *
   * @generated from field: string id_attribute = 9;
   */
  idAttribute = "";

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 10;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateGenericOAuthProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGenericOAuthProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "authorization_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "token_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "user_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "id_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGenericOAuthProviderRequest {
    return new UpdateGenericOAuthProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGenericOAuthProviderRequest {
    return new UpdateGenericOAuthProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGenericOAuthProviderRequest {
    return new UpdateGenericOAuthProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGenericOAuthProviderRequest | PlainMessage<UpdateGenericOAuthProviderRequest> | undefined, b: UpdateGenericOAuthProviderRequest | PlainMessage<UpdateGenericOAuthProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGenericOAuthProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGenericOAuthProviderResponse
 */
export class UpdateGenericOAuthProviderResponse extends Message<UpdateGenericOAuthProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGenericOAuthProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGenericOAuthProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGenericOAuthProviderResponse {
    return new UpdateGenericOAuthProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGenericOAuthProviderResponse {
    return new UpdateGenericOAuthProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGenericOAuthProviderResponse {
    return new UpdateGenericOAuthProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGenericOAuthProviderResponse | PlainMessage<UpdateGenericOAuthProviderResponse> | undefined, b: UpdateGenericOAuthProviderResponse | PlainMessage<UpdateGenericOAuthProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGenericOAuthProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGenericOIDCProviderRequest
 */
export class AddGenericOIDCProviderRequest extends Message<AddGenericOIDCProviderRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string issuer = 2;
   */
  issuer = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  /**
   * @generated from field: bool is_id_token_mapping = 7;
   */
  isIdTokenMapping = false;

  constructor(data?: PartialMessage<AddGenericOIDCProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGenericOIDCProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "provider_options", kind: "message", T: Options },
    { no: 7, name: "is_id_token_mapping", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGenericOIDCProviderRequest {
    return new AddGenericOIDCProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGenericOIDCProviderRequest {
    return new AddGenericOIDCProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGenericOIDCProviderRequest {
    return new AddGenericOIDCProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGenericOIDCProviderRequest | PlainMessage<AddGenericOIDCProviderRequest> | undefined, b: AddGenericOIDCProviderRequest | PlainMessage<AddGenericOIDCProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGenericOIDCProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGenericOIDCProviderResponse
 */
export class AddGenericOIDCProviderResponse extends Message<AddGenericOIDCProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGenericOIDCProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGenericOIDCProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGenericOIDCProviderResponse {
    return new AddGenericOIDCProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGenericOIDCProviderResponse {
    return new AddGenericOIDCProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGenericOIDCProviderResponse {
    return new AddGenericOIDCProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGenericOIDCProviderResponse | PlainMessage<AddGenericOIDCProviderResponse> | undefined, b: AddGenericOIDCProviderResponse | PlainMessage<AddGenericOIDCProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGenericOIDCProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGenericOIDCProviderRequest
 */
export class UpdateGenericOIDCProviderRequest extends Message<UpdateGenericOIDCProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string issuer = 3;
   */
  issuer = "";

  /**
   * @generated from field: string client_id = 4;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 5;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 6;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 7;
   */
  providerOptions?: Options;

  /**
   * @generated from field: bool is_id_token_mapping = 8;
   */
  isIdTokenMapping = false;

  constructor(data?: PartialMessage<UpdateGenericOIDCProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGenericOIDCProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "provider_options", kind: "message", T: Options },
    { no: 8, name: "is_id_token_mapping", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGenericOIDCProviderRequest {
    return new UpdateGenericOIDCProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGenericOIDCProviderRequest {
    return new UpdateGenericOIDCProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGenericOIDCProviderRequest {
    return new UpdateGenericOIDCProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGenericOIDCProviderRequest | PlainMessage<UpdateGenericOIDCProviderRequest> | undefined, b: UpdateGenericOIDCProviderRequest | PlainMessage<UpdateGenericOIDCProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGenericOIDCProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGenericOIDCProviderResponse
 */
export class UpdateGenericOIDCProviderResponse extends Message<UpdateGenericOIDCProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGenericOIDCProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGenericOIDCProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGenericOIDCProviderResponse {
    return new UpdateGenericOIDCProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGenericOIDCProviderResponse {
    return new UpdateGenericOIDCProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGenericOIDCProviderResponse {
    return new UpdateGenericOIDCProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGenericOIDCProviderResponse | PlainMessage<UpdateGenericOIDCProviderResponse> | undefined, b: UpdateGenericOIDCProviderResponse | PlainMessage<UpdateGenericOIDCProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGenericOIDCProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.MigrateGenericOIDCProviderRequest
 */
export class MigrateGenericOIDCProviderRequest extends Message<MigrateGenericOIDCProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from oneof zitadel.management.v1.MigrateGenericOIDCProviderRequest.template
   */
  template: {
    /**
     * @generated from field: zitadel.management.v1.AddAzureADProviderRequest azure = 2;
     */
    value: AddAzureADProviderRequest;
    case: "azure";
  } | {
    /**
     * @generated from field: zitadel.management.v1.AddGoogleProviderRequest google = 3;
     */
    value: AddGoogleProviderRequest;
    case: "google";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MigrateGenericOIDCProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.MigrateGenericOIDCProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "azure", kind: "message", T: AddAzureADProviderRequest, oneof: "template" },
    { no: 3, name: "google", kind: "message", T: AddGoogleProviderRequest, oneof: "template" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MigrateGenericOIDCProviderRequest {
    return new MigrateGenericOIDCProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MigrateGenericOIDCProviderRequest {
    return new MigrateGenericOIDCProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MigrateGenericOIDCProviderRequest {
    return new MigrateGenericOIDCProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: MigrateGenericOIDCProviderRequest | PlainMessage<MigrateGenericOIDCProviderRequest> | undefined, b: MigrateGenericOIDCProviderRequest | PlainMessage<MigrateGenericOIDCProviderRequest> | undefined): boolean {
    return proto3.util.equals(MigrateGenericOIDCProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.MigrateGenericOIDCProviderResponse
 */
export class MigrateGenericOIDCProviderResponse extends Message<MigrateGenericOIDCProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<MigrateGenericOIDCProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.MigrateGenericOIDCProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MigrateGenericOIDCProviderResponse {
    return new MigrateGenericOIDCProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MigrateGenericOIDCProviderResponse {
    return new MigrateGenericOIDCProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MigrateGenericOIDCProviderResponse {
    return new MigrateGenericOIDCProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MigrateGenericOIDCProviderResponse | PlainMessage<MigrateGenericOIDCProviderResponse> | undefined, b: MigrateGenericOIDCProviderResponse | PlainMessage<MigrateGenericOIDCProviderResponse> | undefined): boolean {
    return proto3.util.equals(MigrateGenericOIDCProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddJWTProviderRequest
 */
export class AddJWTProviderRequest extends Message<AddJWTProviderRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string issuer = 2;
   */
  issuer = "";

  /**
   * @generated from field: string jwt_endpoint = 3;
   */
  jwtEndpoint = "";

  /**
   * @generated from field: string keys_endpoint = 4;
   */
  keysEndpoint = "";

  /**
   * @generated from field: string header_name = 5;
   */
  headerName = "";

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddJWTProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddJWTProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "jwt_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "keys_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "header_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddJWTProviderRequest {
    return new AddJWTProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddJWTProviderRequest {
    return new AddJWTProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddJWTProviderRequest {
    return new AddJWTProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddJWTProviderRequest | PlainMessage<AddJWTProviderRequest> | undefined, b: AddJWTProviderRequest | PlainMessage<AddJWTProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddJWTProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddJWTProviderResponse
 */
export class AddJWTProviderResponse extends Message<AddJWTProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddJWTProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddJWTProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddJWTProviderResponse {
    return new AddJWTProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddJWTProviderResponse {
    return new AddJWTProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddJWTProviderResponse {
    return new AddJWTProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddJWTProviderResponse | PlainMessage<AddJWTProviderResponse> | undefined, b: AddJWTProviderResponse | PlainMessage<AddJWTProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddJWTProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateJWTProviderRequest
 */
export class UpdateJWTProviderRequest extends Message<UpdateJWTProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string issuer = 3;
   */
  issuer = "";

  /**
   * @generated from field: string jwt_endpoint = 4;
   */
  jwtEndpoint = "";

  /**
   * @generated from field: string keys_endpoint = 5;
   */
  keysEndpoint = "";

  /**
   * @generated from field: string header_name = 6;
   */
  headerName = "";

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 7;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateJWTProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateJWTProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "jwt_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "keys_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "header_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateJWTProviderRequest {
    return new UpdateJWTProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateJWTProviderRequest {
    return new UpdateJWTProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateJWTProviderRequest {
    return new UpdateJWTProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateJWTProviderRequest | PlainMessage<UpdateJWTProviderRequest> | undefined, b: UpdateJWTProviderRequest | PlainMessage<UpdateJWTProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateJWTProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateJWTProviderResponse
 */
export class UpdateJWTProviderResponse extends Message<UpdateJWTProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateJWTProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateJWTProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateJWTProviderResponse {
    return new UpdateJWTProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateJWTProviderResponse {
    return new UpdateJWTProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateJWTProviderResponse {
    return new UpdateJWTProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateJWTProviderResponse | PlainMessage<UpdateJWTProviderResponse> | undefined, b: UpdateJWTProviderResponse | PlainMessage<UpdateJWTProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateJWTProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddAzureADProviderRequest
 */
export class AddAzureADProviderRequest extends Message<AddAzureADProviderRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  /**
   * if not provided the `common` tenant will be used
   *
   * @generated from field: zitadel.idp.v1.AzureADTenant tenant = 4;
   */
  tenant?: AzureADTenant;

  /**
   * @generated from field: bool email_verified = 5;
   */
  emailVerified = false;

  /**
   * @generated from field: repeated string scopes = 6;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 7;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddAzureADProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddAzureADProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "tenant", kind: "message", T: AzureADTenant },
    { no: 5, name: "email_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddAzureADProviderRequest {
    return new AddAzureADProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddAzureADProviderRequest {
    return new AddAzureADProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddAzureADProviderRequest {
    return new AddAzureADProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddAzureADProviderRequest | PlainMessage<AddAzureADProviderRequest> | undefined, b: AddAzureADProviderRequest | PlainMessage<AddAzureADProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddAzureADProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddAzureADProviderResponse
 */
export class AddAzureADProviderResponse extends Message<AddAzureADProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddAzureADProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddAzureADProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddAzureADProviderResponse {
    return new AddAzureADProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddAzureADProviderResponse {
    return new AddAzureADProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddAzureADProviderResponse {
    return new AddAzureADProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddAzureADProviderResponse | PlainMessage<AddAzureADProviderResponse> | undefined, b: AddAzureADProviderResponse | PlainMessage<AddAzureADProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddAzureADProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateAzureADProviderRequest
 */
export class UpdateAzureADProviderRequest extends Message<UpdateAzureADProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * if not provided the `common` tenant will be used
   *
   * @generated from field: zitadel.idp.v1.AzureADTenant tenant = 5;
   */
  tenant?: AzureADTenant;

  /**
   * @generated from field: bool email_verified = 6;
   */
  emailVerified = false;

  /**
   * @generated from field: repeated string scopes = 7;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 8;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateAzureADProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateAzureADProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "tenant", kind: "message", T: AzureADTenant },
    { no: 6, name: "email_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAzureADProviderRequest {
    return new UpdateAzureADProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAzureADProviderRequest {
    return new UpdateAzureADProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAzureADProviderRequest {
    return new UpdateAzureADProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAzureADProviderRequest | PlainMessage<UpdateAzureADProviderRequest> | undefined, b: UpdateAzureADProviderRequest | PlainMessage<UpdateAzureADProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAzureADProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateAzureADProviderResponse
 */
export class UpdateAzureADProviderResponse extends Message<UpdateAzureADProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateAzureADProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateAzureADProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAzureADProviderResponse {
    return new UpdateAzureADProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAzureADProviderResponse {
    return new UpdateAzureADProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAzureADProviderResponse {
    return new UpdateAzureADProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAzureADProviderResponse | PlainMessage<UpdateAzureADProviderResponse> | undefined, b: UpdateAzureADProviderResponse | PlainMessage<UpdateAzureADProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateAzureADProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGitHubProviderRequest
 */
export class AddGitHubProviderRequest extends Message<AddGitHubProviderRequest> {
  /**
   * GitHub will be used as default, if no name is provided
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 4;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 5;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddGitHubProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGitHubProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitHubProviderRequest {
    return new AddGitHubProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitHubProviderRequest {
    return new AddGitHubProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitHubProviderRequest {
    return new AddGitHubProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitHubProviderRequest | PlainMessage<AddGitHubProviderRequest> | undefined, b: AddGitHubProviderRequest | PlainMessage<AddGitHubProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGitHubProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGitHubProviderResponse
 */
export class AddGitHubProviderResponse extends Message<AddGitHubProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGitHubProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGitHubProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitHubProviderResponse {
    return new AddGitHubProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitHubProviderResponse {
    return new AddGitHubProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitHubProviderResponse {
    return new AddGitHubProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitHubProviderResponse | PlainMessage<AddGitHubProviderResponse> | undefined, b: AddGitHubProviderResponse | PlainMessage<AddGitHubProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGitHubProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGitHubProviderRequest
 */
export class UpdateGitHubProviderRequest extends Message<UpdateGitHubProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateGitHubProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGitHubProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitHubProviderRequest {
    return new UpdateGitHubProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitHubProviderRequest {
    return new UpdateGitHubProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitHubProviderRequest {
    return new UpdateGitHubProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitHubProviderRequest | PlainMessage<UpdateGitHubProviderRequest> | undefined, b: UpdateGitHubProviderRequest | PlainMessage<UpdateGitHubProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGitHubProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGitHubProviderResponse
 */
export class UpdateGitHubProviderResponse extends Message<UpdateGitHubProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGitHubProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGitHubProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitHubProviderResponse {
    return new UpdateGitHubProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitHubProviderResponse {
    return new UpdateGitHubProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitHubProviderResponse {
    return new UpdateGitHubProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitHubProviderResponse | PlainMessage<UpdateGitHubProviderResponse> | undefined, b: UpdateGitHubProviderResponse | PlainMessage<UpdateGitHubProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGitHubProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGitHubEnterpriseServerProviderRequest
 */
export class AddGitHubEnterpriseServerProviderRequest extends Message<AddGitHubEnterpriseServerProviderRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  /**
   * @generated from field: string authorization_endpoint = 4;
   */
  authorizationEndpoint = "";

  /**
   * @generated from field: string token_endpoint = 5;
   */
  tokenEndpoint = "";

  /**
   * @generated from field: string user_endpoint = 6;
   */
  userEndpoint = "";

  /**
   * @generated from field: repeated string scopes = 7;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 8;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddGitHubEnterpriseServerProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGitHubEnterpriseServerProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "authorization_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "token_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "user_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitHubEnterpriseServerProviderRequest {
    return new AddGitHubEnterpriseServerProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitHubEnterpriseServerProviderRequest {
    return new AddGitHubEnterpriseServerProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitHubEnterpriseServerProviderRequest {
    return new AddGitHubEnterpriseServerProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitHubEnterpriseServerProviderRequest | PlainMessage<AddGitHubEnterpriseServerProviderRequest> | undefined, b: AddGitHubEnterpriseServerProviderRequest | PlainMessage<AddGitHubEnterpriseServerProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGitHubEnterpriseServerProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGitHubEnterpriseServerProviderResponse
 */
export class AddGitHubEnterpriseServerProviderResponse extends Message<AddGitHubEnterpriseServerProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGitHubEnterpriseServerProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGitHubEnterpriseServerProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitHubEnterpriseServerProviderResponse {
    return new AddGitHubEnterpriseServerProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitHubEnterpriseServerProviderResponse {
    return new AddGitHubEnterpriseServerProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitHubEnterpriseServerProviderResponse {
    return new AddGitHubEnterpriseServerProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitHubEnterpriseServerProviderResponse | PlainMessage<AddGitHubEnterpriseServerProviderResponse> | undefined, b: AddGitHubEnterpriseServerProviderResponse | PlainMessage<AddGitHubEnterpriseServerProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGitHubEnterpriseServerProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGitHubEnterpriseServerProviderRequest
 */
export class UpdateGitHubEnterpriseServerProviderRequest extends Message<UpdateGitHubEnterpriseServerProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: string authorization_endpoint = 5;
   */
  authorizationEndpoint = "";

  /**
   * @generated from field: string token_endpoint = 6;
   */
  tokenEndpoint = "";

  /**
   * @generated from field: string user_endpoint = 7;
   */
  userEndpoint = "";

  /**
   * @generated from field: repeated string scopes = 8;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 9;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateGitHubEnterpriseServerProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGitHubEnterpriseServerProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "authorization_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "token_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "user_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitHubEnterpriseServerProviderRequest {
    return new UpdateGitHubEnterpriseServerProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitHubEnterpriseServerProviderRequest {
    return new UpdateGitHubEnterpriseServerProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitHubEnterpriseServerProviderRequest {
    return new UpdateGitHubEnterpriseServerProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitHubEnterpriseServerProviderRequest | PlainMessage<UpdateGitHubEnterpriseServerProviderRequest> | undefined, b: UpdateGitHubEnterpriseServerProviderRequest | PlainMessage<UpdateGitHubEnterpriseServerProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGitHubEnterpriseServerProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGitHubEnterpriseServerProviderResponse
 */
export class UpdateGitHubEnterpriseServerProviderResponse extends Message<UpdateGitHubEnterpriseServerProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGitHubEnterpriseServerProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGitHubEnterpriseServerProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitHubEnterpriseServerProviderResponse {
    return new UpdateGitHubEnterpriseServerProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitHubEnterpriseServerProviderResponse {
    return new UpdateGitHubEnterpriseServerProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitHubEnterpriseServerProviderResponse {
    return new UpdateGitHubEnterpriseServerProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitHubEnterpriseServerProviderResponse | PlainMessage<UpdateGitHubEnterpriseServerProviderResponse> | undefined, b: UpdateGitHubEnterpriseServerProviderResponse | PlainMessage<UpdateGitHubEnterpriseServerProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGitHubEnterpriseServerProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGitLabProviderRequest
 */
export class AddGitLabProviderRequest extends Message<AddGitLabProviderRequest> {
  /**
   * GitLab will be used as default, if no name is provided
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 4;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 5;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddGitLabProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGitLabProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitLabProviderRequest {
    return new AddGitLabProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitLabProviderRequest {
    return new AddGitLabProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitLabProviderRequest {
    return new AddGitLabProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitLabProviderRequest | PlainMessage<AddGitLabProviderRequest> | undefined, b: AddGitLabProviderRequest | PlainMessage<AddGitLabProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGitLabProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGitLabProviderResponse
 */
export class AddGitLabProviderResponse extends Message<AddGitLabProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGitLabProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGitLabProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitLabProviderResponse {
    return new AddGitLabProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitLabProviderResponse {
    return new AddGitLabProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitLabProviderResponse {
    return new AddGitLabProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitLabProviderResponse | PlainMessage<AddGitLabProviderResponse> | undefined, b: AddGitLabProviderResponse | PlainMessage<AddGitLabProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGitLabProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGitLabProviderRequest
 */
export class UpdateGitLabProviderRequest extends Message<UpdateGitLabProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateGitLabProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGitLabProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitLabProviderRequest {
    return new UpdateGitLabProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitLabProviderRequest {
    return new UpdateGitLabProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitLabProviderRequest {
    return new UpdateGitLabProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitLabProviderRequest | PlainMessage<UpdateGitLabProviderRequest> | undefined, b: UpdateGitLabProviderRequest | PlainMessage<UpdateGitLabProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGitLabProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGitLabProviderResponse
 */
export class UpdateGitLabProviderResponse extends Message<UpdateGitLabProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGitLabProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGitLabProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitLabProviderResponse {
    return new UpdateGitLabProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitLabProviderResponse {
    return new UpdateGitLabProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitLabProviderResponse {
    return new UpdateGitLabProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitLabProviderResponse | PlainMessage<UpdateGitLabProviderResponse> | undefined, b: UpdateGitLabProviderResponse | PlainMessage<UpdateGitLabProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGitLabProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGitLabSelfHostedProviderRequest
 */
export class AddGitLabSelfHostedProviderRequest extends Message<AddGitLabSelfHostedProviderRequest> {
  /**
   * @generated from field: string issuer = 1;
   */
  issuer = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddGitLabSelfHostedProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGitLabSelfHostedProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitLabSelfHostedProviderRequest {
    return new AddGitLabSelfHostedProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitLabSelfHostedProviderRequest {
    return new AddGitLabSelfHostedProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitLabSelfHostedProviderRequest {
    return new AddGitLabSelfHostedProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitLabSelfHostedProviderRequest | PlainMessage<AddGitLabSelfHostedProviderRequest> | undefined, b: AddGitLabSelfHostedProviderRequest | PlainMessage<AddGitLabSelfHostedProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGitLabSelfHostedProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGitLabSelfHostedProviderResponse
 */
export class AddGitLabSelfHostedProviderResponse extends Message<AddGitLabSelfHostedProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGitLabSelfHostedProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGitLabSelfHostedProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitLabSelfHostedProviderResponse {
    return new AddGitLabSelfHostedProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitLabSelfHostedProviderResponse {
    return new AddGitLabSelfHostedProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitLabSelfHostedProviderResponse {
    return new AddGitLabSelfHostedProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitLabSelfHostedProviderResponse | PlainMessage<AddGitLabSelfHostedProviderResponse> | undefined, b: AddGitLabSelfHostedProviderResponse | PlainMessage<AddGitLabSelfHostedProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGitLabSelfHostedProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGitLabSelfHostedProviderRequest
 */
export class UpdateGitLabSelfHostedProviderRequest extends Message<UpdateGitLabSelfHostedProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string issuer = 2;
   */
  issuer = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string client_id = 4;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 5;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 6;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 7;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateGitLabSelfHostedProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGitLabSelfHostedProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitLabSelfHostedProviderRequest {
    return new UpdateGitLabSelfHostedProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitLabSelfHostedProviderRequest {
    return new UpdateGitLabSelfHostedProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitLabSelfHostedProviderRequest {
    return new UpdateGitLabSelfHostedProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitLabSelfHostedProviderRequest | PlainMessage<UpdateGitLabSelfHostedProviderRequest> | undefined, b: UpdateGitLabSelfHostedProviderRequest | PlainMessage<UpdateGitLabSelfHostedProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGitLabSelfHostedProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGitLabSelfHostedProviderResponse
 */
export class UpdateGitLabSelfHostedProviderResponse extends Message<UpdateGitLabSelfHostedProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGitLabSelfHostedProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGitLabSelfHostedProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitLabSelfHostedProviderResponse {
    return new UpdateGitLabSelfHostedProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitLabSelfHostedProviderResponse {
    return new UpdateGitLabSelfHostedProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitLabSelfHostedProviderResponse {
    return new UpdateGitLabSelfHostedProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitLabSelfHostedProviderResponse | PlainMessage<UpdateGitLabSelfHostedProviderResponse> | undefined, b: UpdateGitLabSelfHostedProviderResponse | PlainMessage<UpdateGitLabSelfHostedProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGitLabSelfHostedProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGoogleProviderRequest
 */
export class AddGoogleProviderRequest extends Message<AddGoogleProviderRequest> {
  /**
   * Google will be used as default, if no name is provided
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 4;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 5;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddGoogleProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGoogleProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGoogleProviderRequest {
    return new AddGoogleProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGoogleProviderRequest {
    return new AddGoogleProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGoogleProviderRequest {
    return new AddGoogleProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGoogleProviderRequest | PlainMessage<AddGoogleProviderRequest> | undefined, b: AddGoogleProviderRequest | PlainMessage<AddGoogleProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGoogleProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddGoogleProviderResponse
 */
export class AddGoogleProviderResponse extends Message<AddGoogleProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGoogleProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddGoogleProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGoogleProviderResponse {
    return new AddGoogleProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGoogleProviderResponse {
    return new AddGoogleProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGoogleProviderResponse {
    return new AddGoogleProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGoogleProviderResponse | PlainMessage<AddGoogleProviderResponse> | undefined, b: AddGoogleProviderResponse | PlainMessage<AddGoogleProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGoogleProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGoogleProviderRequest
 */
export class UpdateGoogleProviderRequest extends Message<UpdateGoogleProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateGoogleProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGoogleProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGoogleProviderRequest {
    return new UpdateGoogleProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGoogleProviderRequest {
    return new UpdateGoogleProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGoogleProviderRequest {
    return new UpdateGoogleProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGoogleProviderRequest | PlainMessage<UpdateGoogleProviderRequest> | undefined, b: UpdateGoogleProviderRequest | PlainMessage<UpdateGoogleProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGoogleProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateGoogleProviderResponse
 */
export class UpdateGoogleProviderResponse extends Message<UpdateGoogleProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGoogleProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateGoogleProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGoogleProviderResponse {
    return new UpdateGoogleProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGoogleProviderResponse {
    return new UpdateGoogleProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGoogleProviderResponse {
    return new UpdateGoogleProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGoogleProviderResponse | PlainMessage<UpdateGoogleProviderResponse> | undefined, b: UpdateGoogleProviderResponse | PlainMessage<UpdateGoogleProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGoogleProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddLDAPProviderRequest
 */
export class AddLDAPProviderRequest extends Message<AddLDAPProviderRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: repeated string servers = 2;
   */
  servers: string[] = [];

  /**
   * @generated from field: bool start_tls = 3;
   */
  startTls = false;

  /**
   * @generated from field: string base_dn = 4;
   */
  baseDn = "";

  /**
   * @generated from field: string bind_dn = 5;
   */
  bindDn = "";

  /**
   * @generated from field: string bind_password = 6;
   */
  bindPassword = "";

  /**
   * @generated from field: string user_base = 7;
   */
  userBase = "";

  /**
   * @generated from field: repeated string user_object_classes = 8;
   */
  userObjectClasses: string[] = [];

  /**
   * @generated from field: repeated string user_filters = 9;
   */
  userFilters: string[] = [];

  /**
   * @generated from field: google.protobuf.Duration timeout = 10;
   */
  timeout?: Duration;

  /**
   * @generated from field: zitadel.idp.v1.LDAPAttributes attributes = 11;
   */
  attributes?: LDAPAttributes;

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 12;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddLDAPProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddLDAPProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "servers", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "start_tls", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "base_dn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "bind_dn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "bind_password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "user_base", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "user_object_classes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "user_filters", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 10, name: "timeout", kind: "message", T: Duration },
    { no: 11, name: "attributes", kind: "message", T: LDAPAttributes },
    { no: 12, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddLDAPProviderRequest {
    return new AddLDAPProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddLDAPProviderRequest {
    return new AddLDAPProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddLDAPProviderRequest {
    return new AddLDAPProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddLDAPProviderRequest | PlainMessage<AddLDAPProviderRequest> | undefined, b: AddLDAPProviderRequest | PlainMessage<AddLDAPProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddLDAPProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddLDAPProviderResponse
 */
export class AddLDAPProviderResponse extends Message<AddLDAPProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddLDAPProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddLDAPProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddLDAPProviderResponse {
    return new AddLDAPProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddLDAPProviderResponse {
    return new AddLDAPProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddLDAPProviderResponse {
    return new AddLDAPProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddLDAPProviderResponse | PlainMessage<AddLDAPProviderResponse> | undefined, b: AddLDAPProviderResponse | PlainMessage<AddLDAPProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddLDAPProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateLDAPProviderRequest
 */
export class UpdateLDAPProviderRequest extends Message<UpdateLDAPProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: repeated string servers = 3;
   */
  servers: string[] = [];

  /**
   * @generated from field: bool start_tls = 4;
   */
  startTls = false;

  /**
   * @generated from field: string base_dn = 5;
   */
  baseDn = "";

  /**
   * @generated from field: string bind_dn = 6;
   */
  bindDn = "";

  /**
   * @generated from field: string bind_password = 7;
   */
  bindPassword = "";

  /**
   * @generated from field: string user_base = 8;
   */
  userBase = "";

  /**
   * @generated from field: repeated string user_object_classes = 9;
   */
  userObjectClasses: string[] = [];

  /**
   * @generated from field: repeated string user_filters = 10;
   */
  userFilters: string[] = [];

  /**
   * @generated from field: google.protobuf.Duration timeout = 11;
   */
  timeout?: Duration;

  /**
   * @generated from field: zitadel.idp.v1.LDAPAttributes attributes = 12;
   */
  attributes?: LDAPAttributes;

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 13;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateLDAPProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateLDAPProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "servers", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "start_tls", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "base_dn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "bind_dn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "bind_password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "user_base", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "user_object_classes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 10, name: "user_filters", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 11, name: "timeout", kind: "message", T: Duration },
    { no: 12, name: "attributes", kind: "message", T: LDAPAttributes },
    { no: 13, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLDAPProviderRequest {
    return new UpdateLDAPProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLDAPProviderRequest {
    return new UpdateLDAPProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLDAPProviderRequest {
    return new UpdateLDAPProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLDAPProviderRequest | PlainMessage<UpdateLDAPProviderRequest> | undefined, b: UpdateLDAPProviderRequest | PlainMessage<UpdateLDAPProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateLDAPProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateLDAPProviderResponse
 */
export class UpdateLDAPProviderResponse extends Message<UpdateLDAPProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateLDAPProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateLDAPProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLDAPProviderResponse {
    return new UpdateLDAPProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLDAPProviderResponse {
    return new UpdateLDAPProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLDAPProviderResponse {
    return new UpdateLDAPProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLDAPProviderResponse | PlainMessage<UpdateLDAPProviderResponse> | undefined, b: UpdateLDAPProviderResponse | PlainMessage<UpdateLDAPProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateLDAPProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddSAMLProviderRequest
 */
export class AddSAMLProviderRequest extends Message<AddSAMLProviderRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from oneof zitadel.management.v1.AddSAMLProviderRequest.metadata
   */
  metadata: {
    /**
     * Metadata of the SAML identity provider.
     *
     * @generated from field: bytes metadata_xml = 2;
     */
    value: Uint8Array;
    case: "metadataXml";
  } | {
    /**
     * Url to the metadata of the SAML identity provider.
     *
     * @generated from field: string metadata_url = 3;
     */
    value: string;
    case: "metadataUrl";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * Binding which defines the type of communication with the identity provider.
   *
   * @generated from field: zitadel.idp.v1.SAMLBinding binding = 4;
   */
  binding = SAMLBinding.SAML_BINDING_UNSPECIFIED;

  /**
   * Boolean which defines if the authentication requests are signed.
   *
   * @generated from field: bool with_signed_request = 5;
   */
  withSignedRequest = false;

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  /**
   * Optionally specify the `nameid-format` requested.
   *
   * @generated from field: optional zitadel.idp.v1.SAMLNameIDFormat name_id_format = 7;
   */
  nameIdFormat?: SAMLNameIDFormat;

  /**
   * Optionally specify the name of the attribute, which will be used to map the user
   * in case the nameid-format returned is `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
   *
   * @generated from field: optional string transient_mapping_attribute_name = 8;
   */
  transientMappingAttributeName?: string;

  constructor(data?: PartialMessage<AddSAMLProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddSAMLProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata_xml", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "metadata" },
    { no: 3, name: "metadata_url", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "metadata" },
    { no: 4, name: "binding", kind: "enum", T: proto3.getEnumType(SAMLBinding) },
    { no: 5, name: "with_signed_request", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "provider_options", kind: "message", T: Options },
    { no: 7, name: "name_id_format", kind: "enum", T: proto3.getEnumType(SAMLNameIDFormat), opt: true },
    { no: 8, name: "transient_mapping_attribute_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSAMLProviderRequest {
    return new AddSAMLProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSAMLProviderRequest {
    return new AddSAMLProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSAMLProviderRequest {
    return new AddSAMLProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddSAMLProviderRequest | PlainMessage<AddSAMLProviderRequest> | undefined, b: AddSAMLProviderRequest | PlainMessage<AddSAMLProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddSAMLProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddSAMLProviderResponse
 */
export class AddSAMLProviderResponse extends Message<AddSAMLProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddSAMLProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddSAMLProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSAMLProviderResponse {
    return new AddSAMLProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSAMLProviderResponse {
    return new AddSAMLProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSAMLProviderResponse {
    return new AddSAMLProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddSAMLProviderResponse | PlainMessage<AddSAMLProviderResponse> | undefined, b: AddSAMLProviderResponse | PlainMessage<AddSAMLProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddSAMLProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateSAMLProviderRequest
 */
export class UpdateSAMLProviderRequest extends Message<UpdateSAMLProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * Metadata of the SAML identity provider.
   *
   * @generated from oneof zitadel.management.v1.UpdateSAMLProviderRequest.metadata
   */
  metadata: {
    /**
     * @generated from field: bytes metadata_xml = 3;
     */
    value: Uint8Array;
    case: "metadataXml";
  } | {
    /**
     * Url to the metadata of the SAML identity provider.
     *
     * @generated from field: string metadata_url = 4;
     */
    value: string;
    case: "metadataUrl";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * Binding which defines the type of communication with the identity provider.
   *
   * @generated from field: zitadel.idp.v1.SAMLBinding binding = 5;
   */
  binding = SAMLBinding.SAML_BINDING_UNSPECIFIED;

  /**
   * Boolean which defines if the authentication requests are signed.
   *
   * @generated from field: bool with_signed_request = 6;
   */
  withSignedRequest = false;

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 7;
   */
  providerOptions?: Options;

  /**
   * Optionally specify the `nameid-format` requested.
   *
   * @generated from field: optional zitadel.idp.v1.SAMLNameIDFormat name_id_format = 8;
   */
  nameIdFormat?: SAMLNameIDFormat;

  /**
   * Optionally specify the name of the attribute, which will be used to map the user
   * in case the nameid-format returned is `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
   *
   * @generated from field: optional string transient_mapping_attribute_name = 9;
   */
  transientMappingAttributeName?: string;

  constructor(data?: PartialMessage<UpdateSAMLProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateSAMLProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "metadata_xml", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "metadata" },
    { no: 4, name: "metadata_url", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "metadata" },
    { no: 5, name: "binding", kind: "enum", T: proto3.getEnumType(SAMLBinding) },
    { no: 6, name: "with_signed_request", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "provider_options", kind: "message", T: Options },
    { no: 8, name: "name_id_format", kind: "enum", T: proto3.getEnumType(SAMLNameIDFormat), opt: true },
    { no: 9, name: "transient_mapping_attribute_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSAMLProviderRequest {
    return new UpdateSAMLProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSAMLProviderRequest {
    return new UpdateSAMLProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSAMLProviderRequest {
    return new UpdateSAMLProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSAMLProviderRequest | PlainMessage<UpdateSAMLProviderRequest> | undefined, b: UpdateSAMLProviderRequest | PlainMessage<UpdateSAMLProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateSAMLProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateSAMLProviderResponse
 */
export class UpdateSAMLProviderResponse extends Message<UpdateSAMLProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateSAMLProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateSAMLProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSAMLProviderResponse {
    return new UpdateSAMLProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSAMLProviderResponse {
    return new UpdateSAMLProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSAMLProviderResponse {
    return new UpdateSAMLProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSAMLProviderResponse | PlainMessage<UpdateSAMLProviderResponse> | undefined, b: UpdateSAMLProviderResponse | PlainMessage<UpdateSAMLProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateSAMLProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RegenerateSAMLProviderCertificateRequest
 */
export class RegenerateSAMLProviderCertificateRequest extends Message<RegenerateSAMLProviderCertificateRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<RegenerateSAMLProviderCertificateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RegenerateSAMLProviderCertificateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegenerateSAMLProviderCertificateRequest {
    return new RegenerateSAMLProviderCertificateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegenerateSAMLProviderCertificateRequest {
    return new RegenerateSAMLProviderCertificateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegenerateSAMLProviderCertificateRequest {
    return new RegenerateSAMLProviderCertificateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RegenerateSAMLProviderCertificateRequest | PlainMessage<RegenerateSAMLProviderCertificateRequest> | undefined, b: RegenerateSAMLProviderCertificateRequest | PlainMessage<RegenerateSAMLProviderCertificateRequest> | undefined): boolean {
    return proto3.util.equals(RegenerateSAMLProviderCertificateRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.RegenerateSAMLProviderCertificateResponse
 */
export class RegenerateSAMLProviderCertificateResponse extends Message<RegenerateSAMLProviderCertificateResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RegenerateSAMLProviderCertificateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.RegenerateSAMLProviderCertificateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegenerateSAMLProviderCertificateResponse {
    return new RegenerateSAMLProviderCertificateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegenerateSAMLProviderCertificateResponse {
    return new RegenerateSAMLProviderCertificateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegenerateSAMLProviderCertificateResponse {
    return new RegenerateSAMLProviderCertificateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RegenerateSAMLProviderCertificateResponse | PlainMessage<RegenerateSAMLProviderCertificateResponse> | undefined, b: RegenerateSAMLProviderCertificateResponse | PlainMessage<RegenerateSAMLProviderCertificateResponse> | undefined): boolean {
    return proto3.util.equals(RegenerateSAMLProviderCertificateResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddAppleProviderRequest
 */
export class AddAppleProviderRequest extends Message<AddAppleProviderRequest> {
  /**
   * Apple will be used as default, if no name is provided
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: string team_id = 3;
   */
  teamId = "";

  /**
   * @generated from field: string key_id = 4;
   */
  keyId = "";

  /**
   * @generated from field: bytes private_key = 5;
   */
  privateKey = new Uint8Array(0);

  /**
   * @generated from field: repeated string scopes = 6;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 7;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddAppleProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddAppleProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "team_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "private_key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 6, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddAppleProviderRequest {
    return new AddAppleProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddAppleProviderRequest {
    return new AddAppleProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddAppleProviderRequest {
    return new AddAppleProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddAppleProviderRequest | PlainMessage<AddAppleProviderRequest> | undefined, b: AddAppleProviderRequest | PlainMessage<AddAppleProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddAppleProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.AddAppleProviderResponse
 */
export class AddAppleProviderResponse extends Message<AddAppleProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddAppleProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.AddAppleProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddAppleProviderResponse {
    return new AddAppleProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddAppleProviderResponse {
    return new AddAppleProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddAppleProviderResponse {
    return new AddAppleProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddAppleProviderResponse | PlainMessage<AddAppleProviderResponse> | undefined, b: AddAppleProviderResponse | PlainMessage<AddAppleProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddAppleProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateAppleProviderRequest
 */
export class UpdateAppleProviderRequest extends Message<UpdateAppleProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * @generated from field: string team_id = 4;
   */
  teamId = "";

  /**
   * @generated from field: string key_id = 5;
   */
  keyId = "";

  /**
   * @generated from field: bytes private_key = 6;
   */
  privateKey = new Uint8Array(0);

  /**
   * @generated from field: repeated string scopes = 7;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 8;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateAppleProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateAppleProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "team_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "private_key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 7, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppleProviderRequest {
    return new UpdateAppleProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppleProviderRequest {
    return new UpdateAppleProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppleProviderRequest {
    return new UpdateAppleProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAppleProviderRequest | PlainMessage<UpdateAppleProviderRequest> | undefined, b: UpdateAppleProviderRequest | PlainMessage<UpdateAppleProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAppleProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateAppleProviderResponse
 */
export class UpdateAppleProviderResponse extends Message<UpdateAppleProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateAppleProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateAppleProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppleProviderResponse {
    return new UpdateAppleProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppleProviderResponse {
    return new UpdateAppleProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppleProviderResponse {
    return new UpdateAppleProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAppleProviderResponse | PlainMessage<UpdateAppleProviderResponse> | undefined, b: UpdateAppleProviderResponse | PlainMessage<UpdateAppleProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateAppleProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeleteProviderRequest
 */
export class DeleteProviderRequest extends Message<DeleteProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeleteProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteProviderRequest {
    return new DeleteProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteProviderRequest {
    return new DeleteProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteProviderRequest {
    return new DeleteProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteProviderRequest | PlainMessage<DeleteProviderRequest> | undefined, b: DeleteProviderRequest | PlainMessage<DeleteProviderRequest> | undefined): boolean {
    return proto3.util.equals(DeleteProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeleteProviderResponse
 */
export class DeleteProviderResponse extends Message<DeleteProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<DeleteProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeleteProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteProviderResponse {
    return new DeleteProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteProviderResponse {
    return new DeleteProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteProviderResponse {
    return new DeleteProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteProviderResponse | PlainMessage<DeleteProviderResponse> | undefined, b: DeleteProviderResponse | PlainMessage<DeleteProviderResponse> | undefined): boolean {
    return proto3.util.equals(DeleteProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListActionsRequest
 */
export class ListActionsRequest extends Message<ListActionsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.action.v1.ActionFieldName sorting_column = 2;
   */
  sortingColumn = ActionFieldName.UNSPECIFIED;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.management.v1.ActionQuery queries = 3;
   */
  queries: ActionQuery[] = [];

  constructor(data?: PartialMessage<ListActionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListActionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(ActionFieldName) },
    { no: 3, name: "queries", kind: "message", T: ActionQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListActionsRequest {
    return new ListActionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListActionsRequest {
    return new ListActionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListActionsRequest {
    return new ListActionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListActionsRequest | PlainMessage<ListActionsRequest> | undefined, b: ListActionsRequest | PlainMessage<ListActionsRequest> | undefined): boolean {
    return proto3.util.equals(ListActionsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ActionQuery
 */
export class ActionQuery extends Message<ActionQuery> {
  /**
   * @generated from oneof zitadel.management.v1.ActionQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.action.v1.ActionIDQuery action_id_query = 1;
     */
    value: ActionIDQuery;
    case: "actionIdQuery";
  } | {
    /**
     * @generated from field: zitadel.action.v1.ActionNameQuery action_name_query = 2;
     */
    value: ActionNameQuery;
    case: "actionNameQuery";
  } | {
    /**
     * @generated from field: zitadel.action.v1.ActionStateQuery action_state_query = 3;
     */
    value: ActionStateQuery;
    case: "actionStateQuery";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ActionQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ActionQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "action_id_query", kind: "message", T: ActionIDQuery, oneof: "query" },
    { no: 2, name: "action_name_query", kind: "message", T: ActionNameQuery, oneof: "query" },
    { no: 3, name: "action_state_query", kind: "message", T: ActionStateQuery, oneof: "query" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionQuery {
    return new ActionQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionQuery {
    return new ActionQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionQuery {
    return new ActionQuery().fromJsonString(jsonString, options);
  }

  static equals(a: ActionQuery | PlainMessage<ActionQuery> | undefined, b: ActionQuery | PlainMessage<ActionQuery> | undefined): boolean {
    return proto3.util.equals(ActionQuery, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListActionsResponse
 */
export class ListActionsResponse extends Message<ListActionsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: zitadel.action.v1.ActionFieldName sorting_column = 2;
   */
  sortingColumn = ActionFieldName.UNSPECIFIED;

  /**
   * @generated from field: repeated zitadel.action.v1.Action result = 3;
   */
  result: Action[] = [];

  constructor(data?: PartialMessage<ListActionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListActionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(ActionFieldName) },
    { no: 3, name: "result", kind: "message", T: Action, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListActionsResponse {
    return new ListActionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListActionsResponse {
    return new ListActionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListActionsResponse {
    return new ListActionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListActionsResponse | PlainMessage<ListActionsResponse> | undefined, b: ListActionsResponse | PlainMessage<ListActionsResponse> | undefined): boolean {
    return proto3.util.equals(ListActionsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.CreateActionRequest
 */
export class CreateActionRequest extends Message<CreateActionRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string script = 2;
   */
  script = "";

  /**
   * @generated from field: google.protobuf.Duration timeout = 3;
   */
  timeout?: Duration;

  /**
   * @generated from field: bool allowed_to_fail = 4;
   */
  allowedToFail = false;

  constructor(data?: PartialMessage<CreateActionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.CreateActionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "script", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "timeout", kind: "message", T: Duration },
    { no: 4, name: "allowed_to_fail", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateActionRequest {
    return new CreateActionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateActionRequest {
    return new CreateActionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateActionRequest {
    return new CreateActionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateActionRequest | PlainMessage<CreateActionRequest> | undefined, b: CreateActionRequest | PlainMessage<CreateActionRequest> | undefined): boolean {
    return proto3.util.equals(CreateActionRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.CreateActionResponse
 */
export class CreateActionResponse extends Message<CreateActionResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<CreateActionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.CreateActionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateActionResponse {
    return new CreateActionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateActionResponse {
    return new CreateActionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateActionResponse {
    return new CreateActionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateActionResponse | PlainMessage<CreateActionResponse> | undefined, b: CreateActionResponse | PlainMessage<CreateActionResponse> | undefined): boolean {
    return proto3.util.equals(CreateActionResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetActionRequest
 */
export class GetActionRequest extends Message<GetActionRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetActionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetActionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetActionRequest {
    return new GetActionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetActionRequest {
    return new GetActionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetActionRequest {
    return new GetActionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetActionRequest | PlainMessage<GetActionRequest> | undefined, b: GetActionRequest | PlainMessage<GetActionRequest> | undefined): boolean {
    return proto3.util.equals(GetActionRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetActionResponse
 */
export class GetActionResponse extends Message<GetActionResponse> {
  /**
   * @generated from field: zitadel.action.v1.Action action = 1;
   */
  action?: Action;

  constructor(data?: PartialMessage<GetActionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetActionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "action", kind: "message", T: Action },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetActionResponse {
    return new GetActionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetActionResponse {
    return new GetActionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetActionResponse {
    return new GetActionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetActionResponse | PlainMessage<GetActionResponse> | undefined, b: GetActionResponse | PlainMessage<GetActionResponse> | undefined): boolean {
    return proto3.util.equals(GetActionResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateActionRequest
 */
export class UpdateActionRequest extends Message<UpdateActionRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string script = 3;
   */
  script = "";

  /**
   * @generated from field: google.protobuf.Duration timeout = 4;
   */
  timeout?: Duration;

  /**
   * @generated from field: bool allowed_to_fail = 5;
   */
  allowedToFail = false;

  constructor(data?: PartialMessage<UpdateActionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateActionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "script", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "timeout", kind: "message", T: Duration },
    { no: 5, name: "allowed_to_fail", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateActionRequest {
    return new UpdateActionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateActionRequest {
    return new UpdateActionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateActionRequest {
    return new UpdateActionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateActionRequest | PlainMessage<UpdateActionRequest> | undefined, b: UpdateActionRequest | PlainMessage<UpdateActionRequest> | undefined): boolean {
    return proto3.util.equals(UpdateActionRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.UpdateActionResponse
 */
export class UpdateActionResponse extends Message<UpdateActionResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateActionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.UpdateActionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateActionResponse {
    return new UpdateActionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateActionResponse {
    return new UpdateActionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateActionResponse {
    return new UpdateActionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateActionResponse | PlainMessage<UpdateActionResponse> | undefined, b: UpdateActionResponse | PlainMessage<UpdateActionResponse> | undefined): boolean {
    return proto3.util.equals(UpdateActionResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeleteActionRequest
 */
export class DeleteActionRequest extends Message<DeleteActionRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteActionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeleteActionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteActionRequest {
    return new DeleteActionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteActionRequest {
    return new DeleteActionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteActionRequest {
    return new DeleteActionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteActionRequest | PlainMessage<DeleteActionRequest> | undefined, b: DeleteActionRequest | PlainMessage<DeleteActionRequest> | undefined): boolean {
    return proto3.util.equals(DeleteActionRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeleteActionResponse
 */
export class DeleteActionResponse extends Message<DeleteActionResponse> {
  constructor(data?: PartialMessage<DeleteActionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeleteActionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteActionResponse {
    return new DeleteActionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteActionResponse {
    return new DeleteActionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteActionResponse {
    return new DeleteActionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteActionResponse | PlainMessage<DeleteActionResponse> | undefined, b: DeleteActionResponse | PlainMessage<DeleteActionResponse> | undefined): boolean {
    return proto3.util.equals(DeleteActionResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListFlowTypesRequest
 */
export class ListFlowTypesRequest extends Message<ListFlowTypesRequest> {
  constructor(data?: PartialMessage<ListFlowTypesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListFlowTypesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFlowTypesRequest {
    return new ListFlowTypesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFlowTypesRequest {
    return new ListFlowTypesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFlowTypesRequest {
    return new ListFlowTypesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListFlowTypesRequest | PlainMessage<ListFlowTypesRequest> | undefined, b: ListFlowTypesRequest | PlainMessage<ListFlowTypesRequest> | undefined): boolean {
    return proto3.util.equals(ListFlowTypesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListFlowTypesResponse
 */
export class ListFlowTypesResponse extends Message<ListFlowTypesResponse> {
  /**
   * @generated from field: repeated zitadel.action.v1.FlowType result = 1;
   */
  result: FlowType[] = [];

  constructor(data?: PartialMessage<ListFlowTypesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListFlowTypesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: FlowType, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFlowTypesResponse {
    return new ListFlowTypesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFlowTypesResponse {
    return new ListFlowTypesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFlowTypesResponse {
    return new ListFlowTypesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListFlowTypesResponse | PlainMessage<ListFlowTypesResponse> | undefined, b: ListFlowTypesResponse | PlainMessage<ListFlowTypesResponse> | undefined): boolean {
    return proto3.util.equals(ListFlowTypesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListFlowTriggerTypesRequest
 */
export class ListFlowTriggerTypesRequest extends Message<ListFlowTriggerTypesRequest> {
  /**
   * @generated from field: string type = 1;
   */
  type = "";

  constructor(data?: PartialMessage<ListFlowTriggerTypesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListFlowTriggerTypesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFlowTriggerTypesRequest {
    return new ListFlowTriggerTypesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFlowTriggerTypesRequest {
    return new ListFlowTriggerTypesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFlowTriggerTypesRequest {
    return new ListFlowTriggerTypesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListFlowTriggerTypesRequest | PlainMessage<ListFlowTriggerTypesRequest> | undefined, b: ListFlowTriggerTypesRequest | PlainMessage<ListFlowTriggerTypesRequest> | undefined): boolean {
    return proto3.util.equals(ListFlowTriggerTypesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ListFlowTriggerTypesResponse
 */
export class ListFlowTriggerTypesResponse extends Message<ListFlowTriggerTypesResponse> {
  /**
   * @generated from field: repeated zitadel.action.v1.TriggerType result = 1;
   */
  result: TriggerType[] = [];

  constructor(data?: PartialMessage<ListFlowTriggerTypesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ListFlowTriggerTypesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: TriggerType, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFlowTriggerTypesResponse {
    return new ListFlowTriggerTypesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFlowTriggerTypesResponse {
    return new ListFlowTriggerTypesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFlowTriggerTypesResponse {
    return new ListFlowTriggerTypesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListFlowTriggerTypesResponse | PlainMessage<ListFlowTriggerTypesResponse> | undefined, b: ListFlowTriggerTypesResponse | PlainMessage<ListFlowTriggerTypesResponse> | undefined): boolean {
    return proto3.util.equals(ListFlowTriggerTypesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateActionRequest
 */
export class DeactivateActionRequest extends Message<DeactivateActionRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeactivateActionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateActionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateActionRequest {
    return new DeactivateActionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateActionRequest {
    return new DeactivateActionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateActionRequest {
    return new DeactivateActionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateActionRequest | PlainMessage<DeactivateActionRequest> | undefined, b: DeactivateActionRequest | PlainMessage<DeactivateActionRequest> | undefined): boolean {
    return proto3.util.equals(DeactivateActionRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.DeactivateActionResponse
 */
export class DeactivateActionResponse extends Message<DeactivateActionResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<DeactivateActionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.DeactivateActionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateActionResponse {
    return new DeactivateActionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateActionResponse {
    return new DeactivateActionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateActionResponse {
    return new DeactivateActionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateActionResponse | PlainMessage<DeactivateActionResponse> | undefined, b: DeactivateActionResponse | PlainMessage<DeactivateActionResponse> | undefined): boolean {
    return proto3.util.equals(DeactivateActionResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateActionRequest
 */
export class ReactivateActionRequest extends Message<ReactivateActionRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<ReactivateActionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateActionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateActionRequest {
    return new ReactivateActionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateActionRequest {
    return new ReactivateActionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateActionRequest {
    return new ReactivateActionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateActionRequest | PlainMessage<ReactivateActionRequest> | undefined, b: ReactivateActionRequest | PlainMessage<ReactivateActionRequest> | undefined): boolean {
    return proto3.util.equals(ReactivateActionRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ReactivateActionResponse
 */
export class ReactivateActionResponse extends Message<ReactivateActionResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ReactivateActionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ReactivateActionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateActionResponse {
    return new ReactivateActionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateActionResponse {
    return new ReactivateActionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateActionResponse {
    return new ReactivateActionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateActionResponse | PlainMessage<ReactivateActionResponse> | undefined, b: ReactivateActionResponse | PlainMessage<ReactivateActionResponse> | undefined): boolean {
    return proto3.util.equals(ReactivateActionResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetFlowRequest
 */
export class GetFlowRequest extends Message<GetFlowRequest> {
  /**
   * id of the flow
   *
   * @generated from field: string type = 1;
   */
  type = "";

  constructor(data?: PartialMessage<GetFlowRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetFlowRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFlowRequest {
    return new GetFlowRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFlowRequest {
    return new GetFlowRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFlowRequest {
    return new GetFlowRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetFlowRequest | PlainMessage<GetFlowRequest> | undefined, b: GetFlowRequest | PlainMessage<GetFlowRequest> | undefined): boolean {
    return proto3.util.equals(GetFlowRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.GetFlowResponse
 */
export class GetFlowResponse extends Message<GetFlowResponse> {
  /**
   * @generated from field: zitadel.action.v1.Flow flow = 1;
   */
  flow?: Flow;

  constructor(data?: PartialMessage<GetFlowResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.GetFlowResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "flow", kind: "message", T: Flow },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFlowResponse {
    return new GetFlowResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFlowResponse {
    return new GetFlowResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFlowResponse {
    return new GetFlowResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetFlowResponse | PlainMessage<GetFlowResponse> | undefined, b: GetFlowResponse | PlainMessage<GetFlowResponse> | undefined): boolean {
    return proto3.util.equals(GetFlowResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ClearFlowRequest
 */
export class ClearFlowRequest extends Message<ClearFlowRequest> {
  /**
   * id of the flow
   *
   * @generated from field: string type = 1;
   */
  type = "";

  constructor(data?: PartialMessage<ClearFlowRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ClearFlowRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClearFlowRequest {
    return new ClearFlowRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClearFlowRequest {
    return new ClearFlowRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClearFlowRequest {
    return new ClearFlowRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ClearFlowRequest | PlainMessage<ClearFlowRequest> | undefined, b: ClearFlowRequest | PlainMessage<ClearFlowRequest> | undefined): boolean {
    return proto3.util.equals(ClearFlowRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.ClearFlowResponse
 */
export class ClearFlowResponse extends Message<ClearFlowResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ClearFlowResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.ClearFlowResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClearFlowResponse {
    return new ClearFlowResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClearFlowResponse {
    return new ClearFlowResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClearFlowResponse {
    return new ClearFlowResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ClearFlowResponse | PlainMessage<ClearFlowResponse> | undefined, b: ClearFlowResponse | PlainMessage<ClearFlowResponse> | undefined): boolean {
    return proto3.util.equals(ClearFlowResponse, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetTriggerActionsRequest
 */
export class SetTriggerActionsRequest extends Message<SetTriggerActionsRequest> {
  /**
   * id of the flow type.
   * Following flows are currently allowed:
   * - External Authentication: FLOW_TYPE_EXTERNAL_AUTHENTICATION or 1
   * - Internal Authentication: 3
   * - Complement Token: 2
   * - Complement SAML Response: 4
   *
   * @generated from field: string flow_type = 1;
   */
  flowType = "";

  /**
   * id of the trigger type.
   * Following triggers are currently allowed:
   * - External Authentication:
   *   - Post Authentication: TRIGGER_TYPE_POST_AUTHENTICATION or 1
   *   - Pre Creation: TRIGGER_TYPE_PRE_CREATION or 2
   *   - Post Creation: TRIGGER_TYPE_POST_CREATION or 3 
   * - Internal Authentication:
   *   - Post Authentication: TRIGGER_TYPE_POST_AUTHENTICATION or 1
   *   - Pre Creation: TRIGGER_TYPE_PRE_CREATION or 2
   *   - Post Creation: TRIGGER_TYPE_POST_CREATION or 3 
   * - Complement Token:
   *   - Pre Userinfo Creation: 4
   *   - Pre Access Token Creation: 5
   * - Complement SAML Response:
   *   - Pre SAML Response Creation: 6
   *
   * @generated from field: string trigger_type = 2;
   */
  triggerType = "";

  /**
   * @generated from field: repeated string action_ids = 3;
   */
  actionIds: string[] = [];

  constructor(data?: PartialMessage<SetTriggerActionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetTriggerActionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "flow_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "trigger_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "action_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTriggerActionsRequest {
    return new SetTriggerActionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTriggerActionsRequest {
    return new SetTriggerActionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTriggerActionsRequest {
    return new SetTriggerActionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetTriggerActionsRequest | PlainMessage<SetTriggerActionsRequest> | undefined, b: SetTriggerActionsRequest | PlainMessage<SetTriggerActionsRequest> | undefined): boolean {
    return proto3.util.equals(SetTriggerActionsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.management.v1.SetTriggerActionsResponse
 */
export class SetTriggerActionsResponse extends Message<SetTriggerActionsResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetTriggerActionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.management.v1.SetTriggerActionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTriggerActionsResponse {
    return new SetTriggerActionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTriggerActionsResponse {
    return new SetTriggerActionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTriggerActionsResponse {
    return new SetTriggerActionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetTriggerActionsResponse | PlainMessage<SetTriggerActionsResponse> | undefined, b: SetTriggerActionsResponse | PlainMessage<SetTriggerActionsResponse> | undefined): boolean {
    return proto3.util.equals(SetTriggerActionsResponse, a, b);
  }
}

