// @generated by protoc-gen-es v1.10.0
// @generated from file zitadel/feature/v2beta/feature.proto (package zitadel.feature.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum zitadel.feature.v2beta.Source
 */
export declare enum Source {
  /**
   * @generated from enum value: SOURCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SOURCE_SYSTEM = 2;
   */
  SYSTEM = 2,

  /**
   * @generated from enum value: SOURCE_INSTANCE = 3;
   */
  INSTANCE = 3,

  /**
   * @generated from enum value: SOURCE_ORGANIZATION = 4;
   */
  ORGANIZATION = 4,

  /**
   * reserved for future use
   *
   * @generated from enum value: SOURCE_PROJECT = 5;
   */
  PROJECT = 5,

  /**
   * reserved for future use
   *
   * @generated from enum value: SOURCE_APP = 6;
   */
  APP = 6,

  /**
   * @generated from enum value: SOURCE_USER = 7;
   */
  USER = 7,
}

/**
 * @generated from enum zitadel.feature.v2beta.ImprovedPerformance
 */
export declare enum ImprovedPerformance {
  /**
   * @generated from enum value: IMPROVED_PERFORMANCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Uses the eventstore to query the org by id
   * instead of the sql table.
   *
   * @generated from enum value: IMPROVED_PERFORMANCE_ORG_BY_ID = 1;
   */
  ORG_BY_ID = 1,
}

/**
 * FeatureFlag is a simple boolean Feature setting, without further payload.
 *
 * @generated from message zitadel.feature.v2beta.FeatureFlag
 */
export declare class FeatureFlag extends Message<FeatureFlag> {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @generated from field: zitadel.feature.v2beta.Source source = 2;
   */
  source: Source;

  constructor(data?: PartialMessage<FeatureFlag>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.feature.v2beta.FeatureFlag";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeatureFlag;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeatureFlag;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeatureFlag;

  static equals(a: FeatureFlag | PlainMessage<FeatureFlag> | undefined, b: FeatureFlag | PlainMessage<FeatureFlag> | undefined): boolean;
}

/**
 * @generated from message zitadel.feature.v2beta.ImprovedPerformanceFeatureFlag
 */
export declare class ImprovedPerformanceFeatureFlag extends Message<ImprovedPerformanceFeatureFlag> {
  /**
   * @generated from field: repeated zitadel.feature.v2beta.ImprovedPerformance execution_paths = 1;
   */
  executionPaths: ImprovedPerformance[];

  /**
   * @generated from field: zitadel.feature.v2beta.Source source = 2;
   */
  source: Source;

  constructor(data?: PartialMessage<ImprovedPerformanceFeatureFlag>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.feature.v2beta.ImprovedPerformanceFeatureFlag";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImprovedPerformanceFeatureFlag;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImprovedPerformanceFeatureFlag;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImprovedPerformanceFeatureFlag;

  static equals(a: ImprovedPerformanceFeatureFlag | PlainMessage<ImprovedPerformanceFeatureFlag> | undefined, b: ImprovedPerformanceFeatureFlag | PlainMessage<ImprovedPerformanceFeatureFlag> | undefined): boolean;
}

