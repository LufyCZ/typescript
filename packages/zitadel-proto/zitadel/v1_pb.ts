// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/v1.proto (package zitadel.v1.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { AddAPIAppRequest, AddCustomLabelPolicyRequest, AddCustomLockoutPolicyRequest, AddCustomLoginPolicyRequest, AddCustomPasswordComplexityPolicyRequest, AddCustomPrivacyPolicyRequest, AddIDPToLoginPolicyRequest, AddMachineUserRequest, AddMultiFactorToLoginPolicyRequest, AddOIDCAppRequest, AddOrgJWTIDPRequest, AddOrgMemberRequest, AddOrgOIDCIDPRequest, AddOrgRequest, AddProjectGrantMemberRequest, AddProjectGrantRequest, AddProjectMemberRequest, AddProjectRequest, AddProjectRoleRequest, AddSecondFactorToLoginPolicyRequest, AddUserGrantRequest, CreateActionRequest, ImportHumanUserRequest, SetCustomDomainClaimedMessageTextRequest, SetCustomInitMessageTextRequest, SetCustomLoginTextsRequest, SetCustomPasswordlessRegistrationMessageTextRequest, SetCustomPasswordResetMessageTextRequest, SetCustomVerifyEmailMessageTextRequest, SetCustomVerifyPhoneMessageTextRequest, SetUserMetadataRequest } from "./management_pb.js";
import { IDPUserLink } from "./idp_pb.js";
import { Domain } from "./org_pb.js";
import { Gender } from "./user_pb.js";
import { KeyType } from "./auth_n_key_pb.js";

/**
 * @generated from enum zitadel.v1.v1.FlowType
 */
export enum FlowType {
  /**
   * @generated from enum value: FLOW_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FLOW_TYPE_EXTERNAL_AUTHENTICATION = 1;
   */
  EXTERNAL_AUTHENTICATION = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(FlowType)
proto3.util.setEnumType(FlowType, "zitadel.v1.v1.FlowType", [
  { no: 0, name: "FLOW_TYPE_UNSPECIFIED" },
  { no: 1, name: "FLOW_TYPE_EXTERNAL_AUTHENTICATION" },
]);

/**
 * @generated from enum zitadel.v1.v1.TriggerType
 */
export enum TriggerType {
  /**
   * @generated from enum value: TRIGGER_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TRIGGER_TYPE_POST_AUTHENTICATION = 1;
   */
  POST_AUTHENTICATION = 1,

  /**
   * @generated from enum value: TRIGGER_TYPE_PRE_CREATION = 2;
   */
  PRE_CREATION = 2,

  /**
   * @generated from enum value: TRIGGER_TYPE_POST_CREATION = 3;
   */
  POST_CREATION = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(TriggerType)
proto3.util.setEnumType(TriggerType, "zitadel.v1.v1.TriggerType", [
  { no: 0, name: "TRIGGER_TYPE_UNSPECIFIED" },
  { no: 1, name: "TRIGGER_TYPE_POST_AUTHENTICATION" },
  { no: 2, name: "TRIGGER_TYPE_PRE_CREATION" },
  { no: 3, name: "TRIGGER_TYPE_POST_CREATION" },
]);

/**
 * @generated from message zitadel.v1.v1.AddCustomOrgIAMPolicyRequest
 */
export class AddCustomOrgIAMPolicyRequest extends Message<AddCustomOrgIAMPolicyRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * the username has to end with the domain of its organization (uniqueness is organization based)
   *
   * @generated from field: bool user_login_must_be_domain = 2;
   */
  userLoginMustBeDomain = false;

  constructor(data?: PartialMessage<AddCustomOrgIAMPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.AddCustomOrgIAMPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_login_must_be_domain", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomOrgIAMPolicyRequest {
    return new AddCustomOrgIAMPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomOrgIAMPolicyRequest {
    return new AddCustomOrgIAMPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomOrgIAMPolicyRequest {
    return new AddCustomOrgIAMPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomOrgIAMPolicyRequest | PlainMessage<AddCustomOrgIAMPolicyRequest> | undefined, b: AddCustomOrgIAMPolicyRequest | PlainMessage<AddCustomOrgIAMPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddCustomOrgIAMPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.ImportDataOrg
 */
export class ImportDataOrg extends Message<ImportDataOrg> {
  /**
   * @generated from field: repeated zitadel.v1.v1.DataOrg orgs = 1;
   */
  orgs: DataOrg[] = [];

  constructor(data?: PartialMessage<ImportDataOrg>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.ImportDataOrg";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orgs", kind: "message", T: DataOrg, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataOrg {
    return new ImportDataOrg().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataOrg {
    return new ImportDataOrg().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataOrg {
    return new ImportDataOrg().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataOrg | PlainMessage<ImportDataOrg> | undefined, b: ImportDataOrg | PlainMessage<ImportDataOrg> | undefined): boolean {
    return proto3.util.equals(ImportDataOrg, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.DataOrg
 */
export class DataOrg extends Message<DataOrg> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: zitadel.management.v1.AddOrgRequest org = 3;
   */
  org?: AddOrgRequest;

  /**
   * @generated from field: zitadel.v1.v1.AddCustomOrgIAMPolicyRequest iam_policy = 4;
   */
  iamPolicy?: AddCustomOrgIAMPolicyRequest;

  /**
   * @generated from field: zitadel.management.v1.AddCustomLabelPolicyRequest label_policy = 5;
   */
  labelPolicy?: AddCustomLabelPolicyRequest;

  /**
   * @generated from field: zitadel.management.v1.AddCustomLockoutPolicyRequest lockout_policy = 6;
   */
  lockoutPolicy?: AddCustomLockoutPolicyRequest;

  /**
   * @generated from field: zitadel.management.v1.AddCustomLoginPolicyRequest login_policy = 7;
   */
  loginPolicy?: AddCustomLoginPolicyRequest;

  /**
   * @generated from field: zitadel.management.v1.AddCustomPasswordComplexityPolicyRequest password_complexity_policy = 8;
   */
  passwordComplexityPolicy?: AddCustomPasswordComplexityPolicyRequest;

  /**
   * @generated from field: zitadel.management.v1.AddCustomPrivacyPolicyRequest privacy_policy = 9;
   */
  privacyPolicy?: AddCustomPrivacyPolicyRequest;

  /**
   * @generated from field: repeated zitadel.v1.v1.DataProject projects = 10;
   */
  projects: DataProject[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddProjectRoleRequest project_roles = 11;
   */
  projectRoles: AddProjectRoleRequest[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataAPIApplication api_apps = 12;
   */
  apiApps: DataAPIApplication[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataOIDCApplication oidc_apps = 13;
   */
  oidcApps: DataOIDCApplication[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataHumanUser human_users = 14;
   */
  humanUsers: DataHumanUser[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataMachineUser machine_users = 15;
   */
  machineUsers: DataMachineUser[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.SetTriggerActionsRequest trigger_actions = 16;
   */
  triggerActions: SetTriggerActionsRequest[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataAction actions = 17;
   */
  actions: DataAction[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataProjectGrant project_grants = 18;
   */
  projectGrants: DataProjectGrant[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddUserGrantRequest user_grants = 19;
   */
  userGrants: AddUserGrantRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddOrgMemberRequest org_members = 20;
   */
  orgMembers: AddOrgMemberRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddProjectMemberRequest project_members = 21;
   */
  projectMembers: AddProjectMemberRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddProjectGrantMemberRequest project_grant_members = 22;
   */
  projectGrantMembers: AddProjectGrantMemberRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetUserMetadataRequest user_metadata = 23;
   */
  userMetadata: SetUserMetadataRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomLoginTextsRequest login_texts = 24;
   */
  loginTexts: SetCustomLoginTextsRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomInitMessageTextRequest init_messages = 25;
   */
  initMessages: SetCustomInitMessageTextRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomPasswordResetMessageTextRequest password_reset_messages = 26;
   */
  passwordResetMessages: SetCustomPasswordResetMessageTextRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomVerifyEmailMessageTextRequest verify_email_messages = 27;
   */
  verifyEmailMessages: SetCustomVerifyEmailMessageTextRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomVerifyPhoneMessageTextRequest verify_phone_messages = 28;
   */
  verifyPhoneMessages: SetCustomVerifyPhoneMessageTextRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomDomainClaimedMessageTextRequest domain_claimed_messages = 29;
   */
  domainClaimedMessages: SetCustomDomainClaimedMessageTextRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomPasswordlessRegistrationMessageTextRequest passwordless_registration_messages = 30;
   */
  passwordlessRegistrationMessages: SetCustomPasswordlessRegistrationMessageTextRequest[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataOIDCIDP oidc_idps = 31;
   */
  oidcIdps: DataOIDCIDP[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataJWTIDP jwt_idps = 32;
   */
  jwtIdps: DataJWTIDP[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddSecondFactorToLoginPolicyRequest second_factors = 33;
   */
  secondFactors: AddSecondFactorToLoginPolicyRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddMultiFactorToLoginPolicyRequest multi_factors = 34;
   */
  multiFactors: AddMultiFactorToLoginPolicyRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddIDPToLoginPolicyRequest idps = 35;
   */
  idps: AddIDPToLoginPolicyRequest[] = [];

  /**
   * @generated from field: repeated zitadel.idp.v1.IDPUserLink user_links = 36;
   */
  userLinks: IDPUserLink[] = [];

  /**
   * @generated from field: repeated zitadel.org.v1.Domain domains = 37;
   */
  domains: Domain[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataAppKey app_keys = 38;
   */
  appKeys: DataAppKey[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataMachineKey machine_keys = 39;
   */
  machineKeys: DataMachineKey[] = [];

  constructor(data?: PartialMessage<DataOrg>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.DataOrg";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "org", kind: "message", T: AddOrgRequest },
    { no: 4, name: "iam_policy", kind: "message", T: AddCustomOrgIAMPolicyRequest },
    { no: 5, name: "label_policy", kind: "message", T: AddCustomLabelPolicyRequest },
    { no: 6, name: "lockout_policy", kind: "message", T: AddCustomLockoutPolicyRequest },
    { no: 7, name: "login_policy", kind: "message", T: AddCustomLoginPolicyRequest },
    { no: 8, name: "password_complexity_policy", kind: "message", T: AddCustomPasswordComplexityPolicyRequest },
    { no: 9, name: "privacy_policy", kind: "message", T: AddCustomPrivacyPolicyRequest },
    { no: 10, name: "projects", kind: "message", T: DataProject, repeated: true },
    { no: 11, name: "project_roles", kind: "message", T: AddProjectRoleRequest, repeated: true },
    { no: 12, name: "api_apps", kind: "message", T: DataAPIApplication, repeated: true },
    { no: 13, name: "oidc_apps", kind: "message", T: DataOIDCApplication, repeated: true },
    { no: 14, name: "human_users", kind: "message", T: DataHumanUser, repeated: true },
    { no: 15, name: "machine_users", kind: "message", T: DataMachineUser, repeated: true },
    { no: 16, name: "trigger_actions", kind: "message", T: SetTriggerActionsRequest, repeated: true },
    { no: 17, name: "actions", kind: "message", T: DataAction, repeated: true },
    { no: 18, name: "project_grants", kind: "message", T: DataProjectGrant, repeated: true },
    { no: 19, name: "user_grants", kind: "message", T: AddUserGrantRequest, repeated: true },
    { no: 20, name: "org_members", kind: "message", T: AddOrgMemberRequest, repeated: true },
    { no: 21, name: "project_members", kind: "message", T: AddProjectMemberRequest, repeated: true },
    { no: 22, name: "project_grant_members", kind: "message", T: AddProjectGrantMemberRequest, repeated: true },
    { no: 23, name: "user_metadata", kind: "message", T: SetUserMetadataRequest, repeated: true },
    { no: 24, name: "login_texts", kind: "message", T: SetCustomLoginTextsRequest, repeated: true },
    { no: 25, name: "init_messages", kind: "message", T: SetCustomInitMessageTextRequest, repeated: true },
    { no: 26, name: "password_reset_messages", kind: "message", T: SetCustomPasswordResetMessageTextRequest, repeated: true },
    { no: 27, name: "verify_email_messages", kind: "message", T: SetCustomVerifyEmailMessageTextRequest, repeated: true },
    { no: 28, name: "verify_phone_messages", kind: "message", T: SetCustomVerifyPhoneMessageTextRequest, repeated: true },
    { no: 29, name: "domain_claimed_messages", kind: "message", T: SetCustomDomainClaimedMessageTextRequest, repeated: true },
    { no: 30, name: "passwordless_registration_messages", kind: "message", T: SetCustomPasswordlessRegistrationMessageTextRequest, repeated: true },
    { no: 31, name: "oidc_idps", kind: "message", T: DataOIDCIDP, repeated: true },
    { no: 32, name: "jwt_idps", kind: "message", T: DataJWTIDP, repeated: true },
    { no: 33, name: "second_factors", kind: "message", T: AddSecondFactorToLoginPolicyRequest, repeated: true },
    { no: 34, name: "multi_factors", kind: "message", T: AddMultiFactorToLoginPolicyRequest, repeated: true },
    { no: 35, name: "idps", kind: "message", T: AddIDPToLoginPolicyRequest, repeated: true },
    { no: 36, name: "user_links", kind: "message", T: IDPUserLink, repeated: true },
    { no: 37, name: "domains", kind: "message", T: Domain, repeated: true },
    { no: 38, name: "app_keys", kind: "message", T: DataAppKey, repeated: true },
    { no: 39, name: "machine_keys", kind: "message", T: DataMachineKey, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataOrg {
    return new DataOrg().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataOrg {
    return new DataOrg().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataOrg {
    return new DataOrg().fromJsonString(jsonString, options);
  }

  static equals(a: DataOrg | PlainMessage<DataOrg> | undefined, b: DataOrg | PlainMessage<DataOrg> | undefined): boolean {
    return proto3.util.equals(DataOrg, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.DataOIDCIDP
 */
export class DataOIDCIDP extends Message<DataOIDCIDP> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  /**
   * @generated from field: zitadel.management.v1.AddOrgOIDCIDPRequest idp = 2;
   */
  idp?: AddOrgOIDCIDPRequest;

  constructor(data?: PartialMessage<DataOIDCIDP>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.DataOIDCIDP";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "idp", kind: "message", T: AddOrgOIDCIDPRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataOIDCIDP {
    return new DataOIDCIDP().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataOIDCIDP {
    return new DataOIDCIDP().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataOIDCIDP {
    return new DataOIDCIDP().fromJsonString(jsonString, options);
  }

  static equals(a: DataOIDCIDP | PlainMessage<DataOIDCIDP> | undefined, b: DataOIDCIDP | PlainMessage<DataOIDCIDP> | undefined): boolean {
    return proto3.util.equals(DataOIDCIDP, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.DataJWTIDP
 */
export class DataJWTIDP extends Message<DataJWTIDP> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  /**
   * @generated from field: zitadel.management.v1.AddOrgJWTIDPRequest idp = 32;
   */
  idp?: AddOrgJWTIDPRequest;

  constructor(data?: PartialMessage<DataJWTIDP>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.DataJWTIDP";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 32, name: "idp", kind: "message", T: AddOrgJWTIDPRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataJWTIDP {
    return new DataJWTIDP().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataJWTIDP {
    return new DataJWTIDP().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataJWTIDP {
    return new DataJWTIDP().fromJsonString(jsonString, options);
  }

  static equals(a: DataJWTIDP | PlainMessage<DataJWTIDP> | undefined, b: DataJWTIDP | PlainMessage<DataJWTIDP> | undefined): boolean {
    return proto3.util.equals(DataJWTIDP, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.ExportHumanUser
 */
export class ExportHumanUser extends Message<ExportHumanUser> {
  /**
   * @generated from field: string user_name = 1;
   */
  userName = "";

  /**
   * @generated from field: zitadel.v1.v1.ExportHumanUser.Profile profile = 2;
   */
  profile?: ExportHumanUser_Profile;

  /**
   * @generated from field: zitadel.v1.v1.ExportHumanUser.Email email = 3;
   */
  email?: ExportHumanUser_Email;

  /**
   * @generated from field: zitadel.v1.v1.ExportHumanUser.Phone phone = 4;
   */
  phone?: ExportHumanUser_Phone;

  /**
   * @generated from field: string password = 5;
   */
  password = "";

  /**
   * @generated from field: zitadel.v1.v1.ExportHumanUser.HashedPassword hashed_password = 6;
   */
  hashedPassword?: ExportHumanUser_HashedPassword;

  /**
   * @generated from field: bool password_change_required = 7;
   */
  passwordChangeRequired = false;

  /**
   * @generated from field: bool request_passwordless_registration = 8;
   */
  requestPasswordlessRegistration = false;

  /**
   * @generated from field: string otp_code = 9;
   */
  otpCode = "";

  constructor(data?: PartialMessage<ExportHumanUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.ExportHumanUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "profile", kind: "message", T: ExportHumanUser_Profile },
    { no: 3, name: "email", kind: "message", T: ExportHumanUser_Email },
    { no: 4, name: "phone", kind: "message", T: ExportHumanUser_Phone },
    { no: 5, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "hashed_password", kind: "message", T: ExportHumanUser_HashedPassword },
    { no: 7, name: "password_change_required", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "request_passwordless_registration", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "otp_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportHumanUser {
    return new ExportHumanUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportHumanUser {
    return new ExportHumanUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportHumanUser {
    return new ExportHumanUser().fromJsonString(jsonString, options);
  }

  static equals(a: ExportHumanUser | PlainMessage<ExportHumanUser> | undefined, b: ExportHumanUser | PlainMessage<ExportHumanUser> | undefined): boolean {
    return proto3.util.equals(ExportHumanUser, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.ExportHumanUser.Profile
 */
export class ExportHumanUser_Profile extends Message<ExportHumanUser_Profile> {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName = "";

  /**
   * @generated from field: string last_name = 2;
   */
  lastName = "";

  /**
   * @generated from field: string nick_name = 3;
   */
  nickName = "";

  /**
   * @generated from field: string display_name = 4;
   */
  displayName = "";

  /**
   * @generated from field: string preferred_language = 5;
   */
  preferredLanguage = "";

  /**
   * @generated from field: zitadel.user.v1.Gender gender = 6;
   */
  gender = Gender.UNSPECIFIED;

  constructor(data?: PartialMessage<ExportHumanUser_Profile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.ExportHumanUser.Profile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "nick_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "preferred_language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "gender", kind: "enum", T: proto3.getEnumType(Gender) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportHumanUser_Profile {
    return new ExportHumanUser_Profile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportHumanUser_Profile {
    return new ExportHumanUser_Profile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportHumanUser_Profile {
    return new ExportHumanUser_Profile().fromJsonString(jsonString, options);
  }

  static equals(a: ExportHumanUser_Profile | PlainMessage<ExportHumanUser_Profile> | undefined, b: ExportHumanUser_Profile | PlainMessage<ExportHumanUser_Profile> | undefined): boolean {
    return proto3.util.equals(ExportHumanUser_Profile, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.ExportHumanUser.Email
 */
export class ExportHumanUser_Email extends Message<ExportHumanUser_Email> {
  /**
   * TODO: check if no value is allowed
   *
   * @generated from field: string email = 1;
   */
  email = "";

  /**
   * @generated from field: bool is_email_verified = 2;
   */
  isEmailVerified = false;

  constructor(data?: PartialMessage<ExportHumanUser_Email>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.ExportHumanUser.Email";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "is_email_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportHumanUser_Email {
    return new ExportHumanUser_Email().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportHumanUser_Email {
    return new ExportHumanUser_Email().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportHumanUser_Email {
    return new ExportHumanUser_Email().fromJsonString(jsonString, options);
  }

  static equals(a: ExportHumanUser_Email | PlainMessage<ExportHumanUser_Email> | undefined, b: ExportHumanUser_Email | PlainMessage<ExportHumanUser_Email> | undefined): boolean {
    return proto3.util.equals(ExportHumanUser_Email, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.ExportHumanUser.Phone
 */
export class ExportHumanUser_Phone extends Message<ExportHumanUser_Phone> {
  /**
   * has to be a global number
   *
   * @generated from field: string phone = 1;
   */
  phone = "";

  /**
   * @generated from field: bool is_phone_verified = 2;
   */
  isPhoneVerified = false;

  constructor(data?: PartialMessage<ExportHumanUser_Phone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.ExportHumanUser.Phone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "is_phone_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportHumanUser_Phone {
    return new ExportHumanUser_Phone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportHumanUser_Phone {
    return new ExportHumanUser_Phone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportHumanUser_Phone {
    return new ExportHumanUser_Phone().fromJsonString(jsonString, options);
  }

  static equals(a: ExportHumanUser_Phone | PlainMessage<ExportHumanUser_Phone> | undefined, b: ExportHumanUser_Phone | PlainMessage<ExportHumanUser_Phone> | undefined): boolean {
    return proto3.util.equals(ExportHumanUser_Phone, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.ExportHumanUser.HashedPassword
 */
export class ExportHumanUser_HashedPassword extends Message<ExportHumanUser_HashedPassword> {
  /**
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * @generated from field: string algorithm = 2;
   */
  algorithm = "";

  constructor(data?: PartialMessage<ExportHumanUser_HashedPassword>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.ExportHumanUser.HashedPassword";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "algorithm", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportHumanUser_HashedPassword {
    return new ExportHumanUser_HashedPassword().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportHumanUser_HashedPassword {
    return new ExportHumanUser_HashedPassword().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportHumanUser_HashedPassword {
    return new ExportHumanUser_HashedPassword().fromJsonString(jsonString, options);
  }

  static equals(a: ExportHumanUser_HashedPassword | PlainMessage<ExportHumanUser_HashedPassword> | undefined, b: ExportHumanUser_HashedPassword | PlainMessage<ExportHumanUser_HashedPassword> | undefined): boolean {
    return proto3.util.equals(ExportHumanUser_HashedPassword, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.DataAppKey
 */
export class DataAppKey extends Message<DataAppKey> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string project_id = 2;
   */
  projectId = "";

  /**
   * @generated from field: string app_id = 3;
   */
  appId = "";

  /**
   * @generated from field: string client_id = 4;
   */
  clientId = "";

  /**
   * @generated from field: zitadel.authn.v1.KeyType type = 5;
   */
  type = KeyType.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.Timestamp expiration_date = 6;
   */
  expirationDate?: Timestamp;

  /**
   * @generated from field: bytes public_key = 7;
   */
  publicKey = new Uint8Array(0);

  constructor(data?: PartialMessage<DataAppKey>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.DataAppKey";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "type", kind: "enum", T: proto3.getEnumType(KeyType) },
    { no: 6, name: "expiration_date", kind: "message", T: Timestamp },
    { no: 7, name: "public_key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataAppKey {
    return new DataAppKey().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataAppKey {
    return new DataAppKey().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataAppKey {
    return new DataAppKey().fromJsonString(jsonString, options);
  }

  static equals(a: DataAppKey | PlainMessage<DataAppKey> | undefined, b: DataAppKey | PlainMessage<DataAppKey> | undefined): boolean {
    return proto3.util.equals(DataAppKey, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.DataMachineKey
 */
export class DataMachineKey extends Message<DataMachineKey> {
  /**
   * @generated from field: string key_id = 1;
   */
  keyId = "";

  /**
   * @generated from field: string user_id = 2;
   */
  userId = "";

  /**
   * @generated from field: zitadel.authn.v1.KeyType type = 3;
   */
  type = KeyType.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.Timestamp expiration_date = 4;
   */
  expirationDate?: Timestamp;

  /**
   * @generated from field: bytes public_key = 5;
   */
  publicKey = new Uint8Array(0);

  constructor(data?: PartialMessage<DataMachineKey>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.DataMachineKey";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "type", kind: "enum", T: proto3.getEnumType(KeyType) },
    { no: 4, name: "expiration_date", kind: "message", T: Timestamp },
    { no: 5, name: "public_key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataMachineKey {
    return new DataMachineKey().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataMachineKey {
    return new DataMachineKey().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataMachineKey {
    return new DataMachineKey().fromJsonString(jsonString, options);
  }

  static equals(a: DataMachineKey | PlainMessage<DataMachineKey> | undefined, b: DataMachineKey | PlainMessage<DataMachineKey> | undefined): boolean {
    return proto3.util.equals(DataMachineKey, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.DataProject
 */
export class DataProject extends Message<DataProject> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: zitadel.management.v1.AddProjectRequest project = 2;
   */
  project?: AddProjectRequest;

  constructor(data?: PartialMessage<DataProject>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.DataProject";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "project", kind: "message", T: AddProjectRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataProject {
    return new DataProject().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataProject {
    return new DataProject().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataProject {
    return new DataProject().fromJsonString(jsonString, options);
  }

  static equals(a: DataProject | PlainMessage<DataProject> | undefined, b: DataProject | PlainMessage<DataProject> | undefined): boolean {
    return proto3.util.equals(DataProject, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.DataAPIApplication
 */
export class DataAPIApplication extends Message<DataAPIApplication> {
  /**
   * @generated from field: string app_id = 1;
   */
  appId = "";

  /**
   * @generated from field: zitadel.management.v1.AddAPIAppRequest app = 2;
   */
  app?: AddAPIAppRequest;

  constructor(data?: PartialMessage<DataAPIApplication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.DataAPIApplication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app", kind: "message", T: AddAPIAppRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataAPIApplication {
    return new DataAPIApplication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataAPIApplication {
    return new DataAPIApplication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataAPIApplication {
    return new DataAPIApplication().fromJsonString(jsonString, options);
  }

  static equals(a: DataAPIApplication | PlainMessage<DataAPIApplication> | undefined, b: DataAPIApplication | PlainMessage<DataAPIApplication> | undefined): boolean {
    return proto3.util.equals(DataAPIApplication, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.DataOIDCApplication
 */
export class DataOIDCApplication extends Message<DataOIDCApplication> {
  /**
   * @generated from field: string app_id = 1;
   */
  appId = "";

  /**
   * @generated from field: zitadel.management.v1.AddOIDCAppRequest app = 2;
   */
  app?: AddOIDCAppRequest;

  constructor(data?: PartialMessage<DataOIDCApplication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.DataOIDCApplication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app", kind: "message", T: AddOIDCAppRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataOIDCApplication {
    return new DataOIDCApplication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataOIDCApplication {
    return new DataOIDCApplication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataOIDCApplication {
    return new DataOIDCApplication().fromJsonString(jsonString, options);
  }

  static equals(a: DataOIDCApplication | PlainMessage<DataOIDCApplication> | undefined, b: DataOIDCApplication | PlainMessage<DataOIDCApplication> | undefined): boolean {
    return proto3.util.equals(DataOIDCApplication, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.DataHumanUser
 */
export class DataHumanUser extends Message<DataHumanUser> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: zitadel.management.v1.ImportHumanUserRequest user = 2;
   */
  user?: ImportHumanUserRequest;

  constructor(data?: PartialMessage<DataHumanUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.DataHumanUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user", kind: "message", T: ImportHumanUserRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataHumanUser {
    return new DataHumanUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataHumanUser {
    return new DataHumanUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataHumanUser {
    return new DataHumanUser().fromJsonString(jsonString, options);
  }

  static equals(a: DataHumanUser | PlainMessage<DataHumanUser> | undefined, b: DataHumanUser | PlainMessage<DataHumanUser> | undefined): boolean {
    return proto3.util.equals(DataHumanUser, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.DataMachineUser
 */
export class DataMachineUser extends Message<DataMachineUser> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: zitadel.management.v1.AddMachineUserRequest user = 2;
   */
  user?: AddMachineUserRequest;

  constructor(data?: PartialMessage<DataMachineUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.DataMachineUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user", kind: "message", T: AddMachineUserRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataMachineUser {
    return new DataMachineUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataMachineUser {
    return new DataMachineUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataMachineUser {
    return new DataMachineUser().fromJsonString(jsonString, options);
  }

  static equals(a: DataMachineUser | PlainMessage<DataMachineUser> | undefined, b: DataMachineUser | PlainMessage<DataMachineUser> | undefined): boolean {
    return proto3.util.equals(DataMachineUser, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.DataAction
 */
export class DataAction extends Message<DataAction> {
  /**
   * @generated from field: string action_id = 1;
   */
  actionId = "";

  /**
   * @generated from field: zitadel.management.v1.CreateActionRequest action = 2;
   */
  action?: CreateActionRequest;

  constructor(data?: PartialMessage<DataAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.DataAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "action_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "action", kind: "message", T: CreateActionRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataAction {
    return new DataAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataAction {
    return new DataAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataAction {
    return new DataAction().fromJsonString(jsonString, options);
  }

  static equals(a: DataAction | PlainMessage<DataAction> | undefined, b: DataAction | PlainMessage<DataAction> | undefined): boolean {
    return proto3.util.equals(DataAction, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.DataProjectGrant
 */
export class DataProjectGrant extends Message<DataProjectGrant> {
  /**
   * @generated from field: string grant_id = 1;
   */
  grantId = "";

  /**
   * @generated from field: zitadel.management.v1.AddProjectGrantRequest project_grant = 2;
   */
  projectGrant?: AddProjectGrantRequest;

  constructor(data?: PartialMessage<DataProjectGrant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.DataProjectGrant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "project_grant", kind: "message", T: AddProjectGrantRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataProjectGrant {
    return new DataProjectGrant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataProjectGrant {
    return new DataProjectGrant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataProjectGrant {
    return new DataProjectGrant().fromJsonString(jsonString, options);
  }

  static equals(a: DataProjectGrant | PlainMessage<DataProjectGrant> | undefined, b: DataProjectGrant | PlainMessage<DataProjectGrant> | undefined): boolean {
    return proto3.util.equals(DataProjectGrant, a, b);
  }
}

/**
 * @generated from message zitadel.v1.v1.SetTriggerActionsRequest
 */
export class SetTriggerActionsRequest extends Message<SetTriggerActionsRequest> {
  /**
   * @generated from field: zitadel.v1.v1.FlowType flow_type = 1;
   */
  flowType = FlowType.UNSPECIFIED;

  /**
   * @generated from field: zitadel.v1.v1.TriggerType trigger_type = 2;
   */
  triggerType = TriggerType.UNSPECIFIED;

  /**
   * @generated from field: repeated string action_ids = 3;
   */
  actionIds: string[] = [];

  constructor(data?: PartialMessage<SetTriggerActionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.v1.v1.SetTriggerActionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "flow_type", kind: "enum", T: proto3.getEnumType(FlowType) },
    { no: 2, name: "trigger_type", kind: "enum", T: proto3.getEnumType(TriggerType) },
    { no: 3, name: "action_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTriggerActionsRequest {
    return new SetTriggerActionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTriggerActionsRequest {
    return new SetTriggerActionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTriggerActionsRequest {
    return new SetTriggerActionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetTriggerActionsRequest | PlainMessage<SetTriggerActionsRequest> | undefined, b: SetTriggerActionsRequest | PlainMessage<SetTriggerActionsRequest> | undefined): boolean {
    return proto3.util.equals(SetTriggerActionsRequest, a, b);
  }
}

