// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/user/v2beta/user_service.proto (package zitadel.user.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Struct } from "@bufbuild/protobuf";
import { Details, ListDetails, ListQuery, Organization } from "../../object/v2beta/object_pb.js";
import { SetHumanProfile, SetMetadataEntry, User } from "./user_pb.js";
import { ReturnEmailVerificationCode, SendEmailVerificationCode, SetHumanEmail } from "./email_pb.js";
import { ReturnPhoneVerificationCode, SendPhoneVerificationCode, SetHumanPhone } from "./phone_pb.js";
import { HashedPassword, Password, ReturnPasswordResetCode, SendPasswordResetLink, SetPassword } from "./password_pb.js";
import { IDPInformation, IDPIntent, IDPLink, LDAPCredentials, RedirectURLs } from "./idp_pb.js";
import { SearchQuery, UserFieldName } from "./query_pb.js";
import { PasskeyAuthenticator, PasskeyRegistrationCode, ReturnPasskeyRegistrationCode, SendPasskeyRegistrationLink } from "./auth_pb.js";

/**
 * @generated from enum zitadel.user.v2beta.AuthenticationMethodType
 */
export enum AuthenticationMethodType {
  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_PASSWORD = 1;
   */
  PASSWORD = 1,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_PASSKEY = 2;
   */
  PASSKEY = 2,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_IDP = 3;
   */
  IDP = 3,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_TOTP = 4;
   */
  TOTP = 4,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_U2F = 5;
   */
  U2F = 5,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_OTP_SMS = 6;
   */
  OTP_SMS = 6,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_OTP_EMAIL = 7;
   */
  OTP_EMAIL = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(AuthenticationMethodType)
proto3.util.setEnumType(AuthenticationMethodType, "zitadel.user.v2beta.AuthenticationMethodType", [
  { no: 0, name: "AUTHENTICATION_METHOD_TYPE_UNSPECIFIED" },
  { no: 1, name: "AUTHENTICATION_METHOD_TYPE_PASSWORD" },
  { no: 2, name: "AUTHENTICATION_METHOD_TYPE_PASSKEY" },
  { no: 3, name: "AUTHENTICATION_METHOD_TYPE_IDP" },
  { no: 4, name: "AUTHENTICATION_METHOD_TYPE_TOTP" },
  { no: 5, name: "AUTHENTICATION_METHOD_TYPE_U2F" },
  { no: 6, name: "AUTHENTICATION_METHOD_TYPE_OTP_SMS" },
  { no: 7, name: "AUTHENTICATION_METHOD_TYPE_OTP_EMAIL" },
]);

/**
 * @generated from message zitadel.user.v2beta.AddHumanUserRequest
 */
export class AddHumanUserRequest extends Message<AddHumanUserRequest> {
  /**
   * optionally set your own id unique for the user.
   *
   * @generated from field: optional string user_id = 1;
   */
  userId?: string;

  /**
   * optionally set a unique username, if none is provided the email will be used.
   *
   * @generated from field: optional string username = 2;
   */
  username?: string;

  /**
   * @generated from field: zitadel.object.v2beta.Organization organization = 11;
   */
  organization?: Organization;

  /**
   * @generated from field: zitadel.user.v2beta.SetHumanProfile profile = 4;
   */
  profile?: SetHumanProfile;

  /**
   * @generated from field: zitadel.user.v2beta.SetHumanEmail email = 5;
   */
  email?: SetHumanEmail;

  /**
   * @generated from field: zitadel.user.v2beta.SetHumanPhone phone = 10;
   */
  phone?: SetHumanPhone;

  /**
   * @generated from field: repeated zitadel.user.v2beta.SetMetadataEntry metadata = 6;
   */
  metadata: SetMetadataEntry[] = [];

  /**
   * @generated from oneof zitadel.user.v2beta.AddHumanUserRequest.password_type
   */
  passwordType: {
    /**
     * @generated from field: zitadel.user.v2beta.Password password = 7;
     */
    value: Password;
    case: "password";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.HashedPassword hashed_password = 8;
     */
    value: HashedPassword;
    case: "hashedPassword";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: repeated zitadel.user.v2beta.IDPLink idp_links = 9;
   */
  idpLinks: IDPLink[] = [];

  /**
   * An Implementation of RFC 6238 is used, with HMAC-SHA-1 and time-step of 30 seconds.
   * Currently no other options are supported, and if anything different is used the validation will fail.
   *
   * @generated from field: optional string totp_secret = 12;
   */
  totpSecret?: string;

  constructor(data?: PartialMessage<AddHumanUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.AddHumanUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "organization", kind: "message", T: Organization },
    { no: 4, name: "profile", kind: "message", T: SetHumanProfile },
    { no: 5, name: "email", kind: "message", T: SetHumanEmail },
    { no: 10, name: "phone", kind: "message", T: SetHumanPhone },
    { no: 6, name: "metadata", kind: "message", T: SetMetadataEntry, repeated: true },
    { no: 7, name: "password", kind: "message", T: Password, oneof: "password_type" },
    { no: 8, name: "hashed_password", kind: "message", T: HashedPassword, oneof: "password_type" },
    { no: 9, name: "idp_links", kind: "message", T: IDPLink, repeated: true },
    { no: 12, name: "totp_secret", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddHumanUserRequest {
    return new AddHumanUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddHumanUserRequest {
    return new AddHumanUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddHumanUserRequest {
    return new AddHumanUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddHumanUserRequest | PlainMessage<AddHumanUserRequest> | undefined, b: AddHumanUserRequest | PlainMessage<AddHumanUserRequest> | undefined): boolean {
    return proto3.util.equals(AddHumanUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.AddHumanUserResponse
 */
export class AddHumanUserResponse extends Message<AddHumanUserResponse> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: zitadel.object.v2beta.Details details = 2;
   */
  details?: Details;

  /**
   * @generated from field: optional string email_code = 3;
   */
  emailCode?: string;

  /**
   * @generated from field: optional string phone_code = 4;
   */
  phoneCode?: string;

  constructor(data?: PartialMessage<AddHumanUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.AddHumanUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: Details },
    { no: 3, name: "email_code", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "phone_code", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddHumanUserResponse {
    return new AddHumanUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddHumanUserResponse {
    return new AddHumanUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddHumanUserResponse {
    return new AddHumanUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddHumanUserResponse | PlainMessage<AddHumanUserResponse> | undefined, b: AddHumanUserResponse | PlainMessage<AddHumanUserResponse> | undefined): boolean {
    return proto3.util.equals(AddHumanUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.GetUserByIDRequest
 */
export class GetUserByIDRequest extends Message<GetUserByIDRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<GetUserByIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.GetUserByIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserByIDRequest {
    return new GetUserByIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserByIDRequest {
    return new GetUserByIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserByIDRequest {
    return new GetUserByIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserByIDRequest | PlainMessage<GetUserByIDRequest> | undefined, b: GetUserByIDRequest | PlainMessage<GetUserByIDRequest> | undefined): boolean {
    return proto3.util.equals(GetUserByIDRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.GetUserByIDResponse
 */
export class GetUserByIDResponse extends Message<GetUserByIDResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.user.v2beta.User user = 2;
   */
  user?: User;

  constructor(data?: PartialMessage<GetUserByIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.GetUserByIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "user", kind: "message", T: User },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserByIDResponse {
    return new GetUserByIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserByIDResponse {
    return new GetUserByIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserByIDResponse {
    return new GetUserByIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserByIDResponse | PlainMessage<GetUserByIDResponse> | undefined, b: GetUserByIDResponse | PlainMessage<GetUserByIDResponse> | undefined): boolean {
    return proto3.util.equals(GetUserByIDResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.ListUsersRequest
 */
export class ListUsersRequest extends Message<ListUsersRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.object.v2beta.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.user.v2beta.UserFieldName sorting_column = 2;
   */
  sortingColumn = UserFieldName.UNSPECIFIED;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.user.v2beta.SearchQuery queries = 3;
   */
  queries: SearchQuery[] = [];

  constructor(data?: PartialMessage<ListUsersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.ListUsersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(UserFieldName) },
    { no: 3, name: "queries", kind: "message", T: SearchQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersRequest {
    return new ListUsersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersRequest {
    return new ListUsersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersRequest {
    return new ListUsersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListUsersRequest | PlainMessage<ListUsersRequest> | undefined, b: ListUsersRequest | PlainMessage<ListUsersRequest> | undefined): boolean {
    return proto3.util.equals(ListUsersRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.ListUsersResponse
 */
export class ListUsersResponse extends Message<ListUsersResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: zitadel.user.v2beta.UserFieldName sorting_column = 2;
   */
  sortingColumn = UserFieldName.UNSPECIFIED;

  /**
   * @generated from field: repeated zitadel.user.v2beta.User result = 3;
   */
  result: User[] = [];

  constructor(data?: PartialMessage<ListUsersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.ListUsersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(UserFieldName) },
    { no: 3, name: "result", kind: "message", T: User, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined, b: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined): boolean {
    return proto3.util.equals(ListUsersResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.SetEmailRequest
 */
export class SetEmailRequest extends Message<SetEmailRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string email = 2;
   */
  email = "";

  /**
   * if no verification is specified, an email is sent with the default url
   *
   * @generated from oneof zitadel.user.v2beta.SetEmailRequest.verification
   */
  verification: {
    /**
     * @generated from field: zitadel.user.v2beta.SendEmailVerificationCode send_code = 3;
     */
    value: SendEmailVerificationCode;
    case: "sendCode";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.ReturnEmailVerificationCode return_code = 4;
     */
    value: ReturnEmailVerificationCode;
    case: "returnCode";
  } | {
    /**
     * @generated from field: bool is_verified = 5;
     */
    value: boolean;
    case: "isVerified";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SetEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.SetEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "send_code", kind: "message", T: SendEmailVerificationCode, oneof: "verification" },
    { no: 4, name: "return_code", kind: "message", T: ReturnEmailVerificationCode, oneof: "verification" },
    { no: 5, name: "is_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "verification" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetEmailRequest {
    return new SetEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetEmailRequest {
    return new SetEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetEmailRequest {
    return new SetEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetEmailRequest | PlainMessage<SetEmailRequest> | undefined, b: SetEmailRequest | PlainMessage<SetEmailRequest> | undefined): boolean {
    return proto3.util.equals(SetEmailRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.SetEmailResponse
 */
export class SetEmailResponse extends Message<SetEmailResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;

  constructor(data?: PartialMessage<SetEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.SetEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "verification_code", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetEmailResponse {
    return new SetEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetEmailResponse {
    return new SetEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetEmailResponse {
    return new SetEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetEmailResponse | PlainMessage<SetEmailResponse> | undefined, b: SetEmailResponse | PlainMessage<SetEmailResponse> | undefined): boolean {
    return proto3.util.equals(SetEmailResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.ResendEmailCodeRequest
 */
export class ResendEmailCodeRequest extends Message<ResendEmailCodeRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * if no verification is specified, an email is sent with the default url
   *
   * @generated from oneof zitadel.user.v2beta.ResendEmailCodeRequest.verification
   */
  verification: {
    /**
     * @generated from field: zitadel.user.v2beta.SendEmailVerificationCode send_code = 2;
     */
    value: SendEmailVerificationCode;
    case: "sendCode";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.ReturnEmailVerificationCode return_code = 3;
     */
    value: ReturnEmailVerificationCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ResendEmailCodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.ResendEmailCodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "send_code", kind: "message", T: SendEmailVerificationCode, oneof: "verification" },
    { no: 3, name: "return_code", kind: "message", T: ReturnEmailVerificationCode, oneof: "verification" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendEmailCodeRequest {
    return new ResendEmailCodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendEmailCodeRequest {
    return new ResendEmailCodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendEmailCodeRequest {
    return new ResendEmailCodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResendEmailCodeRequest | PlainMessage<ResendEmailCodeRequest> | undefined, b: ResendEmailCodeRequest | PlainMessage<ResendEmailCodeRequest> | undefined): boolean {
    return proto3.util.equals(ResendEmailCodeRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.ResendEmailCodeResponse
 */
export class ResendEmailCodeResponse extends Message<ResendEmailCodeResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;

  constructor(data?: PartialMessage<ResendEmailCodeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.ResendEmailCodeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "verification_code", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendEmailCodeResponse {
    return new ResendEmailCodeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendEmailCodeResponse {
    return new ResendEmailCodeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendEmailCodeResponse {
    return new ResendEmailCodeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResendEmailCodeResponse | PlainMessage<ResendEmailCodeResponse> | undefined, b: ResendEmailCodeResponse | PlainMessage<ResendEmailCodeResponse> | undefined): boolean {
    return proto3.util.equals(ResendEmailCodeResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.VerifyEmailRequest
 */
export class VerifyEmailRequest extends Message<VerifyEmailRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string verification_code = 2;
   */
  verificationCode = "";

  constructor(data?: PartialMessage<VerifyEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.VerifyEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "verification_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyEmailRequest {
    return new VerifyEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyEmailRequest {
    return new VerifyEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyEmailRequest {
    return new VerifyEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyEmailRequest | PlainMessage<VerifyEmailRequest> | undefined, b: VerifyEmailRequest | PlainMessage<VerifyEmailRequest> | undefined): boolean {
    return proto3.util.equals(VerifyEmailRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.VerifyEmailResponse
 */
export class VerifyEmailResponse extends Message<VerifyEmailResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<VerifyEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.VerifyEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyEmailResponse {
    return new VerifyEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyEmailResponse {
    return new VerifyEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyEmailResponse {
    return new VerifyEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyEmailResponse | PlainMessage<VerifyEmailResponse> | undefined, b: VerifyEmailResponse | PlainMessage<VerifyEmailResponse> | undefined): boolean {
    return proto3.util.equals(VerifyEmailResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.SetPhoneRequest
 */
export class SetPhoneRequest extends Message<SetPhoneRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string phone = 2;
   */
  phone = "";

  /**
   * if no verification is specified, an sms is sent
   *
   * @generated from oneof zitadel.user.v2beta.SetPhoneRequest.verification
   */
  verification: {
    /**
     * @generated from field: zitadel.user.v2beta.SendPhoneVerificationCode send_code = 3;
     */
    value: SendPhoneVerificationCode;
    case: "sendCode";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.ReturnPhoneVerificationCode return_code = 4;
     */
    value: ReturnPhoneVerificationCode;
    case: "returnCode";
  } | {
    /**
     * @generated from field: bool is_verified = 5;
     */
    value: boolean;
    case: "isVerified";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SetPhoneRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.SetPhoneRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "send_code", kind: "message", T: SendPhoneVerificationCode, oneof: "verification" },
    { no: 4, name: "return_code", kind: "message", T: ReturnPhoneVerificationCode, oneof: "verification" },
    { no: 5, name: "is_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "verification" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPhoneRequest {
    return new SetPhoneRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPhoneRequest {
    return new SetPhoneRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPhoneRequest {
    return new SetPhoneRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetPhoneRequest | PlainMessage<SetPhoneRequest> | undefined, b: SetPhoneRequest | PlainMessage<SetPhoneRequest> | undefined): boolean {
    return proto3.util.equals(SetPhoneRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.SetPhoneResponse
 */
export class SetPhoneResponse extends Message<SetPhoneResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;

  constructor(data?: PartialMessage<SetPhoneResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.SetPhoneResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "verification_code", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPhoneResponse {
    return new SetPhoneResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPhoneResponse {
    return new SetPhoneResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPhoneResponse {
    return new SetPhoneResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetPhoneResponse | PlainMessage<SetPhoneResponse> | undefined, b: SetPhoneResponse | PlainMessage<SetPhoneResponse> | undefined): boolean {
    return proto3.util.equals(SetPhoneResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.ResendPhoneCodeRequest
 */
export class ResendPhoneCodeRequest extends Message<ResendPhoneCodeRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * if no verification is specified, an sms is sent
   *
   * @generated from oneof zitadel.user.v2beta.ResendPhoneCodeRequest.verification
   */
  verification: {
    /**
     * @generated from field: zitadel.user.v2beta.SendPhoneVerificationCode send_code = 3;
     */
    value: SendPhoneVerificationCode;
    case: "sendCode";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.ReturnPhoneVerificationCode return_code = 4;
     */
    value: ReturnPhoneVerificationCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ResendPhoneCodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.ResendPhoneCodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "send_code", kind: "message", T: SendPhoneVerificationCode, oneof: "verification" },
    { no: 4, name: "return_code", kind: "message", T: ReturnPhoneVerificationCode, oneof: "verification" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendPhoneCodeRequest {
    return new ResendPhoneCodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendPhoneCodeRequest {
    return new ResendPhoneCodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendPhoneCodeRequest {
    return new ResendPhoneCodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResendPhoneCodeRequest | PlainMessage<ResendPhoneCodeRequest> | undefined, b: ResendPhoneCodeRequest | PlainMessage<ResendPhoneCodeRequest> | undefined): boolean {
    return proto3.util.equals(ResendPhoneCodeRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.ResendPhoneCodeResponse
 */
export class ResendPhoneCodeResponse extends Message<ResendPhoneCodeResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;

  constructor(data?: PartialMessage<ResendPhoneCodeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.ResendPhoneCodeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "verification_code", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendPhoneCodeResponse {
    return new ResendPhoneCodeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendPhoneCodeResponse {
    return new ResendPhoneCodeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendPhoneCodeResponse {
    return new ResendPhoneCodeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResendPhoneCodeResponse | PlainMessage<ResendPhoneCodeResponse> | undefined, b: ResendPhoneCodeResponse | PlainMessage<ResendPhoneCodeResponse> | undefined): boolean {
    return proto3.util.equals(ResendPhoneCodeResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.VerifyPhoneRequest
 */
export class VerifyPhoneRequest extends Message<VerifyPhoneRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string verification_code = 2;
   */
  verificationCode = "";

  constructor(data?: PartialMessage<VerifyPhoneRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.VerifyPhoneRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "verification_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyPhoneRequest {
    return new VerifyPhoneRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyPhoneRequest {
    return new VerifyPhoneRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyPhoneRequest {
    return new VerifyPhoneRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyPhoneRequest | PlainMessage<VerifyPhoneRequest> | undefined, b: VerifyPhoneRequest | PlainMessage<VerifyPhoneRequest> | undefined): boolean {
    return proto3.util.equals(VerifyPhoneRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.VerifyPhoneResponse
 */
export class VerifyPhoneResponse extends Message<VerifyPhoneResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<VerifyPhoneResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.VerifyPhoneResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyPhoneResponse {
    return new VerifyPhoneResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyPhoneResponse {
    return new VerifyPhoneResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyPhoneResponse {
    return new VerifyPhoneResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyPhoneResponse | PlainMessage<VerifyPhoneResponse> | undefined, b: VerifyPhoneResponse | PlainMessage<VerifyPhoneResponse> | undefined): boolean {
    return proto3.util.equals(VerifyPhoneResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.DeleteUserRequest
 */
export class DeleteUserRequest extends Message<DeleteUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<DeleteUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.DeleteUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserRequest {
    return new DeleteUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserRequest {
    return new DeleteUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserRequest {
    return new DeleteUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteUserRequest | PlainMessage<DeleteUserRequest> | undefined, b: DeleteUserRequest | PlainMessage<DeleteUserRequest> | undefined): boolean {
    return proto3.util.equals(DeleteUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.DeleteUserResponse
 */
export class DeleteUserResponse extends Message<DeleteUserResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<DeleteUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.DeleteUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserResponse {
    return new DeleteUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserResponse {
    return new DeleteUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserResponse {
    return new DeleteUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteUserResponse | PlainMessage<DeleteUserResponse> | undefined, b: DeleteUserResponse | PlainMessage<DeleteUserResponse> | undefined): boolean {
    return proto3.util.equals(DeleteUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.UpdateHumanUserRequest
 */
export class UpdateHumanUserRequest extends Message<UpdateHumanUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: optional string username = 2;
   */
  username?: string;

  /**
   * @generated from field: optional zitadel.user.v2beta.SetHumanProfile profile = 3;
   */
  profile?: SetHumanProfile;

  /**
   * @generated from field: optional zitadel.user.v2beta.SetHumanEmail email = 4;
   */
  email?: SetHumanEmail;

  /**
   * @generated from field: optional zitadel.user.v2beta.SetHumanPhone phone = 5;
   */
  phone?: SetHumanPhone;

  /**
   * @generated from field: optional zitadel.user.v2beta.SetPassword password = 6;
   */
  password?: SetPassword;

  constructor(data?: PartialMessage<UpdateHumanUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.UpdateHumanUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "profile", kind: "message", T: SetHumanProfile, opt: true },
    { no: 4, name: "email", kind: "message", T: SetHumanEmail, opt: true },
    { no: 5, name: "phone", kind: "message", T: SetHumanPhone, opt: true },
    { no: 6, name: "password", kind: "message", T: SetPassword, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateHumanUserRequest {
    return new UpdateHumanUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateHumanUserRequest {
    return new UpdateHumanUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateHumanUserRequest {
    return new UpdateHumanUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateHumanUserRequest | PlainMessage<UpdateHumanUserRequest> | undefined, b: UpdateHumanUserRequest | PlainMessage<UpdateHumanUserRequest> | undefined): boolean {
    return proto3.util.equals(UpdateHumanUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.UpdateHumanUserResponse
 */
export class UpdateHumanUserResponse extends Message<UpdateHumanUserResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: optional string email_code = 2;
   */
  emailCode?: string;

  /**
   * @generated from field: optional string phone_code = 3;
   */
  phoneCode?: string;

  constructor(data?: PartialMessage<UpdateHumanUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.UpdateHumanUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "email_code", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "phone_code", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateHumanUserResponse {
    return new UpdateHumanUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateHumanUserResponse {
    return new UpdateHumanUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateHumanUserResponse {
    return new UpdateHumanUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateHumanUserResponse | PlainMessage<UpdateHumanUserResponse> | undefined, b: UpdateHumanUserResponse | PlainMessage<UpdateHumanUserResponse> | undefined): boolean {
    return proto3.util.equals(UpdateHumanUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.DeactivateUserRequest
 */
export class DeactivateUserRequest extends Message<DeactivateUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<DeactivateUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.DeactivateUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateUserRequest {
    return new DeactivateUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateUserRequest {
    return new DeactivateUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateUserRequest {
    return new DeactivateUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateUserRequest | PlainMessage<DeactivateUserRequest> | undefined, b: DeactivateUserRequest | PlainMessage<DeactivateUserRequest> | undefined): boolean {
    return proto3.util.equals(DeactivateUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.DeactivateUserResponse
 */
export class DeactivateUserResponse extends Message<DeactivateUserResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<DeactivateUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.DeactivateUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateUserResponse {
    return new DeactivateUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateUserResponse {
    return new DeactivateUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateUserResponse {
    return new DeactivateUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateUserResponse | PlainMessage<DeactivateUserResponse> | undefined, b: DeactivateUserResponse | PlainMessage<DeactivateUserResponse> | undefined): boolean {
    return proto3.util.equals(DeactivateUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.ReactivateUserRequest
 */
export class ReactivateUserRequest extends Message<ReactivateUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<ReactivateUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.ReactivateUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateUserRequest {
    return new ReactivateUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateUserRequest {
    return new ReactivateUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateUserRequest {
    return new ReactivateUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateUserRequest | PlainMessage<ReactivateUserRequest> | undefined, b: ReactivateUserRequest | PlainMessage<ReactivateUserRequest> | undefined): boolean {
    return proto3.util.equals(ReactivateUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.ReactivateUserResponse
 */
export class ReactivateUserResponse extends Message<ReactivateUserResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<ReactivateUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.ReactivateUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateUserResponse {
    return new ReactivateUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateUserResponse {
    return new ReactivateUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateUserResponse {
    return new ReactivateUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateUserResponse | PlainMessage<ReactivateUserResponse> | undefined, b: ReactivateUserResponse | PlainMessage<ReactivateUserResponse> | undefined): boolean {
    return proto3.util.equals(ReactivateUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.LockUserRequest
 */
export class LockUserRequest extends Message<LockUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<LockUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.LockUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LockUserRequest {
    return new LockUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LockUserRequest {
    return new LockUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LockUserRequest {
    return new LockUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: LockUserRequest | PlainMessage<LockUserRequest> | undefined, b: LockUserRequest | PlainMessage<LockUserRequest> | undefined): boolean {
    return proto3.util.equals(LockUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.LockUserResponse
 */
export class LockUserResponse extends Message<LockUserResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<LockUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.LockUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LockUserResponse {
    return new LockUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LockUserResponse {
    return new LockUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LockUserResponse {
    return new LockUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: LockUserResponse | PlainMessage<LockUserResponse> | undefined, b: LockUserResponse | PlainMessage<LockUserResponse> | undefined): boolean {
    return proto3.util.equals(LockUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.UnlockUserRequest
 */
export class UnlockUserRequest extends Message<UnlockUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<UnlockUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.UnlockUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnlockUserRequest {
    return new UnlockUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnlockUserRequest {
    return new UnlockUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnlockUserRequest {
    return new UnlockUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UnlockUserRequest | PlainMessage<UnlockUserRequest> | undefined, b: UnlockUserRequest | PlainMessage<UnlockUserRequest> | undefined): boolean {
    return proto3.util.equals(UnlockUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.UnlockUserResponse
 */
export class UnlockUserResponse extends Message<UnlockUserResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<UnlockUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.UnlockUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnlockUserResponse {
    return new UnlockUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnlockUserResponse {
    return new UnlockUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnlockUserResponse {
    return new UnlockUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UnlockUserResponse | PlainMessage<UnlockUserResponse> | undefined, b: UnlockUserResponse | PlainMessage<UnlockUserResponse> | undefined): boolean {
    return proto3.util.equals(UnlockUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.RegisterPasskeyRequest
 */
export class RegisterPasskeyRequest extends Message<RegisterPasskeyRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: optional zitadel.user.v2beta.PasskeyRegistrationCode code = 2;
   */
  code?: PasskeyRegistrationCode;

  /**
   * @generated from field: zitadel.user.v2beta.PasskeyAuthenticator authenticator = 3;
   */
  authenticator = PasskeyAuthenticator.UNSPECIFIED;

  /**
   * @generated from field: string domain = 4;
   */
  domain = "";

  constructor(data?: PartialMessage<RegisterPasskeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.RegisterPasskeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "code", kind: "message", T: PasskeyRegistrationCode, opt: true },
    { no: 3, name: "authenticator", kind: "enum", T: proto3.getEnumType(PasskeyAuthenticator) },
    { no: 4, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterPasskeyRequest {
    return new RegisterPasskeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterPasskeyRequest {
    return new RegisterPasskeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterPasskeyRequest {
    return new RegisterPasskeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RegisterPasskeyRequest | PlainMessage<RegisterPasskeyRequest> | undefined, b: RegisterPasskeyRequest | PlainMessage<RegisterPasskeyRequest> | undefined): boolean {
    return proto3.util.equals(RegisterPasskeyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.RegisterPasskeyResponse
 */
export class RegisterPasskeyResponse extends Message<RegisterPasskeyResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: string passkey_id = 2;
   */
  passkeyId = "";

  /**
   * @generated from field: google.protobuf.Struct public_key_credential_creation_options = 3;
   */
  publicKeyCredentialCreationOptions?: Struct;

  constructor(data?: PartialMessage<RegisterPasskeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.RegisterPasskeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "passkey_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "public_key_credential_creation_options", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterPasskeyResponse {
    return new RegisterPasskeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterPasskeyResponse {
    return new RegisterPasskeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterPasskeyResponse {
    return new RegisterPasskeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RegisterPasskeyResponse | PlainMessage<RegisterPasskeyResponse> | undefined, b: RegisterPasskeyResponse | PlainMessage<RegisterPasskeyResponse> | undefined): boolean {
    return proto3.util.equals(RegisterPasskeyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.VerifyPasskeyRegistrationRequest
 */
export class VerifyPasskeyRegistrationRequest extends Message<VerifyPasskeyRegistrationRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string passkey_id = 2;
   */
  passkeyId = "";

  /**
   * @generated from field: google.protobuf.Struct public_key_credential = 3;
   */
  publicKeyCredential?: Struct;

  /**
   * @generated from field: string passkey_name = 4;
   */
  passkeyName = "";

  constructor(data?: PartialMessage<VerifyPasskeyRegistrationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.VerifyPasskeyRegistrationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "passkey_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "public_key_credential", kind: "message", T: Struct },
    { no: 4, name: "passkey_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyPasskeyRegistrationRequest {
    return new VerifyPasskeyRegistrationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyPasskeyRegistrationRequest {
    return new VerifyPasskeyRegistrationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyPasskeyRegistrationRequest {
    return new VerifyPasskeyRegistrationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyPasskeyRegistrationRequest | PlainMessage<VerifyPasskeyRegistrationRequest> | undefined, b: VerifyPasskeyRegistrationRequest | PlainMessage<VerifyPasskeyRegistrationRequest> | undefined): boolean {
    return proto3.util.equals(VerifyPasskeyRegistrationRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.VerifyPasskeyRegistrationResponse
 */
export class VerifyPasskeyRegistrationResponse extends Message<VerifyPasskeyRegistrationResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<VerifyPasskeyRegistrationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.VerifyPasskeyRegistrationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyPasskeyRegistrationResponse {
    return new VerifyPasskeyRegistrationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyPasskeyRegistrationResponse {
    return new VerifyPasskeyRegistrationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyPasskeyRegistrationResponse {
    return new VerifyPasskeyRegistrationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyPasskeyRegistrationResponse | PlainMessage<VerifyPasskeyRegistrationResponse> | undefined, b: VerifyPasskeyRegistrationResponse | PlainMessage<VerifyPasskeyRegistrationResponse> | undefined): boolean {
    return proto3.util.equals(VerifyPasskeyRegistrationResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.RegisterU2FRequest
 */
export class RegisterU2FRequest extends Message<RegisterU2FRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string domain = 2;
   */
  domain = "";

  constructor(data?: PartialMessage<RegisterU2FRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.RegisterU2FRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterU2FRequest {
    return new RegisterU2FRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterU2FRequest {
    return new RegisterU2FRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterU2FRequest {
    return new RegisterU2FRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RegisterU2FRequest | PlainMessage<RegisterU2FRequest> | undefined, b: RegisterU2FRequest | PlainMessage<RegisterU2FRequest> | undefined): boolean {
    return proto3.util.equals(RegisterU2FRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.RegisterU2FResponse
 */
export class RegisterU2FResponse extends Message<RegisterU2FResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: string u2f_id = 2;
   */
  u2fId = "";

  /**
   * @generated from field: google.protobuf.Struct public_key_credential_creation_options = 3;
   */
  publicKeyCredentialCreationOptions?: Struct;

  constructor(data?: PartialMessage<RegisterU2FResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.RegisterU2FResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "u2f_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "public_key_credential_creation_options", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterU2FResponse {
    return new RegisterU2FResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterU2FResponse {
    return new RegisterU2FResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterU2FResponse {
    return new RegisterU2FResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RegisterU2FResponse | PlainMessage<RegisterU2FResponse> | undefined, b: RegisterU2FResponse | PlainMessage<RegisterU2FResponse> | undefined): boolean {
    return proto3.util.equals(RegisterU2FResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.VerifyU2FRegistrationRequest
 */
export class VerifyU2FRegistrationRequest extends Message<VerifyU2FRegistrationRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string u2f_id = 2;
   */
  u2fId = "";

  /**
   * @generated from field: google.protobuf.Struct public_key_credential = 3;
   */
  publicKeyCredential?: Struct;

  /**
   * @generated from field: string token_name = 4;
   */
  tokenName = "";

  constructor(data?: PartialMessage<VerifyU2FRegistrationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.VerifyU2FRegistrationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "u2f_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "public_key_credential", kind: "message", T: Struct },
    { no: 4, name: "token_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyU2FRegistrationRequest {
    return new VerifyU2FRegistrationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyU2FRegistrationRequest {
    return new VerifyU2FRegistrationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyU2FRegistrationRequest {
    return new VerifyU2FRegistrationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyU2FRegistrationRequest | PlainMessage<VerifyU2FRegistrationRequest> | undefined, b: VerifyU2FRegistrationRequest | PlainMessage<VerifyU2FRegistrationRequest> | undefined): boolean {
    return proto3.util.equals(VerifyU2FRegistrationRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.VerifyU2FRegistrationResponse
 */
export class VerifyU2FRegistrationResponse extends Message<VerifyU2FRegistrationResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<VerifyU2FRegistrationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.VerifyU2FRegistrationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyU2FRegistrationResponse {
    return new VerifyU2FRegistrationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyU2FRegistrationResponse {
    return new VerifyU2FRegistrationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyU2FRegistrationResponse {
    return new VerifyU2FRegistrationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyU2FRegistrationResponse | PlainMessage<VerifyU2FRegistrationResponse> | undefined, b: VerifyU2FRegistrationResponse | PlainMessage<VerifyU2FRegistrationResponse> | undefined): boolean {
    return proto3.util.equals(VerifyU2FRegistrationResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.RegisterTOTPRequest
 */
export class RegisterTOTPRequest extends Message<RegisterTOTPRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<RegisterTOTPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.RegisterTOTPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterTOTPRequest {
    return new RegisterTOTPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterTOTPRequest {
    return new RegisterTOTPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterTOTPRequest {
    return new RegisterTOTPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RegisterTOTPRequest | PlainMessage<RegisterTOTPRequest> | undefined, b: RegisterTOTPRequest | PlainMessage<RegisterTOTPRequest> | undefined): boolean {
    return proto3.util.equals(RegisterTOTPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.RegisterTOTPResponse
 */
export class RegisterTOTPResponse extends Message<RegisterTOTPResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: string uri = 2;
   */
  uri = "";

  /**
   * @generated from field: string secret = 3;
   */
  secret = "";

  constructor(data?: PartialMessage<RegisterTOTPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.RegisterTOTPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterTOTPResponse {
    return new RegisterTOTPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterTOTPResponse {
    return new RegisterTOTPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterTOTPResponse {
    return new RegisterTOTPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RegisterTOTPResponse | PlainMessage<RegisterTOTPResponse> | undefined, b: RegisterTOTPResponse | PlainMessage<RegisterTOTPResponse> | undefined): boolean {
    return proto3.util.equals(RegisterTOTPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.VerifyTOTPRegistrationRequest
 */
export class VerifyTOTPRegistrationRequest extends Message<VerifyTOTPRegistrationRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string code = 2;
   */
  code = "";

  constructor(data?: PartialMessage<VerifyTOTPRegistrationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.VerifyTOTPRegistrationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyTOTPRegistrationRequest {
    return new VerifyTOTPRegistrationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyTOTPRegistrationRequest {
    return new VerifyTOTPRegistrationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyTOTPRegistrationRequest {
    return new VerifyTOTPRegistrationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyTOTPRegistrationRequest | PlainMessage<VerifyTOTPRegistrationRequest> | undefined, b: VerifyTOTPRegistrationRequest | PlainMessage<VerifyTOTPRegistrationRequest> | undefined): boolean {
    return proto3.util.equals(VerifyTOTPRegistrationRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.VerifyTOTPRegistrationResponse
 */
export class VerifyTOTPRegistrationResponse extends Message<VerifyTOTPRegistrationResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<VerifyTOTPRegistrationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.VerifyTOTPRegistrationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyTOTPRegistrationResponse {
    return new VerifyTOTPRegistrationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyTOTPRegistrationResponse {
    return new VerifyTOTPRegistrationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyTOTPRegistrationResponse {
    return new VerifyTOTPRegistrationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyTOTPRegistrationResponse | PlainMessage<VerifyTOTPRegistrationResponse> | undefined, b: VerifyTOTPRegistrationResponse | PlainMessage<VerifyTOTPRegistrationResponse> | undefined): boolean {
    return proto3.util.equals(VerifyTOTPRegistrationResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.AddOTPSMSRequest
 */
export class AddOTPSMSRequest extends Message<AddOTPSMSRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<AddOTPSMSRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.AddOTPSMSRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOTPSMSRequest {
    return new AddOTPSMSRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOTPSMSRequest {
    return new AddOTPSMSRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOTPSMSRequest {
    return new AddOTPSMSRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddOTPSMSRequest | PlainMessage<AddOTPSMSRequest> | undefined, b: AddOTPSMSRequest | PlainMessage<AddOTPSMSRequest> | undefined): boolean {
    return proto3.util.equals(AddOTPSMSRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.AddOTPSMSResponse
 */
export class AddOTPSMSResponse extends Message<AddOTPSMSResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<AddOTPSMSResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.AddOTPSMSResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOTPSMSResponse {
    return new AddOTPSMSResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOTPSMSResponse {
    return new AddOTPSMSResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOTPSMSResponse {
    return new AddOTPSMSResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddOTPSMSResponse | PlainMessage<AddOTPSMSResponse> | undefined, b: AddOTPSMSResponse | PlainMessage<AddOTPSMSResponse> | undefined): boolean {
    return proto3.util.equals(AddOTPSMSResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.RemoveOTPSMSRequest
 */
export class RemoveOTPSMSRequest extends Message<RemoveOTPSMSRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<RemoveOTPSMSRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.RemoveOTPSMSRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOTPSMSRequest {
    return new RemoveOTPSMSRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOTPSMSRequest {
    return new RemoveOTPSMSRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOTPSMSRequest {
    return new RemoveOTPSMSRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOTPSMSRequest | PlainMessage<RemoveOTPSMSRequest> | undefined, b: RemoveOTPSMSRequest | PlainMessage<RemoveOTPSMSRequest> | undefined): boolean {
    return proto3.util.equals(RemoveOTPSMSRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.RemoveOTPSMSResponse
 */
export class RemoveOTPSMSResponse extends Message<RemoveOTPSMSResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<RemoveOTPSMSResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.RemoveOTPSMSResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOTPSMSResponse {
    return new RemoveOTPSMSResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOTPSMSResponse {
    return new RemoveOTPSMSResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOTPSMSResponse {
    return new RemoveOTPSMSResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOTPSMSResponse | PlainMessage<RemoveOTPSMSResponse> | undefined, b: RemoveOTPSMSResponse | PlainMessage<RemoveOTPSMSResponse> | undefined): boolean {
    return proto3.util.equals(RemoveOTPSMSResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.AddOTPEmailRequest
 */
export class AddOTPEmailRequest extends Message<AddOTPEmailRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<AddOTPEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.AddOTPEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOTPEmailRequest {
    return new AddOTPEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOTPEmailRequest {
    return new AddOTPEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOTPEmailRequest {
    return new AddOTPEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddOTPEmailRequest | PlainMessage<AddOTPEmailRequest> | undefined, b: AddOTPEmailRequest | PlainMessage<AddOTPEmailRequest> | undefined): boolean {
    return proto3.util.equals(AddOTPEmailRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.AddOTPEmailResponse
 */
export class AddOTPEmailResponse extends Message<AddOTPEmailResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<AddOTPEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.AddOTPEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOTPEmailResponse {
    return new AddOTPEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOTPEmailResponse {
    return new AddOTPEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOTPEmailResponse {
    return new AddOTPEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddOTPEmailResponse | PlainMessage<AddOTPEmailResponse> | undefined, b: AddOTPEmailResponse | PlainMessage<AddOTPEmailResponse> | undefined): boolean {
    return proto3.util.equals(AddOTPEmailResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.RemoveOTPEmailRequest
 */
export class RemoveOTPEmailRequest extends Message<RemoveOTPEmailRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<RemoveOTPEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.RemoveOTPEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOTPEmailRequest {
    return new RemoveOTPEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOTPEmailRequest {
    return new RemoveOTPEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOTPEmailRequest {
    return new RemoveOTPEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOTPEmailRequest | PlainMessage<RemoveOTPEmailRequest> | undefined, b: RemoveOTPEmailRequest | PlainMessage<RemoveOTPEmailRequest> | undefined): boolean {
    return proto3.util.equals(RemoveOTPEmailRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.RemoveOTPEmailResponse
 */
export class RemoveOTPEmailResponse extends Message<RemoveOTPEmailResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<RemoveOTPEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.RemoveOTPEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOTPEmailResponse {
    return new RemoveOTPEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOTPEmailResponse {
    return new RemoveOTPEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOTPEmailResponse {
    return new RemoveOTPEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOTPEmailResponse | PlainMessage<RemoveOTPEmailResponse> | undefined, b: RemoveOTPEmailResponse | PlainMessage<RemoveOTPEmailResponse> | undefined): boolean {
    return proto3.util.equals(RemoveOTPEmailResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.CreatePasskeyRegistrationLinkRequest
 */
export class CreatePasskeyRegistrationLinkRequest extends Message<CreatePasskeyRegistrationLinkRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * if no medium is specified, an email is sent with the default url
   *
   * @generated from oneof zitadel.user.v2beta.CreatePasskeyRegistrationLinkRequest.medium
   */
  medium: {
    /**
     * @generated from field: zitadel.user.v2beta.SendPasskeyRegistrationLink send_link = 2;
     */
    value: SendPasskeyRegistrationLink;
    case: "sendLink";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.ReturnPasskeyRegistrationCode return_code = 3;
     */
    value: ReturnPasskeyRegistrationCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CreatePasskeyRegistrationLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.CreatePasskeyRegistrationLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "send_link", kind: "message", T: SendPasskeyRegistrationLink, oneof: "medium" },
    { no: 3, name: "return_code", kind: "message", T: ReturnPasskeyRegistrationCode, oneof: "medium" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePasskeyRegistrationLinkRequest {
    return new CreatePasskeyRegistrationLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePasskeyRegistrationLinkRequest {
    return new CreatePasskeyRegistrationLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePasskeyRegistrationLinkRequest {
    return new CreatePasskeyRegistrationLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePasskeyRegistrationLinkRequest | PlainMessage<CreatePasskeyRegistrationLinkRequest> | undefined, b: CreatePasskeyRegistrationLinkRequest | PlainMessage<CreatePasskeyRegistrationLinkRequest> | undefined): boolean {
    return proto3.util.equals(CreatePasskeyRegistrationLinkRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.CreatePasskeyRegistrationLinkResponse
 */
export class CreatePasskeyRegistrationLinkResponse extends Message<CreatePasskeyRegistrationLinkResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * in case the medium was set to return_code, the code will be returned
   *
   * @generated from field: optional zitadel.user.v2beta.PasskeyRegistrationCode code = 2;
   */
  code?: PasskeyRegistrationCode;

  constructor(data?: PartialMessage<CreatePasskeyRegistrationLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.CreatePasskeyRegistrationLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "code", kind: "message", T: PasskeyRegistrationCode, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePasskeyRegistrationLinkResponse {
    return new CreatePasskeyRegistrationLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePasskeyRegistrationLinkResponse {
    return new CreatePasskeyRegistrationLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePasskeyRegistrationLinkResponse {
    return new CreatePasskeyRegistrationLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePasskeyRegistrationLinkResponse | PlainMessage<CreatePasskeyRegistrationLinkResponse> | undefined, b: CreatePasskeyRegistrationLinkResponse | PlainMessage<CreatePasskeyRegistrationLinkResponse> | undefined): boolean {
    return proto3.util.equals(CreatePasskeyRegistrationLinkResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.StartIdentityProviderIntentRequest
 */
export class StartIdentityProviderIntentRequest extends Message<StartIdentityProviderIntentRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  /**
   * @generated from oneof zitadel.user.v2beta.StartIdentityProviderIntentRequest.content
   */
  content: {
    /**
     * @generated from field: zitadel.user.v2beta.RedirectURLs urls = 2;
     */
    value: RedirectURLs;
    case: "urls";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.LDAPCredentials ldap = 3;
     */
    value: LDAPCredentials;
    case: "ldap";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<StartIdentityProviderIntentRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.StartIdentityProviderIntentRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "urls", kind: "message", T: RedirectURLs, oneof: "content" },
    { no: 3, name: "ldap", kind: "message", T: LDAPCredentials, oneof: "content" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StartIdentityProviderIntentRequest {
    return new StartIdentityProviderIntentRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StartIdentityProviderIntentRequest {
    return new StartIdentityProviderIntentRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StartIdentityProviderIntentRequest {
    return new StartIdentityProviderIntentRequest().fromJsonString(jsonString, options);
  }

  static equals(a: StartIdentityProviderIntentRequest | PlainMessage<StartIdentityProviderIntentRequest> | undefined, b: StartIdentityProviderIntentRequest | PlainMessage<StartIdentityProviderIntentRequest> | undefined): boolean {
    return proto3.util.equals(StartIdentityProviderIntentRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.StartIdentityProviderIntentResponse
 */
export class StartIdentityProviderIntentResponse extends Message<StartIdentityProviderIntentResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from oneof zitadel.user.v2beta.StartIdentityProviderIntentResponse.next_step
   */
  nextStep: {
    /**
     * @generated from field: string auth_url = 2;
     */
    value: string;
    case: "authUrl";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.IDPIntent idp_intent = 3;
     */
    value: IDPIntent;
    case: "idpIntent";
  } | {
    /**
     * @generated from field: bytes post_form = 4;
     */
    value: Uint8Array;
    case: "postForm";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<StartIdentityProviderIntentResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.StartIdentityProviderIntentResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "auth_url", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "next_step" },
    { no: 3, name: "idp_intent", kind: "message", T: IDPIntent, oneof: "next_step" },
    { no: 4, name: "post_form", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "next_step" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StartIdentityProviderIntentResponse {
    return new StartIdentityProviderIntentResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StartIdentityProviderIntentResponse {
    return new StartIdentityProviderIntentResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StartIdentityProviderIntentResponse {
    return new StartIdentityProviderIntentResponse().fromJsonString(jsonString, options);
  }

  static equals(a: StartIdentityProviderIntentResponse | PlainMessage<StartIdentityProviderIntentResponse> | undefined, b: StartIdentityProviderIntentResponse | PlainMessage<StartIdentityProviderIntentResponse> | undefined): boolean {
    return proto3.util.equals(StartIdentityProviderIntentResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.RetrieveIdentityProviderIntentRequest
 */
export class RetrieveIdentityProviderIntentRequest extends Message<RetrieveIdentityProviderIntentRequest> {
  /**
   * @generated from field: string idp_intent_id = 1;
   */
  idpIntentId = "";

  /**
   * @generated from field: string idp_intent_token = 2;
   */
  idpIntentToken = "";

  constructor(data?: PartialMessage<RetrieveIdentityProviderIntentRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.RetrieveIdentityProviderIntentRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_intent_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "idp_intent_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RetrieveIdentityProviderIntentRequest {
    return new RetrieveIdentityProviderIntentRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RetrieveIdentityProviderIntentRequest {
    return new RetrieveIdentityProviderIntentRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RetrieveIdentityProviderIntentRequest {
    return new RetrieveIdentityProviderIntentRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RetrieveIdentityProviderIntentRequest | PlainMessage<RetrieveIdentityProviderIntentRequest> | undefined, b: RetrieveIdentityProviderIntentRequest | PlainMessage<RetrieveIdentityProviderIntentRequest> | undefined): boolean {
    return proto3.util.equals(RetrieveIdentityProviderIntentRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.RetrieveIdentityProviderIntentResponse
 */
export class RetrieveIdentityProviderIntentResponse extends Message<RetrieveIdentityProviderIntentResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.user.v2beta.IDPInformation idp_information = 2;
   */
  idpInformation?: IDPInformation;

  /**
   * @generated from field: string user_id = 3;
   */
  userId = "";

  constructor(data?: PartialMessage<RetrieveIdentityProviderIntentResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.RetrieveIdentityProviderIntentResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "idp_information", kind: "message", T: IDPInformation },
    { no: 3, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RetrieveIdentityProviderIntentResponse {
    return new RetrieveIdentityProviderIntentResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RetrieveIdentityProviderIntentResponse {
    return new RetrieveIdentityProviderIntentResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RetrieveIdentityProviderIntentResponse {
    return new RetrieveIdentityProviderIntentResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RetrieveIdentityProviderIntentResponse | PlainMessage<RetrieveIdentityProviderIntentResponse> | undefined, b: RetrieveIdentityProviderIntentResponse | PlainMessage<RetrieveIdentityProviderIntentResponse> | undefined): boolean {
    return proto3.util.equals(RetrieveIdentityProviderIntentResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.AddIDPLinkRequest
 */
export class AddIDPLinkRequest extends Message<AddIDPLinkRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: zitadel.user.v2beta.IDPLink idp_link = 2;
   */
  idpLink?: IDPLink;

  constructor(data?: PartialMessage<AddIDPLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.AddIDPLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "idp_link", kind: "message", T: IDPLink },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddIDPLinkRequest {
    return new AddIDPLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddIDPLinkRequest {
    return new AddIDPLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddIDPLinkRequest {
    return new AddIDPLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddIDPLinkRequest | PlainMessage<AddIDPLinkRequest> | undefined, b: AddIDPLinkRequest | PlainMessage<AddIDPLinkRequest> | undefined): boolean {
    return proto3.util.equals(AddIDPLinkRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.AddIDPLinkResponse
 */
export class AddIDPLinkResponse extends Message<AddIDPLinkResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<AddIDPLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.AddIDPLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddIDPLinkResponse {
    return new AddIDPLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddIDPLinkResponse {
    return new AddIDPLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddIDPLinkResponse {
    return new AddIDPLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddIDPLinkResponse | PlainMessage<AddIDPLinkResponse> | undefined, b: AddIDPLinkResponse | PlainMessage<AddIDPLinkResponse> | undefined): boolean {
    return proto3.util.equals(AddIDPLinkResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.PasswordResetRequest
 */
export class PasswordResetRequest extends Message<PasswordResetRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * if no medium is specified, an email is sent with the default url
   *
   * @generated from oneof zitadel.user.v2beta.PasswordResetRequest.medium
   */
  medium: {
    /**
     * @generated from field: zitadel.user.v2beta.SendPasswordResetLink send_link = 2;
     */
    value: SendPasswordResetLink;
    case: "sendLink";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.ReturnPasswordResetCode return_code = 3;
     */
    value: ReturnPasswordResetCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PasswordResetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.PasswordResetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "send_link", kind: "message", T: SendPasswordResetLink, oneof: "medium" },
    { no: 3, name: "return_code", kind: "message", T: ReturnPasswordResetCode, oneof: "medium" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PasswordResetRequest {
    return new PasswordResetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PasswordResetRequest {
    return new PasswordResetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PasswordResetRequest {
    return new PasswordResetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PasswordResetRequest | PlainMessage<PasswordResetRequest> | undefined, b: PasswordResetRequest | PlainMessage<PasswordResetRequest> | undefined): boolean {
    return proto3.util.equals(PasswordResetRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.PasswordResetResponse
 */
export class PasswordResetResponse extends Message<PasswordResetResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * in case the medium was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;

  constructor(data?: PartialMessage<PasswordResetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.PasswordResetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "verification_code", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PasswordResetResponse {
    return new PasswordResetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PasswordResetResponse {
    return new PasswordResetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PasswordResetResponse {
    return new PasswordResetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PasswordResetResponse | PlainMessage<PasswordResetResponse> | undefined, b: PasswordResetResponse | PlainMessage<PasswordResetResponse> | undefined): boolean {
    return proto3.util.equals(PasswordResetResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.SetPasswordRequest
 */
export class SetPasswordRequest extends Message<SetPasswordRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: zitadel.user.v2beta.Password new_password = 2;
   */
  newPassword?: Password;

  /**
   * if neither, the current password must be provided nor a verification code generated by the PasswordReset is provided,
   * the user must be granted permission to set a password
   *
   * @generated from oneof zitadel.user.v2beta.SetPasswordRequest.verification
   */
  verification: {
    /**
     * @generated from field: string current_password = 3;
     */
    value: string;
    case: "currentPassword";
  } | {
    /**
     * @generated from field: string verification_code = 4;
     */
    value: string;
    case: "verificationCode";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SetPasswordRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.SetPasswordRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "new_password", kind: "message", T: Password },
    { no: 3, name: "current_password", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "verification" },
    { no: 4, name: "verification_code", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "verification" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPasswordRequest {
    return new SetPasswordRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPasswordRequest {
    return new SetPasswordRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPasswordRequest {
    return new SetPasswordRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetPasswordRequest | PlainMessage<SetPasswordRequest> | undefined, b: SetPasswordRequest | PlainMessage<SetPasswordRequest> | undefined): boolean {
    return proto3.util.equals(SetPasswordRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.SetPasswordResponse
 */
export class SetPasswordResponse extends Message<SetPasswordResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<SetPasswordResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.SetPasswordResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPasswordResponse {
    return new SetPasswordResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPasswordResponse {
    return new SetPasswordResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPasswordResponse {
    return new SetPasswordResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetPasswordResponse | PlainMessage<SetPasswordResponse> | undefined, b: SetPasswordResponse | PlainMessage<SetPasswordResponse> | undefined): boolean {
    return proto3.util.equals(SetPasswordResponse, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.ListAuthenticationMethodTypesRequest
 */
export class ListAuthenticationMethodTypesRequest extends Message<ListAuthenticationMethodTypesRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<ListAuthenticationMethodTypesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.ListAuthenticationMethodTypesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAuthenticationMethodTypesRequest {
    return new ListAuthenticationMethodTypesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAuthenticationMethodTypesRequest {
    return new ListAuthenticationMethodTypesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAuthenticationMethodTypesRequest {
    return new ListAuthenticationMethodTypesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAuthenticationMethodTypesRequest | PlainMessage<ListAuthenticationMethodTypesRequest> | undefined, b: ListAuthenticationMethodTypesRequest | PlainMessage<ListAuthenticationMethodTypesRequest> | undefined): boolean {
    return proto3.util.equals(ListAuthenticationMethodTypesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.ListAuthenticationMethodTypesResponse
 */
export class ListAuthenticationMethodTypesResponse extends Message<ListAuthenticationMethodTypesResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.user.v2beta.AuthenticationMethodType auth_method_types = 2;
   */
  authMethodTypes: AuthenticationMethodType[] = [];

  constructor(data?: PartialMessage<ListAuthenticationMethodTypesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.ListAuthenticationMethodTypesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "auth_method_types", kind: "enum", T: proto3.getEnumType(AuthenticationMethodType), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAuthenticationMethodTypesResponse {
    return new ListAuthenticationMethodTypesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAuthenticationMethodTypesResponse {
    return new ListAuthenticationMethodTypesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAuthenticationMethodTypesResponse {
    return new ListAuthenticationMethodTypesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAuthenticationMethodTypesResponse | PlainMessage<ListAuthenticationMethodTypesResponse> | undefined, b: ListAuthenticationMethodTypesResponse | PlainMessage<ListAuthenticationMethodTypesResponse> | undefined): boolean {
    return proto3.util.equals(ListAuthenticationMethodTypesResponse, a, b);
  }
}

