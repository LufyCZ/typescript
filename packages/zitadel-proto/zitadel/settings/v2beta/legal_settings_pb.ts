// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/settings/v2beta/legal_settings.proto (package zitadel.settings.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { ResourceOwnerType } from "./settings_pb.js";

/**
 * @generated from message zitadel.settings.v2beta.LegalAndSupportSettings
 */
export class LegalAndSupportSettings extends Message<LegalAndSupportSettings> {
  /**
   * @generated from field: string tos_link = 1;
   */
  tosLink = "";

  /**
   * @generated from field: string privacy_policy_link = 2;
   */
  privacyPolicyLink = "";

  /**
   * @generated from field: string help_link = 3;
   */
  helpLink = "";

  /**
   * @generated from field: string support_email = 4;
   */
  supportEmail = "";

  /**
   * resource_owner_type returns if the setting is managed on the organization or on the instance
   *
   * @generated from field: zitadel.settings.v2beta.ResourceOwnerType resource_owner_type = 5;
   */
  resourceOwnerType = ResourceOwnerType.UNSPECIFIED;

  /**
   * @generated from field: string docs_link = 6;
   */
  docsLink = "";

  /**
   * @generated from field: string custom_link = 7;
   */
  customLink = "";

  /**
   * @generated from field: string custom_link_text = 8;
   */
  customLinkText = "";

  constructor(data?: PartialMessage<LegalAndSupportSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.LegalAndSupportSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tos_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "privacy_policy_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "help_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "support_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "resource_owner_type", kind: "enum", T: proto3.getEnumType(ResourceOwnerType) },
    { no: 6, name: "docs_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "custom_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "custom_link_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LegalAndSupportSettings {
    return new LegalAndSupportSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LegalAndSupportSettings {
    return new LegalAndSupportSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LegalAndSupportSettings {
    return new LegalAndSupportSettings().fromJsonString(jsonString, options);
  }

  static equals(a: LegalAndSupportSettings | PlainMessage<LegalAndSupportSettings> | undefined, b: LegalAndSupportSettings | PlainMessage<LegalAndSupportSettings> | undefined): boolean {
    return proto3.util.equals(LegalAndSupportSettings, a, b);
  }
}

