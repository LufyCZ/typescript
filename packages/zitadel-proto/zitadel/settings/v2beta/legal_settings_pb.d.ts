// @generated by protoc-gen-es v1.9.0
// @generated from file zitadel/settings/v2beta/legal_settings.proto (package zitadel.settings.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ResourceOwnerType } from "./settings_pb.js";

/**
 * @generated from message zitadel.settings.v2beta.LegalAndSupportSettings
 */
export declare class LegalAndSupportSettings extends Message<LegalAndSupportSettings> {
  /**
   * @generated from field: string tos_link = 1;
   */
  tosLink: string;

  /**
   * @generated from field: string privacy_policy_link = 2;
   */
  privacyPolicyLink: string;

  /**
   * @generated from field: string help_link = 3;
   */
  helpLink: string;

  /**
   * @generated from field: string support_email = 4;
   */
  supportEmail: string;

  /**
   * resource_owner_type returns if the setting is managed on the organization or on the instance
   *
   * @generated from field: zitadel.settings.v2beta.ResourceOwnerType resource_owner_type = 5;
   */
  resourceOwnerType: ResourceOwnerType;

  /**
   * @generated from field: string docs_link = 6;
   */
  docsLink: string;

  /**
   * @generated from field: string custom_link = 7;
   */
  customLink: string;

  /**
   * @generated from field: string custom_link_text = 8;
   */
  customLinkText: string;

  constructor(data?: PartialMessage<LegalAndSupportSettings>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.settings.v2beta.LegalAndSupportSettings";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LegalAndSupportSettings;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LegalAndSupportSettings;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LegalAndSupportSettings;

  static equals(a: LegalAndSupportSettings | PlainMessage<LegalAndSupportSettings> | undefined, b: LegalAndSupportSettings | PlainMessage<LegalAndSupportSettings> | undefined): boolean;
}

