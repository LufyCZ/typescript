// @generated by protoc-gen-es v1.10.0
// @generated from file zitadel/instance.proto (package zitadel.instance.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ObjectDetails, TextQueryMethod } from "./object_pb.js";

/**
 * @generated from enum zitadel.instance.v1.State
 */
export declare enum State {
  /**
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: STATE_CREATING = 1;
   */
  CREATING = 1,

  /**
   * @generated from enum value: STATE_RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * @generated from enum value: STATE_STOPPING = 3;
   */
  STOPPING = 3,

  /**
   * @generated from enum value: STATE_STOPPED = 4;
   */
  STOPPED = 4,
}

/**
 * @generated from enum zitadel.instance.v1.FieldName
 */
export declare enum FieldName {
  /**
   * @generated from enum value: FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FIELD_NAME_ID = 1;
   */
  ID = 1,

  /**
   * @generated from enum value: FIELD_NAME_NAME = 2;
   */
  NAME = 2,

  /**
   * @generated from enum value: FIELD_NAME_CREATION_DATE = 3;
   */
  CREATION_DATE = 3,
}

/**
 * @generated from enum zitadel.instance.v1.DomainFieldName
 */
export declare enum DomainFieldName {
  /**
   * @generated from enum value: DOMAIN_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DOMAIN_FIELD_NAME_DOMAIN = 1;
   */
  DOMAIN = 1,

  /**
   * @generated from enum value: DOMAIN_FIELD_NAME_PRIMARY = 2;
   */
  PRIMARY = 2,

  /**
   * @generated from enum value: DOMAIN_FIELD_NAME_GENERATED = 3;
   */
  GENERATED = 3,

  /**
   * @generated from enum value: DOMAIN_FIELD_NAME_CREATION_DATE = 4;
   */
  CREATION_DATE = 4,
}

/**
 * @generated from message zitadel.instance.v1.Instance
 */
export declare class Instance extends Message<Instance> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.instance.v1.State state = 3;
   */
  state: State;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string version = 5;
   */
  version: string;

  /**
   * @generated from field: repeated zitadel.instance.v1.Domain domains = 6;
   */
  domains: Domain[];

  constructor(data?: PartialMessage<Instance>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.instance.v1.Instance";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Instance;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Instance;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Instance;

  static equals(a: Instance | PlainMessage<Instance> | undefined, b: Instance | PlainMessage<Instance> | undefined): boolean;
}

/**
 * @generated from message zitadel.instance.v1.InstanceDetail
 */
export declare class InstanceDetail extends Message<InstanceDetail> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.instance.v1.State state = 3;
   */
  state: State;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string version = 5;
   */
  version: string;

  /**
   * @generated from field: repeated zitadel.instance.v1.Domain domains = 6;
   */
  domains: Domain[];

  constructor(data?: PartialMessage<InstanceDetail>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.instance.v1.InstanceDetail";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InstanceDetail;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InstanceDetail;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InstanceDetail;

  static equals(a: InstanceDetail | PlainMessage<InstanceDetail> | undefined, b: InstanceDetail | PlainMessage<InstanceDetail> | undefined): boolean;
}

/**
 * @generated from message zitadel.instance.v1.Query
 */
export declare class Query extends Message<Query> {
  /**
   * @generated from oneof zitadel.instance.v1.Query.query
   */
  query: {
    /**
     * @generated from field: zitadel.instance.v1.IdsQuery id_query = 1;
     */
    value: IdsQuery;
    case: "idQuery";
  } | {
    /**
     * @generated from field: zitadel.instance.v1.DomainsQuery domain_query = 2;
     */
    value: DomainsQuery;
    case: "domainQuery";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<Query>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.instance.v1.Query";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Query;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Query;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Query;

  static equals(a: Query | PlainMessage<Query> | undefined, b: Query | PlainMessage<Query> | undefined): boolean;
}

/**
 * IdQuery always equals
 *
 * @generated from message zitadel.instance.v1.IdsQuery
 */
export declare class IdsQuery extends Message<IdsQuery> {
  /**
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];

  constructor(data?: PartialMessage<IdsQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.instance.v1.IdsQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IdsQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IdsQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IdsQuery;

  static equals(a: IdsQuery | PlainMessage<IdsQuery> | undefined, b: IdsQuery | PlainMessage<IdsQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.instance.v1.DomainsQuery
 */
export declare class DomainsQuery extends Message<DomainsQuery> {
  /**
   * @generated from field: repeated string domains = 1;
   */
  domains: string[];

  constructor(data?: PartialMessage<DomainsQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.instance.v1.DomainsQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DomainsQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DomainsQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DomainsQuery;

  static equals(a: DomainsQuery | PlainMessage<DomainsQuery> | undefined, b: DomainsQuery | PlainMessage<DomainsQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.instance.v1.Domain
 */
export declare class Domain extends Message<Domain> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string domain = 2;
   */
  domain: string;

  /**
   * @generated from field: bool primary = 3;
   */
  primary: boolean;

  /**
   * @generated from field: bool generated = 4;
   */
  generated: boolean;

  constructor(data?: PartialMessage<Domain>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.instance.v1.Domain";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Domain;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Domain;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Domain;

  static equals(a: Domain | PlainMessage<Domain> | undefined, b: Domain | PlainMessage<Domain> | undefined): boolean;
}

/**
 * @generated from message zitadel.instance.v1.DomainSearchQuery
 */
export declare class DomainSearchQuery extends Message<DomainSearchQuery> {
  /**
   * @generated from oneof zitadel.instance.v1.DomainSearchQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.instance.v1.DomainQuery domain_query = 1;
     */
    value: DomainQuery;
    case: "domainQuery";
  } | {
    /**
     * @generated from field: zitadel.instance.v1.DomainGeneratedQuery generated_query = 2;
     */
    value: DomainGeneratedQuery;
    case: "generatedQuery";
  } | {
    /**
     * @generated from field: zitadel.instance.v1.DomainPrimaryQuery primary_query = 3;
     */
    value: DomainPrimaryQuery;
    case: "primaryQuery";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<DomainSearchQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.instance.v1.DomainSearchQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DomainSearchQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DomainSearchQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DomainSearchQuery;

  static equals(a: DomainSearchQuery | PlainMessage<DomainSearchQuery> | undefined, b: DomainSearchQuery | PlainMessage<DomainSearchQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.instance.v1.DomainQuery
 */
export declare class DomainQuery extends Message<DomainQuery> {
  /**
   * @generated from field: string domain = 1;
   */
  domain: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<DomainQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.instance.v1.DomainQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DomainQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DomainQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DomainQuery;

  static equals(a: DomainQuery | PlainMessage<DomainQuery> | undefined, b: DomainQuery | PlainMessage<DomainQuery> | undefined): boolean;
}

/**
 * DomainGeneratedQuery is always equals
 *
 * @generated from message zitadel.instance.v1.DomainGeneratedQuery
 */
export declare class DomainGeneratedQuery extends Message<DomainGeneratedQuery> {
  /**
   * @generated from field: bool generated = 1;
   */
  generated: boolean;

  constructor(data?: PartialMessage<DomainGeneratedQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.instance.v1.DomainGeneratedQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DomainGeneratedQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DomainGeneratedQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DomainGeneratedQuery;

  static equals(a: DomainGeneratedQuery | PlainMessage<DomainGeneratedQuery> | undefined, b: DomainGeneratedQuery | PlainMessage<DomainGeneratedQuery> | undefined): boolean;
}

/**
 * DomainPrimaryQuery is always equals
 *
 * @generated from message zitadel.instance.v1.DomainPrimaryQuery
 */
export declare class DomainPrimaryQuery extends Message<DomainPrimaryQuery> {
  /**
   * @generated from field: bool primary = 1;
   */
  primary: boolean;

  constructor(data?: PartialMessage<DomainPrimaryQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.instance.v1.DomainPrimaryQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DomainPrimaryQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DomainPrimaryQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DomainPrimaryQuery;

  static equals(a: DomainPrimaryQuery | PlainMessage<DomainPrimaryQuery> | undefined, b: DomainPrimaryQuery | PlainMessage<DomainPrimaryQuery> | undefined): boolean;
}

