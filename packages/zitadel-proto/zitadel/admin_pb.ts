// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/admin.proto (package zitadel.admin.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Duration, Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";
import { ListDetails, ListQuery, ObjectDetails } from "./object_pb.js";
import { Domain as Domain$1, Org, OrgFieldName, OrgQuery } from "./org_pb.js";
import { Domain, DomainFieldName, DomainSearchQuery, InstanceDetail } from "./instance_pb.js";
import { DebugNotificationProvider, OIDCSettings, SecretGenerator, SecretGeneratorQuery, SecretGeneratorType, SecurityPolicy, SMSProvider, SMTPConfig } from "./settings_pb.js";
import { Gender } from "./user_pb.js";
import { AzureADTenant, IDP, IDPFieldName, IDPIDQuery, IDPLoginPolicyLink, IDPNameQuery, IDPStylingType, IDPUserLink, LDAPAttributes, OIDCMappingField, Options, Provider, SAMLBinding, SAMLNameIDFormat } from "./idp_pb.js";
import { DomainPolicy, LabelPolicy, LockoutPolicy, LoginPolicy, MultiFactorType, NotificationPolicy, OrgIAMPolicy, PasswordAgePolicy, PasswordComplexityPolicy, PasswordlessType, PrivacyPolicy, SecondFactorType, ThemeMode } from "./policy_pb.js";
import { EmailVerificationDoneScreenText, EmailVerificationScreenText, ExternalRegistrationUserOverviewScreenText, ExternalUserNotFoundScreenText, FooterText, InitializeUserDoneScreenText, InitializeUserScreenText, InitMFADoneScreenText, InitMFAOTPScreenText, InitMFAPromptScreenText, InitMFAU2FScreenText, InitPasswordDoneScreenText, InitPasswordScreenText, LinkingUserDoneScreenText, LinkingUserPromptScreenText, LoginCustomText, LoginScreenText, LogoutDoneScreenText, MessageCustomText, MFAProvidersText, PasswordChangeDoneScreenText, PasswordChangeScreenText, PasswordlessPromptScreenText, PasswordlessRegistrationDoneScreenText, PasswordlessRegistrationScreenText, PasswordlessScreenText, PasswordResetDoneScreenText, PasswordScreenText, RegistrationOptionScreenText, RegistrationOrgScreenText, RegistrationUserScreenText, SelectAccountScreenText, SuccessLoginScreenText, UsernameChangeDoneScreenText, UsernameChangeScreenText, VerifyMFAOTPScreenText, VerifyMFAU2FScreenText } from "./text_pb.js";
import { Member, SearchQuery } from "./member_pb.js";
import { DataAction, DataAPIApplication, DataAppKey, DataHumanUser, DataJWTIDP, DataMachineKey, DataMachineUser, DataOIDCApplication, DataOIDCIDP, DataProject, DataProjectGrant, ImportDataOrg as ImportDataOrg$1 } from "./v1_pb.js";
import { AddCustomLabelPolicyRequest, AddCustomLockoutPolicyRequest, AddCustomLoginPolicyRequest, AddCustomPasswordComplexityPolicyRequest, AddCustomPrivacyPolicyRequest, AddOrgMemberRequest, AddOrgRequest, AddProjectGrantMemberRequest, AddProjectMemberRequest, AddProjectRoleRequest, AddUserGrantRequest, SetCustomDomainClaimedMessageTextRequest, SetCustomInitMessageTextRequest, SetCustomLoginTextsRequest as SetCustomLoginTextsRequest$1, SetCustomPasswordlessRegistrationMessageTextRequest, SetCustomPasswordResetMessageTextRequest, SetCustomVerifyEmailMessageTextRequest, SetCustomVerifyEmailOTPMessageTextRequest, SetCustomVerifyPhoneMessageTextRequest, SetCustomVerifySMSOTPMessageTextRequest, SetTriggerActionsRequest, SetUserMetadataRequest } from "./management_pb.js";
import { AggregateType, Event, EventType } from "./event_pb.js";
import { Milestone, MilestoneFieldName, MilestoneQuery } from "./milestone/v1/milestone_pb.js";

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.HealthzRequest
 */
export class HealthzRequest extends Message<HealthzRequest> {
  constructor(data?: PartialMessage<HealthzRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.HealthzRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HealthzRequest {
    return new HealthzRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HealthzRequest {
    return new HealthzRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HealthzRequest {
    return new HealthzRequest().fromJsonString(jsonString, options);
  }

  static equals(a: HealthzRequest | PlainMessage<HealthzRequest> | undefined, b: HealthzRequest | PlainMessage<HealthzRequest> | undefined): boolean {
    return proto3.util.equals(HealthzRequest, a, b);
  }
}

/**
 * This is an empty response
 *
 * @generated from message zitadel.admin.v1.HealthzResponse
 */
export class HealthzResponse extends Message<HealthzResponse> {
  constructor(data?: PartialMessage<HealthzResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.HealthzResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HealthzResponse {
    return new HealthzResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HealthzResponse {
    return new HealthzResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HealthzResponse {
    return new HealthzResponse().fromJsonString(jsonString, options);
  }

  static equals(a: HealthzResponse | PlainMessage<HealthzResponse> | undefined, b: HealthzResponse | PlainMessage<HealthzResponse> | undefined): boolean {
    return proto3.util.equals(HealthzResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetSupportedLanguagesRequest
 */
export class GetSupportedLanguagesRequest extends Message<GetSupportedLanguagesRequest> {
  constructor(data?: PartialMessage<GetSupportedLanguagesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetSupportedLanguagesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSupportedLanguagesRequest {
    return new GetSupportedLanguagesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSupportedLanguagesRequest {
    return new GetSupportedLanguagesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSupportedLanguagesRequest {
    return new GetSupportedLanguagesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSupportedLanguagesRequest | PlainMessage<GetSupportedLanguagesRequest> | undefined, b: GetSupportedLanguagesRequest | PlainMessage<GetSupportedLanguagesRequest> | undefined): boolean {
    return proto3.util.equals(GetSupportedLanguagesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetSupportedLanguagesResponse
 */
export class GetSupportedLanguagesResponse extends Message<GetSupportedLanguagesResponse> {
  /**
   * @generated from field: repeated string languages = 1;
   */
  languages: string[] = [];

  constructor(data?: PartialMessage<GetSupportedLanguagesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetSupportedLanguagesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "languages", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSupportedLanguagesResponse {
    return new GetSupportedLanguagesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSupportedLanguagesResponse {
    return new GetSupportedLanguagesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSupportedLanguagesResponse {
    return new GetSupportedLanguagesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSupportedLanguagesResponse | PlainMessage<GetSupportedLanguagesResponse> | undefined, b: GetSupportedLanguagesResponse | PlainMessage<GetSupportedLanguagesResponse> | undefined): boolean {
    return proto3.util.equals(GetSupportedLanguagesResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetAllowedLanguagesRequest
 */
export class GetAllowedLanguagesRequest extends Message<GetAllowedLanguagesRequest> {
  constructor(data?: PartialMessage<GetAllowedLanguagesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetAllowedLanguagesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllowedLanguagesRequest {
    return new GetAllowedLanguagesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllowedLanguagesRequest {
    return new GetAllowedLanguagesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllowedLanguagesRequest {
    return new GetAllowedLanguagesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAllowedLanguagesRequest | PlainMessage<GetAllowedLanguagesRequest> | undefined, b: GetAllowedLanguagesRequest | PlainMessage<GetAllowedLanguagesRequest> | undefined): boolean {
    return proto3.util.equals(GetAllowedLanguagesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetAllowedLanguagesResponse
 */
export class GetAllowedLanguagesResponse extends Message<GetAllowedLanguagesResponse> {
  /**
   * @generated from field: repeated string languages = 1;
   */
  languages: string[] = [];

  constructor(data?: PartialMessage<GetAllowedLanguagesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetAllowedLanguagesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "languages", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllowedLanguagesResponse {
    return new GetAllowedLanguagesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllowedLanguagesResponse {
    return new GetAllowedLanguagesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllowedLanguagesResponse {
    return new GetAllowedLanguagesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAllowedLanguagesResponse | PlainMessage<GetAllowedLanguagesResponse> | undefined, b: GetAllowedLanguagesResponse | PlainMessage<GetAllowedLanguagesResponse> | undefined): boolean {
    return proto3.util.equals(GetAllowedLanguagesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultLanguageRequest
 */
export class SetDefaultLanguageRequest extends Message<SetDefaultLanguageRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<SetDefaultLanguageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultLanguageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultLanguageRequest {
    return new SetDefaultLanguageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultLanguageRequest {
    return new SetDefaultLanguageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultLanguageRequest {
    return new SetDefaultLanguageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultLanguageRequest | PlainMessage<SetDefaultLanguageRequest> | undefined, b: SetDefaultLanguageRequest | PlainMessage<SetDefaultLanguageRequest> | undefined): boolean {
    return proto3.util.equals(SetDefaultLanguageRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultLanguageResponse
 */
export class SetDefaultLanguageResponse extends Message<SetDefaultLanguageResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetDefaultLanguageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultLanguageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultLanguageResponse {
    return new SetDefaultLanguageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultLanguageResponse {
    return new SetDefaultLanguageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultLanguageResponse {
    return new SetDefaultLanguageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultLanguageResponse | PlainMessage<SetDefaultLanguageResponse> | undefined, b: SetDefaultLanguageResponse | PlainMessage<SetDefaultLanguageResponse> | undefined): boolean {
    return proto3.util.equals(SetDefaultLanguageResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetDefaultLanguageRequest
 */
export class GetDefaultLanguageRequest extends Message<GetDefaultLanguageRequest> {
  constructor(data?: PartialMessage<GetDefaultLanguageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultLanguageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultLanguageRequest {
    return new GetDefaultLanguageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultLanguageRequest {
    return new GetDefaultLanguageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultLanguageRequest {
    return new GetDefaultLanguageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultLanguageRequest | PlainMessage<GetDefaultLanguageRequest> | undefined, b: GetDefaultLanguageRequest | PlainMessage<GetDefaultLanguageRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultLanguageRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultLanguageResponse
 */
export class GetDefaultLanguageResponse extends Message<GetDefaultLanguageResponse> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultLanguageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultLanguageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultLanguageResponse {
    return new GetDefaultLanguageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultLanguageResponse {
    return new GetDefaultLanguageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultLanguageResponse {
    return new GetDefaultLanguageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultLanguageResponse | PlainMessage<GetDefaultLanguageResponse> | undefined, b: GetDefaultLanguageResponse | PlainMessage<GetDefaultLanguageResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultLanguageResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultOrgRequest
 */
export class SetDefaultOrgRequest extends Message<SetDefaultOrgRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  constructor(data?: PartialMessage<SetDefaultOrgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultOrgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultOrgRequest {
    return new SetDefaultOrgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultOrgRequest {
    return new SetDefaultOrgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultOrgRequest {
    return new SetDefaultOrgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultOrgRequest | PlainMessage<SetDefaultOrgRequest> | undefined, b: SetDefaultOrgRequest | PlainMessage<SetDefaultOrgRequest> | undefined): boolean {
    return proto3.util.equals(SetDefaultOrgRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultOrgResponse
 */
export class SetDefaultOrgResponse extends Message<SetDefaultOrgResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetDefaultOrgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultOrgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultOrgResponse {
    return new SetDefaultOrgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultOrgResponse {
    return new SetDefaultOrgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultOrgResponse {
    return new SetDefaultOrgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultOrgResponse | PlainMessage<SetDefaultOrgResponse> | undefined, b: SetDefaultOrgResponse | PlainMessage<SetDefaultOrgResponse> | undefined): boolean {
    return proto3.util.equals(SetDefaultOrgResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetDefaultOrgRequest
 */
export class GetDefaultOrgRequest extends Message<GetDefaultOrgRequest> {
  constructor(data?: PartialMessage<GetDefaultOrgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultOrgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultOrgRequest {
    return new GetDefaultOrgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultOrgRequest {
    return new GetDefaultOrgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultOrgRequest {
    return new GetDefaultOrgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultOrgRequest | PlainMessage<GetDefaultOrgRequest> | undefined, b: GetDefaultOrgRequest | PlainMessage<GetDefaultOrgRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultOrgRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultOrgResponse
 */
export class GetDefaultOrgResponse extends Message<GetDefaultOrgResponse> {
  /**
   * @generated from field: zitadel.org.v1.Org org = 1;
   */
  org?: Org;

  constructor(data?: PartialMessage<GetDefaultOrgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultOrgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org", kind: "message", T: Org },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultOrgResponse {
    return new GetDefaultOrgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultOrgResponse {
    return new GetDefaultOrgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultOrgResponse {
    return new GetDefaultOrgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultOrgResponse | PlainMessage<GetDefaultOrgResponse> | undefined, b: GetDefaultOrgResponse | PlainMessage<GetDefaultOrgResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultOrgResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetMyInstanceRequest
 */
export class GetMyInstanceRequest extends Message<GetMyInstanceRequest> {
  constructor(data?: PartialMessage<GetMyInstanceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetMyInstanceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyInstanceRequest {
    return new GetMyInstanceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyInstanceRequest {
    return new GetMyInstanceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyInstanceRequest {
    return new GetMyInstanceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyInstanceRequest | PlainMessage<GetMyInstanceRequest> | undefined, b: GetMyInstanceRequest | PlainMessage<GetMyInstanceRequest> | undefined): boolean {
    return proto3.util.equals(GetMyInstanceRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetMyInstanceResponse
 */
export class GetMyInstanceResponse extends Message<GetMyInstanceResponse> {
  /**
   * @generated from field: zitadel.instance.v1.InstanceDetail instance = 1;
   */
  instance?: InstanceDetail;

  constructor(data?: PartialMessage<GetMyInstanceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetMyInstanceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "instance", kind: "message", T: InstanceDetail },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyInstanceResponse {
    return new GetMyInstanceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyInstanceResponse {
    return new GetMyInstanceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyInstanceResponse {
    return new GetMyInstanceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyInstanceResponse | PlainMessage<GetMyInstanceResponse> | undefined, b: GetMyInstanceResponse | PlainMessage<GetMyInstanceResponse> | undefined): boolean {
    return proto3.util.equals(GetMyInstanceResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListInstanceDomainsRequest
 */
export class ListInstanceDomainsRequest extends Message<ListInstanceDomainsRequest> {
  /**
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.instance.v1.DomainFieldName sorting_column = 2;
   */
  sortingColumn = DomainFieldName.UNSPECIFIED;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.instance.v1.DomainSearchQuery queries = 3;
   */
  queries: DomainSearchQuery[] = [];

  constructor(data?: PartialMessage<ListInstanceDomainsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListInstanceDomainsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(DomainFieldName) },
    { no: 3, name: "queries", kind: "message", T: DomainSearchQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListInstanceDomainsRequest {
    return new ListInstanceDomainsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListInstanceDomainsRequest {
    return new ListInstanceDomainsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListInstanceDomainsRequest {
    return new ListInstanceDomainsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListInstanceDomainsRequest | PlainMessage<ListInstanceDomainsRequest> | undefined, b: ListInstanceDomainsRequest | PlainMessage<ListInstanceDomainsRequest> | undefined): boolean {
    return proto3.util.equals(ListInstanceDomainsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListInstanceDomainsResponse
 */
export class ListInstanceDomainsResponse extends Message<ListInstanceDomainsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: zitadel.instance.v1.DomainFieldName sorting_column = 2;
   */
  sortingColumn = DomainFieldName.UNSPECIFIED;

  /**
   * @generated from field: repeated zitadel.instance.v1.Domain result = 3;
   */
  result: Domain[] = [];

  constructor(data?: PartialMessage<ListInstanceDomainsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListInstanceDomainsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(DomainFieldName) },
    { no: 3, name: "result", kind: "message", T: Domain, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListInstanceDomainsResponse {
    return new ListInstanceDomainsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListInstanceDomainsResponse {
    return new ListInstanceDomainsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListInstanceDomainsResponse {
    return new ListInstanceDomainsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListInstanceDomainsResponse | PlainMessage<ListInstanceDomainsResponse> | undefined, b: ListInstanceDomainsResponse | PlainMessage<ListInstanceDomainsResponse> | undefined): boolean {
    return proto3.util.equals(ListInstanceDomainsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListSecretGeneratorsRequest
 */
export class ListSecretGeneratorsRequest extends Message<ListSecretGeneratorsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.settings.v1.SecretGeneratorQuery queries = 2;
   */
  queries: SecretGeneratorQuery[] = [];

  constructor(data?: PartialMessage<ListSecretGeneratorsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListSecretGeneratorsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: SecretGeneratorQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSecretGeneratorsRequest {
    return new ListSecretGeneratorsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSecretGeneratorsRequest {
    return new ListSecretGeneratorsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSecretGeneratorsRequest {
    return new ListSecretGeneratorsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListSecretGeneratorsRequest | PlainMessage<ListSecretGeneratorsRequest> | undefined, b: ListSecretGeneratorsRequest | PlainMessage<ListSecretGeneratorsRequest> | undefined): boolean {
    return proto3.util.equals(ListSecretGeneratorsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListSecretGeneratorsResponse
 */
export class ListSecretGeneratorsResponse extends Message<ListSecretGeneratorsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.settings.v1.SecretGenerator result = 3;
   */
  result: SecretGenerator[] = [];

  constructor(data?: PartialMessage<ListSecretGeneratorsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListSecretGeneratorsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 3, name: "result", kind: "message", T: SecretGenerator, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSecretGeneratorsResponse {
    return new ListSecretGeneratorsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSecretGeneratorsResponse {
    return new ListSecretGeneratorsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSecretGeneratorsResponse {
    return new ListSecretGeneratorsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListSecretGeneratorsResponse | PlainMessage<ListSecretGeneratorsResponse> | undefined, b: ListSecretGeneratorsResponse | PlainMessage<ListSecretGeneratorsResponse> | undefined): boolean {
    return proto3.util.equals(ListSecretGeneratorsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetSecretGeneratorRequest
 */
export class GetSecretGeneratorRequest extends Message<GetSecretGeneratorRequest> {
  /**
   * @generated from field: zitadel.settings.v1.SecretGeneratorType generator_type = 1;
   */
  generatorType = SecretGeneratorType.UNSPECIFIED;

  constructor(data?: PartialMessage<GetSecretGeneratorRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetSecretGeneratorRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "generator_type", kind: "enum", T: proto3.getEnumType(SecretGeneratorType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSecretGeneratorRequest {
    return new GetSecretGeneratorRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSecretGeneratorRequest {
    return new GetSecretGeneratorRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSecretGeneratorRequest {
    return new GetSecretGeneratorRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSecretGeneratorRequest | PlainMessage<GetSecretGeneratorRequest> | undefined, b: GetSecretGeneratorRequest | PlainMessage<GetSecretGeneratorRequest> | undefined): boolean {
    return proto3.util.equals(GetSecretGeneratorRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetSecretGeneratorResponse
 */
export class GetSecretGeneratorResponse extends Message<GetSecretGeneratorResponse> {
  /**
   * @generated from field: zitadel.settings.v1.SecretGenerator secret_generator = 1;
   */
  secretGenerator?: SecretGenerator;

  constructor(data?: PartialMessage<GetSecretGeneratorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetSecretGeneratorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "secret_generator", kind: "message", T: SecretGenerator },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSecretGeneratorResponse {
    return new GetSecretGeneratorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSecretGeneratorResponse {
    return new GetSecretGeneratorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSecretGeneratorResponse {
    return new GetSecretGeneratorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSecretGeneratorResponse | PlainMessage<GetSecretGeneratorResponse> | undefined, b: GetSecretGeneratorResponse | PlainMessage<GetSecretGeneratorResponse> | undefined): boolean {
    return proto3.util.equals(GetSecretGeneratorResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateSecretGeneratorRequest
 */
export class UpdateSecretGeneratorRequest extends Message<UpdateSecretGeneratorRequest> {
  /**
   * @generated from field: zitadel.settings.v1.SecretGeneratorType generator_type = 1;
   */
  generatorType = SecretGeneratorType.UNSPECIFIED;

  /**
   * @generated from field: uint32 length = 2;
   */
  length = 0;

  /**
   * @generated from field: google.protobuf.Duration expiry = 3;
   */
  expiry?: Duration;

  /**
   * @generated from field: bool include_lower_letters = 4;
   */
  includeLowerLetters = false;

  /**
   * @generated from field: bool include_upper_letters = 5;
   */
  includeUpperLetters = false;

  /**
   * @generated from field: bool include_digits = 6;
   */
  includeDigits = false;

  /**
   * @generated from field: bool include_symbols = 7;
   */
  includeSymbols = false;

  constructor(data?: PartialMessage<UpdateSecretGeneratorRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateSecretGeneratorRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "generator_type", kind: "enum", T: proto3.getEnumType(SecretGeneratorType) },
    { no: 2, name: "length", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "expiry", kind: "message", T: Duration },
    { no: 4, name: "include_lower_letters", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "include_upper_letters", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "include_digits", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "include_symbols", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSecretGeneratorRequest {
    return new UpdateSecretGeneratorRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSecretGeneratorRequest {
    return new UpdateSecretGeneratorRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSecretGeneratorRequest {
    return new UpdateSecretGeneratorRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSecretGeneratorRequest | PlainMessage<UpdateSecretGeneratorRequest> | undefined, b: UpdateSecretGeneratorRequest | PlainMessage<UpdateSecretGeneratorRequest> | undefined): boolean {
    return proto3.util.equals(UpdateSecretGeneratorRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateSecretGeneratorResponse
 */
export class UpdateSecretGeneratorResponse extends Message<UpdateSecretGeneratorResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateSecretGeneratorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateSecretGeneratorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSecretGeneratorResponse {
    return new UpdateSecretGeneratorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSecretGeneratorResponse {
    return new UpdateSecretGeneratorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSecretGeneratorResponse {
    return new UpdateSecretGeneratorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSecretGeneratorResponse | PlainMessage<UpdateSecretGeneratorResponse> | undefined, b: UpdateSecretGeneratorResponse | PlainMessage<UpdateSecretGeneratorResponse> | undefined): boolean {
    return proto3.util.equals(UpdateSecretGeneratorResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetSMTPConfigRequest
 */
export class GetSMTPConfigRequest extends Message<GetSMTPConfigRequest> {
  constructor(data?: PartialMessage<GetSMTPConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetSMTPConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSMTPConfigRequest {
    return new GetSMTPConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSMTPConfigRequest {
    return new GetSMTPConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSMTPConfigRequest {
    return new GetSMTPConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSMTPConfigRequest | PlainMessage<GetSMTPConfigRequest> | undefined, b: GetSMTPConfigRequest | PlainMessage<GetSMTPConfigRequest> | undefined): boolean {
    return proto3.util.equals(GetSMTPConfigRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetSMTPConfigResponse
 */
export class GetSMTPConfigResponse extends Message<GetSMTPConfigResponse> {
  /**
   * @generated from field: zitadel.settings.v1.SMTPConfig smtp_config = 1;
   */
  smtpConfig?: SMTPConfig;

  constructor(data?: PartialMessage<GetSMTPConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetSMTPConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "smtp_config", kind: "message", T: SMTPConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSMTPConfigResponse {
    return new GetSMTPConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSMTPConfigResponse {
    return new GetSMTPConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSMTPConfigResponse {
    return new GetSMTPConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSMTPConfigResponse | PlainMessage<GetSMTPConfigResponse> | undefined, b: GetSMTPConfigResponse | PlainMessage<GetSMTPConfigResponse> | undefined): boolean {
    return proto3.util.equals(GetSMTPConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetSMTPConfigByIdRequest
 */
export class GetSMTPConfigByIdRequest extends Message<GetSMTPConfigByIdRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetSMTPConfigByIdRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetSMTPConfigByIdRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSMTPConfigByIdRequest {
    return new GetSMTPConfigByIdRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSMTPConfigByIdRequest {
    return new GetSMTPConfigByIdRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSMTPConfigByIdRequest {
    return new GetSMTPConfigByIdRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSMTPConfigByIdRequest | PlainMessage<GetSMTPConfigByIdRequest> | undefined, b: GetSMTPConfigByIdRequest | PlainMessage<GetSMTPConfigByIdRequest> | undefined): boolean {
    return proto3.util.equals(GetSMTPConfigByIdRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetSMTPConfigByIdResponse
 */
export class GetSMTPConfigByIdResponse extends Message<GetSMTPConfigByIdResponse> {
  /**
   * @generated from field: zitadel.settings.v1.SMTPConfig smtp_config = 1;
   */
  smtpConfig?: SMTPConfig;

  constructor(data?: PartialMessage<GetSMTPConfigByIdResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetSMTPConfigByIdResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "smtp_config", kind: "message", T: SMTPConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSMTPConfigByIdResponse {
    return new GetSMTPConfigByIdResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSMTPConfigByIdResponse {
    return new GetSMTPConfigByIdResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSMTPConfigByIdResponse {
    return new GetSMTPConfigByIdResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSMTPConfigByIdResponse | PlainMessage<GetSMTPConfigByIdResponse> | undefined, b: GetSMTPConfigByIdResponse | PlainMessage<GetSMTPConfigByIdResponse> | undefined): boolean {
    return proto3.util.equals(GetSMTPConfigByIdResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListSMTPConfigsRequest
 */
export class ListSMTPConfigsRequest extends Message<ListSMTPConfigsRequest> {
  /**
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  constructor(data?: PartialMessage<ListSMTPConfigsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListSMTPConfigsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSMTPConfigsRequest {
    return new ListSMTPConfigsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSMTPConfigsRequest {
    return new ListSMTPConfigsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSMTPConfigsRequest {
    return new ListSMTPConfigsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListSMTPConfigsRequest | PlainMessage<ListSMTPConfigsRequest> | undefined, b: ListSMTPConfigsRequest | PlainMessage<ListSMTPConfigsRequest> | undefined): boolean {
    return proto3.util.equals(ListSMTPConfigsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListSMTPConfigsResponse
 */
export class ListSMTPConfigsResponse extends Message<ListSMTPConfigsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.settings.v1.SMTPConfig result = 2;
   */
  result: SMTPConfig[] = [];

  constructor(data?: PartialMessage<ListSMTPConfigsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListSMTPConfigsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: SMTPConfig, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSMTPConfigsResponse {
    return new ListSMTPConfigsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSMTPConfigsResponse {
    return new ListSMTPConfigsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSMTPConfigsResponse {
    return new ListSMTPConfigsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListSMTPConfigsResponse | PlainMessage<ListSMTPConfigsResponse> | undefined, b: ListSMTPConfigsResponse | PlainMessage<ListSMTPConfigsResponse> | undefined): boolean {
    return proto3.util.equals(ListSMTPConfigsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddSMTPConfigRequest
 */
export class AddSMTPConfigRequest extends Message<AddSMTPConfigRequest> {
  /**
   * @generated from field: string sender_address = 1;
   */
  senderAddress = "";

  /**
   * @generated from field: string sender_name = 2;
   */
  senderName = "";

  /**
   * @generated from field: bool tls = 3;
   */
  tls = false;

  /**
   * @generated from field: string host = 4;
   */
  host = "";

  /**
   * @generated from field: string user = 5;
   */
  user = "";

  /**
   * @generated from field: string password = 6;
   */
  password = "";

  /**
   * @generated from field: string reply_to_address = 7;
   */
  replyToAddress = "";

  /**
   * @generated from field: string description = 8;
   */
  description = "";

  constructor(data?: PartialMessage<AddSMTPConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddSMTPConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sender_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "tls", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "host", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "reply_to_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSMTPConfigRequest {
    return new AddSMTPConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSMTPConfigRequest {
    return new AddSMTPConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSMTPConfigRequest {
    return new AddSMTPConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddSMTPConfigRequest | PlainMessage<AddSMTPConfigRequest> | undefined, b: AddSMTPConfigRequest | PlainMessage<AddSMTPConfigRequest> | undefined): boolean {
    return proto3.util.equals(AddSMTPConfigRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddSMTPConfigResponse
 */
export class AddSMTPConfigResponse extends Message<AddSMTPConfigResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddSMTPConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddSMTPConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSMTPConfigResponse {
    return new AddSMTPConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSMTPConfigResponse {
    return new AddSMTPConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSMTPConfigResponse {
    return new AddSMTPConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddSMTPConfigResponse | PlainMessage<AddSMTPConfigResponse> | undefined, b: AddSMTPConfigResponse | PlainMessage<AddSMTPConfigResponse> | undefined): boolean {
    return proto3.util.equals(AddSMTPConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateSMTPConfigRequest
 */
export class UpdateSMTPConfigRequest extends Message<UpdateSMTPConfigRequest> {
  /**
   * @generated from field: string sender_address = 1;
   */
  senderAddress = "";

  /**
   * @generated from field: string sender_name = 2;
   */
  senderName = "";

  /**
   * @generated from field: bool tls = 3;
   */
  tls = false;

  /**
   * @generated from field: string host = 4;
   */
  host = "";

  /**
   * @generated from field: string user = 5;
   */
  user = "";

  /**
   * @generated from field: string reply_to_address = 6;
   */
  replyToAddress = "";

  /**
   * @generated from field: string password = 7;
   */
  password = "";

  /**
   * @generated from field: string description = 8;
   */
  description = "";

  /**
   * @generated from field: string id = 9;
   */
  id = "";

  constructor(data?: PartialMessage<UpdateSMTPConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateSMTPConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sender_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "tls", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "host", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "reply_to_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSMTPConfigRequest {
    return new UpdateSMTPConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSMTPConfigRequest {
    return new UpdateSMTPConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSMTPConfigRequest {
    return new UpdateSMTPConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSMTPConfigRequest | PlainMessage<UpdateSMTPConfigRequest> | undefined, b: UpdateSMTPConfigRequest | PlainMessage<UpdateSMTPConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateSMTPConfigRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateSMTPConfigResponse
 */
export class UpdateSMTPConfigResponse extends Message<UpdateSMTPConfigResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateSMTPConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateSMTPConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSMTPConfigResponse {
    return new UpdateSMTPConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSMTPConfigResponse {
    return new UpdateSMTPConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSMTPConfigResponse {
    return new UpdateSMTPConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSMTPConfigResponse | PlainMessage<UpdateSMTPConfigResponse> | undefined, b: UpdateSMTPConfigResponse | PlainMessage<UpdateSMTPConfigResponse> | undefined): boolean {
    return proto3.util.equals(UpdateSMTPConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateSMTPConfigPasswordRequest
 */
export class UpdateSMTPConfigPasswordRequest extends Message<UpdateSMTPConfigPasswordRequest> {
  /**
   * @generated from field: string password = 1;
   */
  password = "";

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<UpdateSMTPConfigPasswordRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateSMTPConfigPasswordRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSMTPConfigPasswordRequest {
    return new UpdateSMTPConfigPasswordRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSMTPConfigPasswordRequest {
    return new UpdateSMTPConfigPasswordRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSMTPConfigPasswordRequest {
    return new UpdateSMTPConfigPasswordRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSMTPConfigPasswordRequest | PlainMessage<UpdateSMTPConfigPasswordRequest> | undefined, b: UpdateSMTPConfigPasswordRequest | PlainMessage<UpdateSMTPConfigPasswordRequest> | undefined): boolean {
    return proto3.util.equals(UpdateSMTPConfigPasswordRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateSMTPConfigPasswordResponse
 */
export class UpdateSMTPConfigPasswordResponse extends Message<UpdateSMTPConfigPasswordResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateSMTPConfigPasswordResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateSMTPConfigPasswordResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSMTPConfigPasswordResponse {
    return new UpdateSMTPConfigPasswordResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSMTPConfigPasswordResponse {
    return new UpdateSMTPConfigPasswordResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSMTPConfigPasswordResponse {
    return new UpdateSMTPConfigPasswordResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSMTPConfigPasswordResponse | PlainMessage<UpdateSMTPConfigPasswordResponse> | undefined, b: UpdateSMTPConfigPasswordResponse | PlainMessage<UpdateSMTPConfigPasswordResponse> | undefined): boolean {
    return proto3.util.equals(UpdateSMTPConfigPasswordResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ActivateSMTPConfigRequest
 */
export class ActivateSMTPConfigRequest extends Message<ActivateSMTPConfigRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<ActivateSMTPConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ActivateSMTPConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivateSMTPConfigRequest {
    return new ActivateSMTPConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivateSMTPConfigRequest {
    return new ActivateSMTPConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivateSMTPConfigRequest {
    return new ActivateSMTPConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ActivateSMTPConfigRequest | PlainMessage<ActivateSMTPConfigRequest> | undefined, b: ActivateSMTPConfigRequest | PlainMessage<ActivateSMTPConfigRequest> | undefined): boolean {
    return proto3.util.equals(ActivateSMTPConfigRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ActivateSMTPConfigResponse
 */
export class ActivateSMTPConfigResponse extends Message<ActivateSMTPConfigResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ActivateSMTPConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ActivateSMTPConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivateSMTPConfigResponse {
    return new ActivateSMTPConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivateSMTPConfigResponse {
    return new ActivateSMTPConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivateSMTPConfigResponse {
    return new ActivateSMTPConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ActivateSMTPConfigResponse | PlainMessage<ActivateSMTPConfigResponse> | undefined, b: ActivateSMTPConfigResponse | PlainMessage<ActivateSMTPConfigResponse> | undefined): boolean {
    return proto3.util.equals(ActivateSMTPConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.DeactivateSMTPConfigRequest
 */
export class DeactivateSMTPConfigRequest extends Message<DeactivateSMTPConfigRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeactivateSMTPConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.DeactivateSMTPConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateSMTPConfigRequest {
    return new DeactivateSMTPConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateSMTPConfigRequest {
    return new DeactivateSMTPConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateSMTPConfigRequest {
    return new DeactivateSMTPConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateSMTPConfigRequest | PlainMessage<DeactivateSMTPConfigRequest> | undefined, b: DeactivateSMTPConfigRequest | PlainMessage<DeactivateSMTPConfigRequest> | undefined): boolean {
    return proto3.util.equals(DeactivateSMTPConfigRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.DeactivateSMTPConfigResponse
 */
export class DeactivateSMTPConfigResponse extends Message<DeactivateSMTPConfigResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<DeactivateSMTPConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.DeactivateSMTPConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateSMTPConfigResponse {
    return new DeactivateSMTPConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateSMTPConfigResponse {
    return new DeactivateSMTPConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateSMTPConfigResponse {
    return new DeactivateSMTPConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateSMTPConfigResponse | PlainMessage<DeactivateSMTPConfigResponse> | undefined, b: DeactivateSMTPConfigResponse | PlainMessage<DeactivateSMTPConfigResponse> | undefined): boolean {
    return proto3.util.equals(DeactivateSMTPConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveSMTPConfigRequest
 */
export class RemoveSMTPConfigRequest extends Message<RemoveSMTPConfigRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<RemoveSMTPConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveSMTPConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveSMTPConfigRequest {
    return new RemoveSMTPConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveSMTPConfigRequest {
    return new RemoveSMTPConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveSMTPConfigRequest {
    return new RemoveSMTPConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveSMTPConfigRequest | PlainMessage<RemoveSMTPConfigRequest> | undefined, b: RemoveSMTPConfigRequest | PlainMessage<RemoveSMTPConfigRequest> | undefined): boolean {
    return proto3.util.equals(RemoveSMTPConfigRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveSMTPConfigResponse
 */
export class RemoveSMTPConfigResponse extends Message<RemoveSMTPConfigResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveSMTPConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveSMTPConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveSMTPConfigResponse {
    return new RemoveSMTPConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveSMTPConfigResponse {
    return new RemoveSMTPConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveSMTPConfigResponse {
    return new RemoveSMTPConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveSMTPConfigResponse | PlainMessage<RemoveSMTPConfigResponse> | undefined, b: RemoveSMTPConfigResponse | PlainMessage<RemoveSMTPConfigResponse> | undefined): boolean {
    return proto3.util.equals(RemoveSMTPConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.TestSMTPConfigByIdRequest
 */
export class TestSMTPConfigByIdRequest extends Message<TestSMTPConfigByIdRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string receiver_address = 2;
   */
  receiverAddress = "";

  constructor(data?: PartialMessage<TestSMTPConfigByIdRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.TestSMTPConfigByIdRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "receiver_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestSMTPConfigByIdRequest {
    return new TestSMTPConfigByIdRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestSMTPConfigByIdRequest {
    return new TestSMTPConfigByIdRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestSMTPConfigByIdRequest {
    return new TestSMTPConfigByIdRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TestSMTPConfigByIdRequest | PlainMessage<TestSMTPConfigByIdRequest> | undefined, b: TestSMTPConfigByIdRequest | PlainMessage<TestSMTPConfigByIdRequest> | undefined): boolean {
    return proto3.util.equals(TestSMTPConfigByIdRequest, a, b);
  }
}

/**
 * This is an empty response
 *
 * @generated from message zitadel.admin.v1.TestSMTPConfigByIdResponse
 */
export class TestSMTPConfigByIdResponse extends Message<TestSMTPConfigByIdResponse> {
  constructor(data?: PartialMessage<TestSMTPConfigByIdResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.TestSMTPConfigByIdResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestSMTPConfigByIdResponse {
    return new TestSMTPConfigByIdResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestSMTPConfigByIdResponse {
    return new TestSMTPConfigByIdResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestSMTPConfigByIdResponse {
    return new TestSMTPConfigByIdResponse().fromJsonString(jsonString, options);
  }

  static equals(a: TestSMTPConfigByIdResponse | PlainMessage<TestSMTPConfigByIdResponse> | undefined, b: TestSMTPConfigByIdResponse | PlainMessage<TestSMTPConfigByIdResponse> | undefined): boolean {
    return proto3.util.equals(TestSMTPConfigByIdResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.TestSMTPConfigRequest
 */
export class TestSMTPConfigRequest extends Message<TestSMTPConfigRequest> {
  /**
   * @generated from field: string sender_address = 1;
   */
  senderAddress = "";

  /**
   * @generated from field: string sender_name = 2;
   */
  senderName = "";

  /**
   * @generated from field: bool tls = 3;
   */
  tls = false;

  /**
   * @generated from field: string host = 4;
   */
  host = "";

  /**
   * @generated from field: string user = 5;
   */
  user = "";

  /**
   * @generated from field: string password = 6;
   */
  password = "";

  /**
   * @generated from field: string receiver_address = 7;
   */
  receiverAddress = "";

  /**
   * @generated from field: string id = 8;
   */
  id = "";

  constructor(data?: PartialMessage<TestSMTPConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.TestSMTPConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sender_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "tls", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "host", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "receiver_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestSMTPConfigRequest {
    return new TestSMTPConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestSMTPConfigRequest {
    return new TestSMTPConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestSMTPConfigRequest {
    return new TestSMTPConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TestSMTPConfigRequest | PlainMessage<TestSMTPConfigRequest> | undefined, b: TestSMTPConfigRequest | PlainMessage<TestSMTPConfigRequest> | undefined): boolean {
    return proto3.util.equals(TestSMTPConfigRequest, a, b);
  }
}

/**
 * This is an empty response
 *
 * @generated from message zitadel.admin.v1.TestSMTPConfigResponse
 */
export class TestSMTPConfigResponse extends Message<TestSMTPConfigResponse> {
  constructor(data?: PartialMessage<TestSMTPConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.TestSMTPConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestSMTPConfigResponse {
    return new TestSMTPConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestSMTPConfigResponse {
    return new TestSMTPConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestSMTPConfigResponse {
    return new TestSMTPConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: TestSMTPConfigResponse | PlainMessage<TestSMTPConfigResponse> | undefined, b: TestSMTPConfigResponse | PlainMessage<TestSMTPConfigResponse> | undefined): boolean {
    return proto3.util.equals(TestSMTPConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListSMSProvidersRequest
 */
export class ListSMSProvidersRequest extends Message<ListSMSProvidersRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  constructor(data?: PartialMessage<ListSMSProvidersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListSMSProvidersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSMSProvidersRequest {
    return new ListSMSProvidersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSMSProvidersRequest {
    return new ListSMSProvidersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSMSProvidersRequest {
    return new ListSMSProvidersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListSMSProvidersRequest | PlainMessage<ListSMSProvidersRequest> | undefined, b: ListSMSProvidersRequest | PlainMessage<ListSMSProvidersRequest> | undefined): boolean {
    return proto3.util.equals(ListSMSProvidersRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListSMSProvidersResponse
 */
export class ListSMSProvidersResponse extends Message<ListSMSProvidersResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.settings.v1.SMSProvider result = 3;
   */
  result: SMSProvider[] = [];

  constructor(data?: PartialMessage<ListSMSProvidersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListSMSProvidersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 3, name: "result", kind: "message", T: SMSProvider, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSMSProvidersResponse {
    return new ListSMSProvidersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSMSProvidersResponse {
    return new ListSMSProvidersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSMSProvidersResponse {
    return new ListSMSProvidersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListSMSProvidersResponse | PlainMessage<ListSMSProvidersResponse> | undefined, b: ListSMSProvidersResponse | PlainMessage<ListSMSProvidersResponse> | undefined): boolean {
    return proto3.util.equals(ListSMSProvidersResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetSMSProviderRequest
 */
export class GetSMSProviderRequest extends Message<GetSMSProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetSMSProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetSMSProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSMSProviderRequest {
    return new GetSMSProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSMSProviderRequest {
    return new GetSMSProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSMSProviderRequest {
    return new GetSMSProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSMSProviderRequest | PlainMessage<GetSMSProviderRequest> | undefined, b: GetSMSProviderRequest | PlainMessage<GetSMSProviderRequest> | undefined): boolean {
    return proto3.util.equals(GetSMSProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetSMSProviderResponse
 */
export class GetSMSProviderResponse extends Message<GetSMSProviderResponse> {
  /**
   * @generated from field: zitadel.settings.v1.SMSProvider config = 1;
   */
  config?: SMSProvider;

  constructor(data?: PartialMessage<GetSMSProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetSMSProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "config", kind: "message", T: SMSProvider },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSMSProviderResponse {
    return new GetSMSProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSMSProviderResponse {
    return new GetSMSProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSMSProviderResponse {
    return new GetSMSProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSMSProviderResponse | PlainMessage<GetSMSProviderResponse> | undefined, b: GetSMSProviderResponse | PlainMessage<GetSMSProviderResponse> | undefined): boolean {
    return proto3.util.equals(GetSMSProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddSMSProviderTwilioRequest
 */
export class AddSMSProviderTwilioRequest extends Message<AddSMSProviderTwilioRequest> {
  /**
   * @generated from field: string sid = 1;
   */
  sid = "";

  /**
   * @generated from field: string token = 2;
   */
  token = "";

  /**
   * @generated from field: string sender_number = 3;
   */
  senderNumber = "";

  constructor(data?: PartialMessage<AddSMSProviderTwilioRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddSMSProviderTwilioRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "sender_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSMSProviderTwilioRequest {
    return new AddSMSProviderTwilioRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSMSProviderTwilioRequest {
    return new AddSMSProviderTwilioRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSMSProviderTwilioRequest {
    return new AddSMSProviderTwilioRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddSMSProviderTwilioRequest | PlainMessage<AddSMSProviderTwilioRequest> | undefined, b: AddSMSProviderTwilioRequest | PlainMessage<AddSMSProviderTwilioRequest> | undefined): boolean {
    return proto3.util.equals(AddSMSProviderTwilioRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddSMSProviderTwilioResponse
 */
export class AddSMSProviderTwilioResponse extends Message<AddSMSProviderTwilioResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddSMSProviderTwilioResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddSMSProviderTwilioResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSMSProviderTwilioResponse {
    return new AddSMSProviderTwilioResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSMSProviderTwilioResponse {
    return new AddSMSProviderTwilioResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSMSProviderTwilioResponse {
    return new AddSMSProviderTwilioResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddSMSProviderTwilioResponse | PlainMessage<AddSMSProviderTwilioResponse> | undefined, b: AddSMSProviderTwilioResponse | PlainMessage<AddSMSProviderTwilioResponse> | undefined): boolean {
    return proto3.util.equals(AddSMSProviderTwilioResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateSMSProviderTwilioRequest
 */
export class UpdateSMSProviderTwilioRequest extends Message<UpdateSMSProviderTwilioRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string sid = 2;
   */
  sid = "";

  /**
   * @generated from field: string sender_number = 3;
   */
  senderNumber = "";

  constructor(data?: PartialMessage<UpdateSMSProviderTwilioRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateSMSProviderTwilioRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "sender_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSMSProviderTwilioRequest {
    return new UpdateSMSProviderTwilioRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSMSProviderTwilioRequest {
    return new UpdateSMSProviderTwilioRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSMSProviderTwilioRequest {
    return new UpdateSMSProviderTwilioRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSMSProviderTwilioRequest | PlainMessage<UpdateSMSProviderTwilioRequest> | undefined, b: UpdateSMSProviderTwilioRequest | PlainMessage<UpdateSMSProviderTwilioRequest> | undefined): boolean {
    return proto3.util.equals(UpdateSMSProviderTwilioRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateSMSProviderTwilioResponse
 */
export class UpdateSMSProviderTwilioResponse extends Message<UpdateSMSProviderTwilioResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateSMSProviderTwilioResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateSMSProviderTwilioResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSMSProviderTwilioResponse {
    return new UpdateSMSProviderTwilioResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSMSProviderTwilioResponse {
    return new UpdateSMSProviderTwilioResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSMSProviderTwilioResponse {
    return new UpdateSMSProviderTwilioResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSMSProviderTwilioResponse | PlainMessage<UpdateSMSProviderTwilioResponse> | undefined, b: UpdateSMSProviderTwilioResponse | PlainMessage<UpdateSMSProviderTwilioResponse> | undefined): boolean {
    return proto3.util.equals(UpdateSMSProviderTwilioResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateSMSProviderTwilioTokenRequest
 */
export class UpdateSMSProviderTwilioTokenRequest extends Message<UpdateSMSProviderTwilioTokenRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string token = 2;
   */
  token = "";

  constructor(data?: PartialMessage<UpdateSMSProviderTwilioTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateSMSProviderTwilioTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSMSProviderTwilioTokenRequest {
    return new UpdateSMSProviderTwilioTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSMSProviderTwilioTokenRequest {
    return new UpdateSMSProviderTwilioTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSMSProviderTwilioTokenRequest {
    return new UpdateSMSProviderTwilioTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSMSProviderTwilioTokenRequest | PlainMessage<UpdateSMSProviderTwilioTokenRequest> | undefined, b: UpdateSMSProviderTwilioTokenRequest | PlainMessage<UpdateSMSProviderTwilioTokenRequest> | undefined): boolean {
    return proto3.util.equals(UpdateSMSProviderTwilioTokenRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateSMSProviderTwilioTokenResponse
 */
export class UpdateSMSProviderTwilioTokenResponse extends Message<UpdateSMSProviderTwilioTokenResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateSMSProviderTwilioTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateSMSProviderTwilioTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSMSProviderTwilioTokenResponse {
    return new UpdateSMSProviderTwilioTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSMSProviderTwilioTokenResponse {
    return new UpdateSMSProviderTwilioTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSMSProviderTwilioTokenResponse {
    return new UpdateSMSProviderTwilioTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSMSProviderTwilioTokenResponse | PlainMessage<UpdateSMSProviderTwilioTokenResponse> | undefined, b: UpdateSMSProviderTwilioTokenResponse | PlainMessage<UpdateSMSProviderTwilioTokenResponse> | undefined): boolean {
    return proto3.util.equals(UpdateSMSProviderTwilioTokenResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ActivateSMSProviderRequest
 */
export class ActivateSMSProviderRequest extends Message<ActivateSMSProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<ActivateSMSProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ActivateSMSProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivateSMSProviderRequest {
    return new ActivateSMSProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivateSMSProviderRequest {
    return new ActivateSMSProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivateSMSProviderRequest {
    return new ActivateSMSProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ActivateSMSProviderRequest | PlainMessage<ActivateSMSProviderRequest> | undefined, b: ActivateSMSProviderRequest | PlainMessage<ActivateSMSProviderRequest> | undefined): boolean {
    return proto3.util.equals(ActivateSMSProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ActivateSMSProviderResponse
 */
export class ActivateSMSProviderResponse extends Message<ActivateSMSProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ActivateSMSProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ActivateSMSProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivateSMSProviderResponse {
    return new ActivateSMSProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivateSMSProviderResponse {
    return new ActivateSMSProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivateSMSProviderResponse {
    return new ActivateSMSProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ActivateSMSProviderResponse | PlainMessage<ActivateSMSProviderResponse> | undefined, b: ActivateSMSProviderResponse | PlainMessage<ActivateSMSProviderResponse> | undefined): boolean {
    return proto3.util.equals(ActivateSMSProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.DeactivateSMSProviderRequest
 */
export class DeactivateSMSProviderRequest extends Message<DeactivateSMSProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeactivateSMSProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.DeactivateSMSProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateSMSProviderRequest {
    return new DeactivateSMSProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateSMSProviderRequest {
    return new DeactivateSMSProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateSMSProviderRequest {
    return new DeactivateSMSProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateSMSProviderRequest | PlainMessage<DeactivateSMSProviderRequest> | undefined, b: DeactivateSMSProviderRequest | PlainMessage<DeactivateSMSProviderRequest> | undefined): boolean {
    return proto3.util.equals(DeactivateSMSProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.DeactivateSMSProviderResponse
 */
export class DeactivateSMSProviderResponse extends Message<DeactivateSMSProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<DeactivateSMSProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.DeactivateSMSProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateSMSProviderResponse {
    return new DeactivateSMSProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateSMSProviderResponse {
    return new DeactivateSMSProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateSMSProviderResponse {
    return new DeactivateSMSProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateSMSProviderResponse | PlainMessage<DeactivateSMSProviderResponse> | undefined, b: DeactivateSMSProviderResponse | PlainMessage<DeactivateSMSProviderResponse> | undefined): boolean {
    return proto3.util.equals(DeactivateSMSProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveSMSProviderRequest
 */
export class RemoveSMSProviderRequest extends Message<RemoveSMSProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<RemoveSMSProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveSMSProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveSMSProviderRequest {
    return new RemoveSMSProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveSMSProviderRequest {
    return new RemoveSMSProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveSMSProviderRequest {
    return new RemoveSMSProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveSMSProviderRequest | PlainMessage<RemoveSMSProviderRequest> | undefined, b: RemoveSMSProviderRequest | PlainMessage<RemoveSMSProviderRequest> | undefined): boolean {
    return proto3.util.equals(RemoveSMSProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveSMSProviderResponse
 */
export class RemoveSMSProviderResponse extends Message<RemoveSMSProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveSMSProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveSMSProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveSMSProviderResponse {
    return new RemoveSMSProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveSMSProviderResponse {
    return new RemoveSMSProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveSMSProviderResponse {
    return new RemoveSMSProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveSMSProviderResponse | PlainMessage<RemoveSMSProviderResponse> | undefined, b: RemoveSMSProviderResponse | PlainMessage<RemoveSMSProviderResponse> | undefined): boolean {
    return proto3.util.equals(RemoveSMSProviderResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetFileSystemNotificationProviderRequest
 */
export class GetFileSystemNotificationProviderRequest extends Message<GetFileSystemNotificationProviderRequest> {
  constructor(data?: PartialMessage<GetFileSystemNotificationProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetFileSystemNotificationProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFileSystemNotificationProviderRequest {
    return new GetFileSystemNotificationProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFileSystemNotificationProviderRequest {
    return new GetFileSystemNotificationProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFileSystemNotificationProviderRequest {
    return new GetFileSystemNotificationProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetFileSystemNotificationProviderRequest | PlainMessage<GetFileSystemNotificationProviderRequest> | undefined, b: GetFileSystemNotificationProviderRequest | PlainMessage<GetFileSystemNotificationProviderRequest> | undefined): boolean {
    return proto3.util.equals(GetFileSystemNotificationProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetFileSystemNotificationProviderResponse
 */
export class GetFileSystemNotificationProviderResponse extends Message<GetFileSystemNotificationProviderResponse> {
  /**
   * @generated from field: zitadel.settings.v1.DebugNotificationProvider provider = 1;
   */
  provider?: DebugNotificationProvider;

  constructor(data?: PartialMessage<GetFileSystemNotificationProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetFileSystemNotificationProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "provider", kind: "message", T: DebugNotificationProvider },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFileSystemNotificationProviderResponse {
    return new GetFileSystemNotificationProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFileSystemNotificationProviderResponse {
    return new GetFileSystemNotificationProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFileSystemNotificationProviderResponse {
    return new GetFileSystemNotificationProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetFileSystemNotificationProviderResponse | PlainMessage<GetFileSystemNotificationProviderResponse> | undefined, b: GetFileSystemNotificationProviderResponse | PlainMessage<GetFileSystemNotificationProviderResponse> | undefined): boolean {
    return proto3.util.equals(GetFileSystemNotificationProviderResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetLogNotificationProviderRequest
 */
export class GetLogNotificationProviderRequest extends Message<GetLogNotificationProviderRequest> {
  constructor(data?: PartialMessage<GetLogNotificationProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetLogNotificationProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLogNotificationProviderRequest {
    return new GetLogNotificationProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLogNotificationProviderRequest {
    return new GetLogNotificationProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLogNotificationProviderRequest {
    return new GetLogNotificationProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetLogNotificationProviderRequest | PlainMessage<GetLogNotificationProviderRequest> | undefined, b: GetLogNotificationProviderRequest | PlainMessage<GetLogNotificationProviderRequest> | undefined): boolean {
    return proto3.util.equals(GetLogNotificationProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetLogNotificationProviderResponse
 */
export class GetLogNotificationProviderResponse extends Message<GetLogNotificationProviderResponse> {
  /**
   * @generated from field: zitadel.settings.v1.DebugNotificationProvider provider = 1;
   */
  provider?: DebugNotificationProvider;

  constructor(data?: PartialMessage<GetLogNotificationProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetLogNotificationProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "provider", kind: "message", T: DebugNotificationProvider },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLogNotificationProviderResponse {
    return new GetLogNotificationProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLogNotificationProviderResponse {
    return new GetLogNotificationProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLogNotificationProviderResponse {
    return new GetLogNotificationProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetLogNotificationProviderResponse | PlainMessage<GetLogNotificationProviderResponse> | undefined, b: GetLogNotificationProviderResponse | PlainMessage<GetLogNotificationProviderResponse> | undefined): boolean {
    return proto3.util.equals(GetLogNotificationProviderResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetOIDCSettingsRequest
 */
export class GetOIDCSettingsRequest extends Message<GetOIDCSettingsRequest> {
  constructor(data?: PartialMessage<GetOIDCSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetOIDCSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOIDCSettingsRequest {
    return new GetOIDCSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOIDCSettingsRequest {
    return new GetOIDCSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOIDCSettingsRequest {
    return new GetOIDCSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOIDCSettingsRequest | PlainMessage<GetOIDCSettingsRequest> | undefined, b: GetOIDCSettingsRequest | PlainMessage<GetOIDCSettingsRequest> | undefined): boolean {
    return proto3.util.equals(GetOIDCSettingsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetOIDCSettingsResponse
 */
export class GetOIDCSettingsResponse extends Message<GetOIDCSettingsResponse> {
  /**
   * @generated from field: zitadel.settings.v1.OIDCSettings settings = 1;
   */
  settings?: OIDCSettings;

  constructor(data?: PartialMessage<GetOIDCSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetOIDCSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "settings", kind: "message", T: OIDCSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOIDCSettingsResponse {
    return new GetOIDCSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOIDCSettingsResponse {
    return new GetOIDCSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOIDCSettingsResponse {
    return new GetOIDCSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOIDCSettingsResponse | PlainMessage<GetOIDCSettingsResponse> | undefined, b: GetOIDCSettingsResponse | PlainMessage<GetOIDCSettingsResponse> | undefined): boolean {
    return proto3.util.equals(GetOIDCSettingsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddOIDCSettingsRequest
 */
export class AddOIDCSettingsRequest extends Message<AddOIDCSettingsRequest> {
  /**
   * @generated from field: google.protobuf.Duration access_token_lifetime = 1;
   */
  accessTokenLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration id_token_lifetime = 2;
   */
  idTokenLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration refresh_token_idle_expiration = 3;
   */
  refreshTokenIdleExpiration?: Duration;

  /**
   * @generated from field: google.protobuf.Duration refresh_token_expiration = 4;
   */
  refreshTokenExpiration?: Duration;

  constructor(data?: PartialMessage<AddOIDCSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddOIDCSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_token_lifetime", kind: "message", T: Duration },
    { no: 2, name: "id_token_lifetime", kind: "message", T: Duration },
    { no: 3, name: "refresh_token_idle_expiration", kind: "message", T: Duration },
    { no: 4, name: "refresh_token_expiration", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOIDCSettingsRequest {
    return new AddOIDCSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOIDCSettingsRequest {
    return new AddOIDCSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOIDCSettingsRequest {
    return new AddOIDCSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddOIDCSettingsRequest | PlainMessage<AddOIDCSettingsRequest> | undefined, b: AddOIDCSettingsRequest | PlainMessage<AddOIDCSettingsRequest> | undefined): boolean {
    return proto3.util.equals(AddOIDCSettingsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddOIDCSettingsResponse
 */
export class AddOIDCSettingsResponse extends Message<AddOIDCSettingsResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddOIDCSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddOIDCSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOIDCSettingsResponse {
    return new AddOIDCSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOIDCSettingsResponse {
    return new AddOIDCSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOIDCSettingsResponse {
    return new AddOIDCSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddOIDCSettingsResponse | PlainMessage<AddOIDCSettingsResponse> | undefined, b: AddOIDCSettingsResponse | PlainMessage<AddOIDCSettingsResponse> | undefined): boolean {
    return proto3.util.equals(AddOIDCSettingsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateOIDCSettingsRequest
 */
export class UpdateOIDCSettingsRequest extends Message<UpdateOIDCSettingsRequest> {
  /**
   * @generated from field: google.protobuf.Duration access_token_lifetime = 1;
   */
  accessTokenLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration id_token_lifetime = 2;
   */
  idTokenLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration refresh_token_idle_expiration = 3;
   */
  refreshTokenIdleExpiration?: Duration;

  /**
   * @generated from field: google.protobuf.Duration refresh_token_expiration = 4;
   */
  refreshTokenExpiration?: Duration;

  constructor(data?: PartialMessage<UpdateOIDCSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateOIDCSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_token_lifetime", kind: "message", T: Duration },
    { no: 2, name: "id_token_lifetime", kind: "message", T: Duration },
    { no: 3, name: "refresh_token_idle_expiration", kind: "message", T: Duration },
    { no: 4, name: "refresh_token_expiration", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOIDCSettingsRequest {
    return new UpdateOIDCSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOIDCSettingsRequest {
    return new UpdateOIDCSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOIDCSettingsRequest {
    return new UpdateOIDCSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOIDCSettingsRequest | PlainMessage<UpdateOIDCSettingsRequest> | undefined, b: UpdateOIDCSettingsRequest | PlainMessage<UpdateOIDCSettingsRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOIDCSettingsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateOIDCSettingsResponse
 */
export class UpdateOIDCSettingsResponse extends Message<UpdateOIDCSettingsResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateOIDCSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateOIDCSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOIDCSettingsResponse {
    return new UpdateOIDCSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOIDCSettingsResponse {
    return new UpdateOIDCSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOIDCSettingsResponse {
    return new UpdateOIDCSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOIDCSettingsResponse | PlainMessage<UpdateOIDCSettingsResponse> | undefined, b: UpdateOIDCSettingsResponse | PlainMessage<UpdateOIDCSettingsResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOIDCSettingsResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetSecurityPolicyRequest
 */
export class GetSecurityPolicyRequest extends Message<GetSecurityPolicyRequest> {
  constructor(data?: PartialMessage<GetSecurityPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetSecurityPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSecurityPolicyRequest {
    return new GetSecurityPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSecurityPolicyRequest {
    return new GetSecurityPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSecurityPolicyRequest {
    return new GetSecurityPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSecurityPolicyRequest | PlainMessage<GetSecurityPolicyRequest> | undefined, b: GetSecurityPolicyRequest | PlainMessage<GetSecurityPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetSecurityPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetSecurityPolicyResponse
 */
export class GetSecurityPolicyResponse extends Message<GetSecurityPolicyResponse> {
  /**
   * @generated from field: zitadel.settings.v1.SecurityPolicy policy = 1;
   */
  policy?: SecurityPolicy;

  constructor(data?: PartialMessage<GetSecurityPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetSecurityPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: SecurityPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSecurityPolicyResponse {
    return new GetSecurityPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSecurityPolicyResponse {
    return new GetSecurityPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSecurityPolicyResponse {
    return new GetSecurityPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSecurityPolicyResponse | PlainMessage<GetSecurityPolicyResponse> | undefined, b: GetSecurityPolicyResponse | PlainMessage<GetSecurityPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetSecurityPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetSecurityPolicyRequest
 */
export class SetSecurityPolicyRequest extends Message<SetSecurityPolicyRequest> {
  /**
   * states if iframe embedding is enabled or disabled
   *
   * @generated from field: bool enable_iframe_embedding = 1;
   */
  enableIframeEmbedding = false;

  /**
   * origins allowed loading ZITADEL in an iframe if enable_iframe_embedding is true
   *
   * @generated from field: repeated string allowed_origins = 2;
   */
  allowedOrigins: string[] = [];

  /**
   * allows users to impersonate other users. The impersonator needs the appropriate `*_IMPERSONATOR` roles assigned as well"
   *
   * @generated from field: bool enable_impersonation = 3;
   */
  enableImpersonation = false;

  constructor(data?: PartialMessage<SetSecurityPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetSecurityPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "enable_iframe_embedding", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "allowed_origins", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "enable_impersonation", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetSecurityPolicyRequest {
    return new SetSecurityPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetSecurityPolicyRequest {
    return new SetSecurityPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetSecurityPolicyRequest {
    return new SetSecurityPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetSecurityPolicyRequest | PlainMessage<SetSecurityPolicyRequest> | undefined, b: SetSecurityPolicyRequest | PlainMessage<SetSecurityPolicyRequest> | undefined): boolean {
    return proto3.util.equals(SetSecurityPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetSecurityPolicyResponse
 */
export class SetSecurityPolicyResponse extends Message<SetSecurityPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetSecurityPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetSecurityPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetSecurityPolicyResponse {
    return new SetSecurityPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetSecurityPolicyResponse {
    return new SetSecurityPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetSecurityPolicyResponse {
    return new SetSecurityPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetSecurityPolicyResponse | PlainMessage<SetSecurityPolicyResponse> | undefined, b: SetSecurityPolicyResponse | PlainMessage<SetSecurityPolicyResponse> | undefined): boolean {
    return proto3.util.equals(SetSecurityPolicyResponse, a, b);
  }
}

/**
 * if name or domain is already in use, org is not unique
 * at least one argument has to be provided
 *
 * @generated from message zitadel.admin.v1.IsOrgUniqueRequest
 */
export class IsOrgUniqueRequest extends Message<IsOrgUniqueRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string domain = 2;
   */
  domain = "";

  constructor(data?: PartialMessage<IsOrgUniqueRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.IsOrgUniqueRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsOrgUniqueRequest {
    return new IsOrgUniqueRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsOrgUniqueRequest {
    return new IsOrgUniqueRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsOrgUniqueRequest {
    return new IsOrgUniqueRequest().fromJsonString(jsonString, options);
  }

  static equals(a: IsOrgUniqueRequest | PlainMessage<IsOrgUniqueRequest> | undefined, b: IsOrgUniqueRequest | PlainMessage<IsOrgUniqueRequest> | undefined): boolean {
    return proto3.util.equals(IsOrgUniqueRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.IsOrgUniqueResponse
 */
export class IsOrgUniqueResponse extends Message<IsOrgUniqueResponse> {
  /**
   * @generated from field: bool is_unique = 1;
   */
  isUnique = false;

  constructor(data?: PartialMessage<IsOrgUniqueResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.IsOrgUniqueResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_unique", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsOrgUniqueResponse {
    return new IsOrgUniqueResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsOrgUniqueResponse {
    return new IsOrgUniqueResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsOrgUniqueResponse {
    return new IsOrgUniqueResponse().fromJsonString(jsonString, options);
  }

  static equals(a: IsOrgUniqueResponse | PlainMessage<IsOrgUniqueResponse> | undefined, b: IsOrgUniqueResponse | PlainMessage<IsOrgUniqueResponse> | undefined): boolean {
    return proto3.util.equals(IsOrgUniqueResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetOrgByIDRequest
 */
export class GetOrgByIDRequest extends Message<GetOrgByIDRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetOrgByIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetOrgByIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrgByIDRequest {
    return new GetOrgByIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrgByIDRequest {
    return new GetOrgByIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrgByIDRequest {
    return new GetOrgByIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrgByIDRequest | PlainMessage<GetOrgByIDRequest> | undefined, b: GetOrgByIDRequest | PlainMessage<GetOrgByIDRequest> | undefined): boolean {
    return proto3.util.equals(GetOrgByIDRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetOrgByIDResponse
 */
export class GetOrgByIDResponse extends Message<GetOrgByIDResponse> {
  /**
   * @generated from field: zitadel.org.v1.Org org = 1;
   */
  org?: Org;

  constructor(data?: PartialMessage<GetOrgByIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetOrgByIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org", kind: "message", T: Org },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrgByIDResponse {
    return new GetOrgByIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrgByIDResponse {
    return new GetOrgByIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrgByIDResponse {
    return new GetOrgByIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrgByIDResponse | PlainMessage<GetOrgByIDResponse> | undefined, b: GetOrgByIDResponse | PlainMessage<GetOrgByIDResponse> | undefined): boolean {
    return proto3.util.equals(GetOrgByIDResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListOrgsRequest
 */
export class ListOrgsRequest extends Message<ListOrgsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.org.v1.OrgFieldName sorting_column = 2;
   */
  sortingColumn = OrgFieldName.UNSPECIFIED;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.org.v1.OrgQuery queries = 3;
   */
  queries: OrgQuery[] = [];

  constructor(data?: PartialMessage<ListOrgsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListOrgsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(OrgFieldName) },
    { no: 3, name: "queries", kind: "message", T: OrgQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgsRequest {
    return new ListOrgsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgsRequest {
    return new ListOrgsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgsRequest {
    return new ListOrgsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgsRequest | PlainMessage<ListOrgsRequest> | undefined, b: ListOrgsRequest | PlainMessage<ListOrgsRequest> | undefined): boolean {
    return proto3.util.equals(ListOrgsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListOrgsResponse
 */
export class ListOrgsResponse extends Message<ListOrgsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: zitadel.org.v1.OrgFieldName sorting_column = 2;
   */
  sortingColumn = OrgFieldName.UNSPECIFIED;

  /**
   * @generated from field: repeated zitadel.org.v1.Org result = 3;
   */
  result: Org[] = [];

  constructor(data?: PartialMessage<ListOrgsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListOrgsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(OrgFieldName) },
    { no: 3, name: "result", kind: "message", T: Org, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrgsResponse {
    return new ListOrgsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrgsResponse {
    return new ListOrgsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrgsResponse {
    return new ListOrgsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrgsResponse | PlainMessage<ListOrgsResponse> | undefined, b: ListOrgsResponse | PlainMessage<ListOrgsResponse> | undefined): boolean {
    return proto3.util.equals(ListOrgsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetUpOrgRequest
 */
export class SetUpOrgRequest extends Message<SetUpOrgRequest> {
  /**
   * @generated from field: zitadel.admin.v1.SetUpOrgRequest.Org org = 1;
   */
  org?: SetUpOrgRequest_Org;

  /**
   * @generated from oneof zitadel.admin.v1.SetUpOrgRequest.user
   */
  user: {
    /**
     * oneof field for the user managing the organization
     *
     * @generated from field: zitadel.admin.v1.SetUpOrgRequest.Human human = 2;
     */
    value: SetUpOrgRequest_Human;
    case: "human";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * specify Org Member Roles for the provided user (default is ORG_OWNER if roles are empty)
   *
   * @generated from field: repeated string roles = 3;
   */
  roles: string[] = [];

  constructor(data?: PartialMessage<SetUpOrgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetUpOrgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org", kind: "message", T: SetUpOrgRequest_Org },
    { no: 2, name: "human", kind: "message", T: SetUpOrgRequest_Human, oneof: "user" },
    { no: 3, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetUpOrgRequest {
    return new SetUpOrgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetUpOrgRequest {
    return new SetUpOrgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetUpOrgRequest {
    return new SetUpOrgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetUpOrgRequest | PlainMessage<SetUpOrgRequest> | undefined, b: SetUpOrgRequest | PlainMessage<SetUpOrgRequest> | undefined): boolean {
    return proto3.util.equals(SetUpOrgRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetUpOrgRequest.Org
 */
export class SetUpOrgRequest_Org extends Message<SetUpOrgRequest_Org> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string domain = 2;
   */
  domain = "";

  constructor(data?: PartialMessage<SetUpOrgRequest_Org>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetUpOrgRequest.Org";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetUpOrgRequest_Org {
    return new SetUpOrgRequest_Org().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetUpOrgRequest_Org {
    return new SetUpOrgRequest_Org().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetUpOrgRequest_Org {
    return new SetUpOrgRequest_Org().fromJsonString(jsonString, options);
  }

  static equals(a: SetUpOrgRequest_Org | PlainMessage<SetUpOrgRequest_Org> | undefined, b: SetUpOrgRequest_Org | PlainMessage<SetUpOrgRequest_Org> | undefined): boolean {
    return proto3.util.equals(SetUpOrgRequest_Org, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetUpOrgRequest.Human
 */
export class SetUpOrgRequest_Human extends Message<SetUpOrgRequest_Human> {
  /**
   * @generated from field: string user_name = 1;
   */
  userName = "";

  /**
   * @generated from field: zitadel.admin.v1.SetUpOrgRequest.Human.Profile profile = 2;
   */
  profile?: SetUpOrgRequest_Human_Profile;

  /**
   * @generated from field: zitadel.admin.v1.SetUpOrgRequest.Human.Email email = 3;
   */
  email?: SetUpOrgRequest_Human_Email;

  /**
   * @generated from field: zitadel.admin.v1.SetUpOrgRequest.Human.Phone phone = 4;
   */
  phone?: SetUpOrgRequest_Human_Phone;

  /**
   * @generated from field: string password = 5;
   */
  password = "";

  constructor(data?: PartialMessage<SetUpOrgRequest_Human>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetUpOrgRequest.Human";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "profile", kind: "message", T: SetUpOrgRequest_Human_Profile },
    { no: 3, name: "email", kind: "message", T: SetUpOrgRequest_Human_Email },
    { no: 4, name: "phone", kind: "message", T: SetUpOrgRequest_Human_Phone },
    { no: 5, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetUpOrgRequest_Human {
    return new SetUpOrgRequest_Human().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetUpOrgRequest_Human {
    return new SetUpOrgRequest_Human().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetUpOrgRequest_Human {
    return new SetUpOrgRequest_Human().fromJsonString(jsonString, options);
  }

  static equals(a: SetUpOrgRequest_Human | PlainMessage<SetUpOrgRequest_Human> | undefined, b: SetUpOrgRequest_Human | PlainMessage<SetUpOrgRequest_Human> | undefined): boolean {
    return proto3.util.equals(SetUpOrgRequest_Human, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetUpOrgRequest.Human.Profile
 */
export class SetUpOrgRequest_Human_Profile extends Message<SetUpOrgRequest_Human_Profile> {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName = "";

  /**
   * @generated from field: string last_name = 2;
   */
  lastName = "";

  /**
   * @generated from field: string nick_name = 3;
   */
  nickName = "";

  /**
   * @generated from field: string display_name = 4;
   */
  displayName = "";

  /**
   * @generated from field: string preferred_language = 5;
   */
  preferredLanguage = "";

  /**
   * @generated from field: zitadel.user.v1.Gender gender = 6;
   */
  gender = Gender.UNSPECIFIED;

  constructor(data?: PartialMessage<SetUpOrgRequest_Human_Profile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetUpOrgRequest.Human.Profile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "nick_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "preferred_language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "gender", kind: "enum", T: proto3.getEnumType(Gender) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetUpOrgRequest_Human_Profile {
    return new SetUpOrgRequest_Human_Profile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetUpOrgRequest_Human_Profile {
    return new SetUpOrgRequest_Human_Profile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetUpOrgRequest_Human_Profile {
    return new SetUpOrgRequest_Human_Profile().fromJsonString(jsonString, options);
  }

  static equals(a: SetUpOrgRequest_Human_Profile | PlainMessage<SetUpOrgRequest_Human_Profile> | undefined, b: SetUpOrgRequest_Human_Profile | PlainMessage<SetUpOrgRequest_Human_Profile> | undefined): boolean {
    return proto3.util.equals(SetUpOrgRequest_Human_Profile, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetUpOrgRequest.Human.Email
 */
export class SetUpOrgRequest_Human_Email extends Message<SetUpOrgRequest_Human_Email> {
  /**
   * @generated from field: string email = 1;
   */
  email = "";

  /**
   * @generated from field: bool is_email_verified = 2;
   */
  isEmailVerified = false;

  constructor(data?: PartialMessage<SetUpOrgRequest_Human_Email>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetUpOrgRequest.Human.Email";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "is_email_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetUpOrgRequest_Human_Email {
    return new SetUpOrgRequest_Human_Email().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetUpOrgRequest_Human_Email {
    return new SetUpOrgRequest_Human_Email().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetUpOrgRequest_Human_Email {
    return new SetUpOrgRequest_Human_Email().fromJsonString(jsonString, options);
  }

  static equals(a: SetUpOrgRequest_Human_Email | PlainMessage<SetUpOrgRequest_Human_Email> | undefined, b: SetUpOrgRequest_Human_Email | PlainMessage<SetUpOrgRequest_Human_Email> | undefined): boolean {
    return proto3.util.equals(SetUpOrgRequest_Human_Email, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetUpOrgRequest.Human.Phone
 */
export class SetUpOrgRequest_Human_Phone extends Message<SetUpOrgRequest_Human_Phone> {
  /**
   * has to be a global number
   *
   * @generated from field: string phone = 1;
   */
  phone = "";

  /**
   * @generated from field: bool is_phone_verified = 2;
   */
  isPhoneVerified = false;

  constructor(data?: PartialMessage<SetUpOrgRequest_Human_Phone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetUpOrgRequest.Human.Phone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "is_phone_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetUpOrgRequest_Human_Phone {
    return new SetUpOrgRequest_Human_Phone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetUpOrgRequest_Human_Phone {
    return new SetUpOrgRequest_Human_Phone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetUpOrgRequest_Human_Phone {
    return new SetUpOrgRequest_Human_Phone().fromJsonString(jsonString, options);
  }

  static equals(a: SetUpOrgRequest_Human_Phone | PlainMessage<SetUpOrgRequest_Human_Phone> | undefined, b: SetUpOrgRequest_Human_Phone | PlainMessage<SetUpOrgRequest_Human_Phone> | undefined): boolean {
    return proto3.util.equals(SetUpOrgRequest_Human_Phone, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetUpOrgResponse
 */
export class SetUpOrgResponse extends Message<SetUpOrgResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string org_id = 2;
   */
  orgId = "";

  /**
   * @generated from field: string user_id = 3;
   */
  userId = "";

  constructor(data?: PartialMessage<SetUpOrgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetUpOrgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetUpOrgResponse {
    return new SetUpOrgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetUpOrgResponse {
    return new SetUpOrgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetUpOrgResponse {
    return new SetUpOrgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetUpOrgResponse | PlainMessage<SetUpOrgResponse> | undefined, b: SetUpOrgResponse | PlainMessage<SetUpOrgResponse> | undefined): boolean {
    return proto3.util.equals(SetUpOrgResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveOrgRequest
 */
export class RemoveOrgRequest extends Message<RemoveOrgRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  constructor(data?: PartialMessage<RemoveOrgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveOrgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOrgRequest {
    return new RemoveOrgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOrgRequest {
    return new RemoveOrgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOrgRequest {
    return new RemoveOrgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOrgRequest | PlainMessage<RemoveOrgRequest> | undefined, b: RemoveOrgRequest | PlainMessage<RemoveOrgRequest> | undefined): boolean {
    return proto3.util.equals(RemoveOrgRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveOrgResponse
 */
export class RemoveOrgResponse extends Message<RemoveOrgResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveOrgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveOrgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOrgResponse {
    return new RemoveOrgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOrgResponse {
    return new RemoveOrgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOrgResponse {
    return new RemoveOrgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOrgResponse | PlainMessage<RemoveOrgResponse> | undefined, b: RemoveOrgResponse | PlainMessage<RemoveOrgResponse> | undefined): boolean {
    return proto3.util.equals(RemoveOrgResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetIDPByIDRequest
 */
export class GetIDPByIDRequest extends Message<GetIDPByIDRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetIDPByIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetIDPByIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetIDPByIDRequest {
    return new GetIDPByIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetIDPByIDRequest {
    return new GetIDPByIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetIDPByIDRequest {
    return new GetIDPByIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetIDPByIDRequest | PlainMessage<GetIDPByIDRequest> | undefined, b: GetIDPByIDRequest | PlainMessage<GetIDPByIDRequest> | undefined): boolean {
    return proto3.util.equals(GetIDPByIDRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetIDPByIDResponse
 */
export class GetIDPByIDResponse extends Message<GetIDPByIDResponse> {
  /**
   * @generated from field: zitadel.idp.v1.IDP idp = 1;
   */
  idp?: IDP;

  constructor(data?: PartialMessage<GetIDPByIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetIDPByIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp", kind: "message", T: IDP },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetIDPByIDResponse {
    return new GetIDPByIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetIDPByIDResponse {
    return new GetIDPByIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetIDPByIDResponse {
    return new GetIDPByIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetIDPByIDResponse | PlainMessage<GetIDPByIDResponse> | undefined, b: GetIDPByIDResponse | PlainMessage<GetIDPByIDResponse> | undefined): boolean {
    return proto3.util.equals(GetIDPByIDResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListIDPsRequest
 */
export class ListIDPsRequest extends Message<ListIDPsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.idp.v1.IDPFieldName sorting_column = 2;
   */
  sortingColumn = IDPFieldName.IDP_FIELD_NAME_UNSPECIFIED;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.admin.v1.IDPQuery queries = 3;
   */
  queries: IDPQuery[] = [];

  constructor(data?: PartialMessage<ListIDPsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListIDPsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(IDPFieldName) },
    { no: 3, name: "queries", kind: "message", T: IDPQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIDPsRequest {
    return new ListIDPsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIDPsRequest {
    return new ListIDPsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIDPsRequest {
    return new ListIDPsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListIDPsRequest | PlainMessage<ListIDPsRequest> | undefined, b: ListIDPsRequest | PlainMessage<ListIDPsRequest> | undefined): boolean {
    return proto3.util.equals(ListIDPsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.IDPQuery
 */
export class IDPQuery extends Message<IDPQuery> {
  /**
   * @generated from oneof zitadel.admin.v1.IDPQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.idp.v1.IDPIDQuery idp_id_query = 1;
     */
    value: IDPIDQuery;
    case: "idpIdQuery";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.IDPNameQuery idp_name_query = 2;
     */
    value: IDPNameQuery;
    case: "idpNameQuery";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<IDPQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.IDPQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id_query", kind: "message", T: IDPIDQuery, oneof: "query" },
    { no: 2, name: "idp_name_query", kind: "message", T: IDPNameQuery, oneof: "query" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IDPQuery {
    return new IDPQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IDPQuery {
    return new IDPQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IDPQuery {
    return new IDPQuery().fromJsonString(jsonString, options);
  }

  static equals(a: IDPQuery | PlainMessage<IDPQuery> | undefined, b: IDPQuery | PlainMessage<IDPQuery> | undefined): boolean {
    return proto3.util.equals(IDPQuery, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListIDPsResponse
 */
export class ListIDPsResponse extends Message<ListIDPsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: zitadel.idp.v1.IDPFieldName sorting_column = 2;
   */
  sortingColumn = IDPFieldName.IDP_FIELD_NAME_UNSPECIFIED;

  /**
   * @generated from field: repeated zitadel.idp.v1.IDP result = 3;
   */
  result: IDP[] = [];

  constructor(data?: PartialMessage<ListIDPsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListIDPsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(IDPFieldName) },
    { no: 3, name: "result", kind: "message", T: IDP, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIDPsResponse {
    return new ListIDPsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIDPsResponse {
    return new ListIDPsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIDPsResponse {
    return new ListIDPsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListIDPsResponse | PlainMessage<ListIDPsResponse> | undefined, b: ListIDPsResponse | PlainMessage<ListIDPsResponse> | undefined): boolean {
    return proto3.util.equals(ListIDPsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddOIDCIDPRequest
 */
export class AddOIDCIDPRequest extends Message<AddOIDCIDPRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: zitadel.idp.v1.IDPStylingType styling_type = 2;
   */
  stylingType = IDPStylingType.STYLING_TYPE_UNSPECIFIED;

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: string issuer = 5;
   */
  issuer = "";

  /**
   * @generated from field: repeated string scopes = 6;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.OIDCMappingField display_name_mapping = 7;
   */
  displayNameMapping = OIDCMappingField.OIDC_MAPPING_FIELD_UNSPECIFIED;

  /**
   * @generated from field: zitadel.idp.v1.OIDCMappingField username_mapping = 8;
   */
  usernameMapping = OIDCMappingField.OIDC_MAPPING_FIELD_UNSPECIFIED;

  /**
   * @generated from field: bool auto_register = 9;
   */
  autoRegister = false;

  constructor(data?: PartialMessage<AddOIDCIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddOIDCIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "styling_type", kind: "enum", T: proto3.getEnumType(IDPStylingType) },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "display_name_mapping", kind: "enum", T: proto3.getEnumType(OIDCMappingField) },
    { no: 8, name: "username_mapping", kind: "enum", T: proto3.getEnumType(OIDCMappingField) },
    { no: 9, name: "auto_register", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOIDCIDPRequest {
    return new AddOIDCIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOIDCIDPRequest {
    return new AddOIDCIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOIDCIDPRequest {
    return new AddOIDCIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddOIDCIDPRequest | PlainMessage<AddOIDCIDPRequest> | undefined, b: AddOIDCIDPRequest | PlainMessage<AddOIDCIDPRequest> | undefined): boolean {
    return proto3.util.equals(AddOIDCIDPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddOIDCIDPResponse
 */
export class AddOIDCIDPResponse extends Message<AddOIDCIDPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string idp_id = 2;
   */
  idpId = "";

  constructor(data?: PartialMessage<AddOIDCIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddOIDCIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOIDCIDPResponse {
    return new AddOIDCIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOIDCIDPResponse {
    return new AddOIDCIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOIDCIDPResponse {
    return new AddOIDCIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddOIDCIDPResponse | PlainMessage<AddOIDCIDPResponse> | undefined, b: AddOIDCIDPResponse | PlainMessage<AddOIDCIDPResponse> | undefined): boolean {
    return proto3.util.equals(AddOIDCIDPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddJWTIDPRequest
 */
export class AddJWTIDPRequest extends Message<AddJWTIDPRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: zitadel.idp.v1.IDPStylingType styling_type = 2;
   */
  stylingType = IDPStylingType.STYLING_TYPE_UNSPECIFIED;

  /**
   * @generated from field: string jwt_endpoint = 3;
   */
  jwtEndpoint = "";

  /**
   * @generated from field: string issuer = 4;
   */
  issuer = "";

  /**
   * @generated from field: string keys_endpoint = 5;
   */
  keysEndpoint = "";

  /**
   * @generated from field: string header_name = 6;
   */
  headerName = "";

  /**
   * @generated from field: bool auto_register = 7;
   */
  autoRegister = false;

  constructor(data?: PartialMessage<AddJWTIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddJWTIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "styling_type", kind: "enum", T: proto3.getEnumType(IDPStylingType) },
    { no: 3, name: "jwt_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "keys_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "header_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "auto_register", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddJWTIDPRequest {
    return new AddJWTIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddJWTIDPRequest {
    return new AddJWTIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddJWTIDPRequest {
    return new AddJWTIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddJWTIDPRequest | PlainMessage<AddJWTIDPRequest> | undefined, b: AddJWTIDPRequest | PlainMessage<AddJWTIDPRequest> | undefined): boolean {
    return proto3.util.equals(AddJWTIDPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddJWTIDPResponse
 */
export class AddJWTIDPResponse extends Message<AddJWTIDPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string idp_id = 2;
   */
  idpId = "";

  constructor(data?: PartialMessage<AddJWTIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddJWTIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddJWTIDPResponse {
    return new AddJWTIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddJWTIDPResponse {
    return new AddJWTIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddJWTIDPResponse {
    return new AddJWTIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddJWTIDPResponse | PlainMessage<AddJWTIDPResponse> | undefined, b: AddJWTIDPResponse | PlainMessage<AddJWTIDPResponse> | undefined): boolean {
    return proto3.util.equals(AddJWTIDPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateIDPRequest
 */
export class UpdateIDPRequest extends Message<UpdateIDPRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: zitadel.idp.v1.IDPStylingType styling_type = 3;
   */
  stylingType = IDPStylingType.STYLING_TYPE_UNSPECIFIED;

  /**
   * @generated from field: bool auto_register = 4;
   */
  autoRegister = false;

  constructor(data?: PartialMessage<UpdateIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "styling_type", kind: "enum", T: proto3.getEnumType(IDPStylingType) },
    { no: 4, name: "auto_register", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateIDPRequest {
    return new UpdateIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateIDPRequest {
    return new UpdateIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateIDPRequest {
    return new UpdateIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateIDPRequest | PlainMessage<UpdateIDPRequest> | undefined, b: UpdateIDPRequest | PlainMessage<UpdateIDPRequest> | undefined): boolean {
    return proto3.util.equals(UpdateIDPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateIDPResponse
 */
export class UpdateIDPResponse extends Message<UpdateIDPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateIDPResponse {
    return new UpdateIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateIDPResponse {
    return new UpdateIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateIDPResponse {
    return new UpdateIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateIDPResponse | PlainMessage<UpdateIDPResponse> | undefined, b: UpdateIDPResponse | PlainMessage<UpdateIDPResponse> | undefined): boolean {
    return proto3.util.equals(UpdateIDPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.DeactivateIDPRequest
 */
export class DeactivateIDPRequest extends Message<DeactivateIDPRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  constructor(data?: PartialMessage<DeactivateIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.DeactivateIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateIDPRequest {
    return new DeactivateIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateIDPRequest {
    return new DeactivateIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateIDPRequest {
    return new DeactivateIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateIDPRequest | PlainMessage<DeactivateIDPRequest> | undefined, b: DeactivateIDPRequest | PlainMessage<DeactivateIDPRequest> | undefined): boolean {
    return proto3.util.equals(DeactivateIDPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.DeactivateIDPResponse
 */
export class DeactivateIDPResponse extends Message<DeactivateIDPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<DeactivateIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.DeactivateIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateIDPResponse {
    return new DeactivateIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateIDPResponse {
    return new DeactivateIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateIDPResponse {
    return new DeactivateIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeactivateIDPResponse | PlainMessage<DeactivateIDPResponse> | undefined, b: DeactivateIDPResponse | PlainMessage<DeactivateIDPResponse> | undefined): boolean {
    return proto3.util.equals(DeactivateIDPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ReactivateIDPRequest
 */
export class ReactivateIDPRequest extends Message<ReactivateIDPRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  constructor(data?: PartialMessage<ReactivateIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ReactivateIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateIDPRequest {
    return new ReactivateIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateIDPRequest {
    return new ReactivateIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateIDPRequest {
    return new ReactivateIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateIDPRequest | PlainMessage<ReactivateIDPRequest> | undefined, b: ReactivateIDPRequest | PlainMessage<ReactivateIDPRequest> | undefined): boolean {
    return proto3.util.equals(ReactivateIDPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ReactivateIDPResponse
 */
export class ReactivateIDPResponse extends Message<ReactivateIDPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ReactivateIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ReactivateIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReactivateIDPResponse {
    return new ReactivateIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReactivateIDPResponse {
    return new ReactivateIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReactivateIDPResponse {
    return new ReactivateIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReactivateIDPResponse | PlainMessage<ReactivateIDPResponse> | undefined, b: ReactivateIDPResponse | PlainMessage<ReactivateIDPResponse> | undefined): boolean {
    return proto3.util.equals(ReactivateIDPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveIDPRequest
 */
export class RemoveIDPRequest extends Message<RemoveIDPRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  constructor(data?: PartialMessage<RemoveIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveIDPRequest {
    return new RemoveIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveIDPRequest {
    return new RemoveIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveIDPRequest {
    return new RemoveIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveIDPRequest | PlainMessage<RemoveIDPRequest> | undefined, b: RemoveIDPRequest | PlainMessage<RemoveIDPRequest> | undefined): boolean {
    return proto3.util.equals(RemoveIDPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveIDPResponse
 */
export class RemoveIDPResponse extends Message<RemoveIDPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveIDPResponse {
    return new RemoveIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveIDPResponse {
    return new RemoveIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveIDPResponse {
    return new RemoveIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveIDPResponse | PlainMessage<RemoveIDPResponse> | undefined, b: RemoveIDPResponse | PlainMessage<RemoveIDPResponse> | undefined): boolean {
    return proto3.util.equals(RemoveIDPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateIDPOIDCConfigRequest
 */
export class UpdateIDPOIDCConfigRequest extends Message<UpdateIDPOIDCConfigRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  /**
   * @generated from field: string issuer = 2;
   */
  issuer = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.OIDCMappingField display_name_mapping = 6;
   */
  displayNameMapping = OIDCMappingField.OIDC_MAPPING_FIELD_UNSPECIFIED;

  /**
   * @generated from field: zitadel.idp.v1.OIDCMappingField username_mapping = 7;
   */
  usernameMapping = OIDCMappingField.OIDC_MAPPING_FIELD_UNSPECIFIED;

  constructor(data?: PartialMessage<UpdateIDPOIDCConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateIDPOIDCConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "display_name_mapping", kind: "enum", T: proto3.getEnumType(OIDCMappingField) },
    { no: 7, name: "username_mapping", kind: "enum", T: proto3.getEnumType(OIDCMappingField) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateIDPOIDCConfigRequest {
    return new UpdateIDPOIDCConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateIDPOIDCConfigRequest {
    return new UpdateIDPOIDCConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateIDPOIDCConfigRequest {
    return new UpdateIDPOIDCConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateIDPOIDCConfigRequest | PlainMessage<UpdateIDPOIDCConfigRequest> | undefined, b: UpdateIDPOIDCConfigRequest | PlainMessage<UpdateIDPOIDCConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateIDPOIDCConfigRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateIDPOIDCConfigResponse
 */
export class UpdateIDPOIDCConfigResponse extends Message<UpdateIDPOIDCConfigResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateIDPOIDCConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateIDPOIDCConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateIDPOIDCConfigResponse {
    return new UpdateIDPOIDCConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateIDPOIDCConfigResponse {
    return new UpdateIDPOIDCConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateIDPOIDCConfigResponse {
    return new UpdateIDPOIDCConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateIDPOIDCConfigResponse | PlainMessage<UpdateIDPOIDCConfigResponse> | undefined, b: UpdateIDPOIDCConfigResponse | PlainMessage<UpdateIDPOIDCConfigResponse> | undefined): boolean {
    return proto3.util.equals(UpdateIDPOIDCConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateIDPJWTConfigRequest
 */
export class UpdateIDPJWTConfigRequest extends Message<UpdateIDPJWTConfigRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  /**
   * @generated from field: string jwt_endpoint = 2;
   */
  jwtEndpoint = "";

  /**
   * @generated from field: string issuer = 3;
   */
  issuer = "";

  /**
   * @generated from field: string keys_endpoint = 4;
   */
  keysEndpoint = "";

  /**
   * @generated from field: string header_name = 5;
   */
  headerName = "";

  constructor(data?: PartialMessage<UpdateIDPJWTConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateIDPJWTConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "jwt_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "keys_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "header_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateIDPJWTConfigRequest {
    return new UpdateIDPJWTConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateIDPJWTConfigRequest {
    return new UpdateIDPJWTConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateIDPJWTConfigRequest {
    return new UpdateIDPJWTConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateIDPJWTConfigRequest | PlainMessage<UpdateIDPJWTConfigRequest> | undefined, b: UpdateIDPJWTConfigRequest | PlainMessage<UpdateIDPJWTConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateIDPJWTConfigRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateIDPJWTConfigResponse
 */
export class UpdateIDPJWTConfigResponse extends Message<UpdateIDPJWTConfigResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateIDPJWTConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateIDPJWTConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateIDPJWTConfigResponse {
    return new UpdateIDPJWTConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateIDPJWTConfigResponse {
    return new UpdateIDPJWTConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateIDPJWTConfigResponse {
    return new UpdateIDPJWTConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateIDPJWTConfigResponse | PlainMessage<UpdateIDPJWTConfigResponse> | undefined, b: UpdateIDPJWTConfigResponse | PlainMessage<UpdateIDPJWTConfigResponse> | undefined): boolean {
    return proto3.util.equals(UpdateIDPJWTConfigResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListProvidersRequest
 */
export class ListProvidersRequest extends Message<ListProvidersRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.admin.v1.ProviderQuery queries = 2;
   */
  queries: ProviderQuery[] = [];

  constructor(data?: PartialMessage<ListProvidersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListProvidersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: ProviderQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProvidersRequest {
    return new ListProvidersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProvidersRequest {
    return new ListProvidersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProvidersRequest {
    return new ListProvidersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListProvidersRequest | PlainMessage<ListProvidersRequest> | undefined, b: ListProvidersRequest | PlainMessage<ListProvidersRequest> | undefined): boolean {
    return proto3.util.equals(ListProvidersRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ProviderQuery
 */
export class ProviderQuery extends Message<ProviderQuery> {
  /**
   * @generated from oneof zitadel.admin.v1.ProviderQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.idp.v1.IDPIDQuery idp_id_query = 1;
     */
    value: IDPIDQuery;
    case: "idpIdQuery";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.IDPNameQuery idp_name_query = 2;
     */
    value: IDPNameQuery;
    case: "idpNameQuery";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ProviderQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ProviderQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id_query", kind: "message", T: IDPIDQuery, oneof: "query" },
    { no: 2, name: "idp_name_query", kind: "message", T: IDPNameQuery, oneof: "query" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProviderQuery {
    return new ProviderQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProviderQuery {
    return new ProviderQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProviderQuery {
    return new ProviderQuery().fromJsonString(jsonString, options);
  }

  static equals(a: ProviderQuery | PlainMessage<ProviderQuery> | undefined, b: ProviderQuery | PlainMessage<ProviderQuery> | undefined): boolean {
    return proto3.util.equals(ProviderQuery, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListProvidersResponse
 */
export class ListProvidersResponse extends Message<ListProvidersResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.idp.v1.Provider result = 2;
   */
  result: Provider[] = [];

  constructor(data?: PartialMessage<ListProvidersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListProvidersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Provider, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProvidersResponse {
    return new ListProvidersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProvidersResponse {
    return new ListProvidersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProvidersResponse {
    return new ListProvidersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProvidersResponse | PlainMessage<ListProvidersResponse> | undefined, b: ListProvidersResponse | PlainMessage<ListProvidersResponse> | undefined): boolean {
    return proto3.util.equals(ListProvidersResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetProviderByIDRequest
 */
export class GetProviderByIDRequest extends Message<GetProviderByIDRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetProviderByIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetProviderByIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProviderByIDRequest {
    return new GetProviderByIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProviderByIDRequest {
    return new GetProviderByIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProviderByIDRequest {
    return new GetProviderByIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetProviderByIDRequest | PlainMessage<GetProviderByIDRequest> | undefined, b: GetProviderByIDRequest | PlainMessage<GetProviderByIDRequest> | undefined): boolean {
    return proto3.util.equals(GetProviderByIDRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetProviderByIDResponse
 */
export class GetProviderByIDResponse extends Message<GetProviderByIDResponse> {
  /**
   * @generated from field: zitadel.idp.v1.Provider idp = 1;
   */
  idp?: Provider;

  constructor(data?: PartialMessage<GetProviderByIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetProviderByIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp", kind: "message", T: Provider },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProviderByIDResponse {
    return new GetProviderByIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProviderByIDResponse {
    return new GetProviderByIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProviderByIDResponse {
    return new GetProviderByIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetProviderByIDResponse | PlainMessage<GetProviderByIDResponse> | undefined, b: GetProviderByIDResponse | PlainMessage<GetProviderByIDResponse> | undefined): boolean {
    return proto3.util.equals(GetProviderByIDResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGenericOAuthProviderRequest
 */
export class AddGenericOAuthProviderRequest extends Message<AddGenericOAuthProviderRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  /**
   * @generated from field: string authorization_endpoint = 4;
   */
  authorizationEndpoint = "";

  /**
   * @generated from field: string token_endpoint = 5;
   */
  tokenEndpoint = "";

  /**
   * @generated from field: string user_endpoint = 6;
   */
  userEndpoint = "";

  /**
   * @generated from field: repeated string scopes = 7;
   */
  scopes: string[] = [];

  /**
   * identifying attribute of the user in the response of the user_endpoint
   *
   * @generated from field: string id_attribute = 8;
   */
  idAttribute = "";

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 9;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddGenericOAuthProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGenericOAuthProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "authorization_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "token_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "user_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "id_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGenericOAuthProviderRequest {
    return new AddGenericOAuthProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGenericOAuthProviderRequest {
    return new AddGenericOAuthProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGenericOAuthProviderRequest {
    return new AddGenericOAuthProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGenericOAuthProviderRequest | PlainMessage<AddGenericOAuthProviderRequest> | undefined, b: AddGenericOAuthProviderRequest | PlainMessage<AddGenericOAuthProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGenericOAuthProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGenericOAuthProviderResponse
 */
export class AddGenericOAuthProviderResponse extends Message<AddGenericOAuthProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGenericOAuthProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGenericOAuthProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGenericOAuthProviderResponse {
    return new AddGenericOAuthProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGenericOAuthProviderResponse {
    return new AddGenericOAuthProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGenericOAuthProviderResponse {
    return new AddGenericOAuthProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGenericOAuthProviderResponse | PlainMessage<AddGenericOAuthProviderResponse> | undefined, b: AddGenericOAuthProviderResponse | PlainMessage<AddGenericOAuthProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGenericOAuthProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGenericOAuthProviderRequest
 */
export class UpdateGenericOAuthProviderRequest extends Message<UpdateGenericOAuthProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: string authorization_endpoint = 5;
   */
  authorizationEndpoint = "";

  /**
   * @generated from field: string token_endpoint = 6;
   */
  tokenEndpoint = "";

  /**
   * @generated from field: string user_endpoint = 7;
   */
  userEndpoint = "";

  /**
   * @generated from field: repeated string scopes = 8;
   */
  scopes: string[] = [];

  /**
   * identifying attribute of the user in the response of the user_endpoint
   *
   * @generated from field: string id_attribute = 9;
   */
  idAttribute = "";

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 10;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateGenericOAuthProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGenericOAuthProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "authorization_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "token_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "user_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "id_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGenericOAuthProviderRequest {
    return new UpdateGenericOAuthProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGenericOAuthProviderRequest {
    return new UpdateGenericOAuthProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGenericOAuthProviderRequest {
    return new UpdateGenericOAuthProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGenericOAuthProviderRequest | PlainMessage<UpdateGenericOAuthProviderRequest> | undefined, b: UpdateGenericOAuthProviderRequest | PlainMessage<UpdateGenericOAuthProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGenericOAuthProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGenericOAuthProviderResponse
 */
export class UpdateGenericOAuthProviderResponse extends Message<UpdateGenericOAuthProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGenericOAuthProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGenericOAuthProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGenericOAuthProviderResponse {
    return new UpdateGenericOAuthProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGenericOAuthProviderResponse {
    return new UpdateGenericOAuthProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGenericOAuthProviderResponse {
    return new UpdateGenericOAuthProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGenericOAuthProviderResponse | PlainMessage<UpdateGenericOAuthProviderResponse> | undefined, b: UpdateGenericOAuthProviderResponse | PlainMessage<UpdateGenericOAuthProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGenericOAuthProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGenericOIDCProviderRequest
 */
export class AddGenericOIDCProviderRequest extends Message<AddGenericOIDCProviderRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string issuer = 2;
   */
  issuer = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  /**
   * @generated from field: bool is_id_token_mapping = 7;
   */
  isIdTokenMapping = false;

  constructor(data?: PartialMessage<AddGenericOIDCProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGenericOIDCProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "provider_options", kind: "message", T: Options },
    { no: 7, name: "is_id_token_mapping", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGenericOIDCProviderRequest {
    return new AddGenericOIDCProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGenericOIDCProviderRequest {
    return new AddGenericOIDCProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGenericOIDCProviderRequest {
    return new AddGenericOIDCProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGenericOIDCProviderRequest | PlainMessage<AddGenericOIDCProviderRequest> | undefined, b: AddGenericOIDCProviderRequest | PlainMessage<AddGenericOIDCProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGenericOIDCProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGenericOIDCProviderResponse
 */
export class AddGenericOIDCProviderResponse extends Message<AddGenericOIDCProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGenericOIDCProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGenericOIDCProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGenericOIDCProviderResponse {
    return new AddGenericOIDCProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGenericOIDCProviderResponse {
    return new AddGenericOIDCProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGenericOIDCProviderResponse {
    return new AddGenericOIDCProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGenericOIDCProviderResponse | PlainMessage<AddGenericOIDCProviderResponse> | undefined, b: AddGenericOIDCProviderResponse | PlainMessage<AddGenericOIDCProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGenericOIDCProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGenericOIDCProviderRequest
 */
export class UpdateGenericOIDCProviderRequest extends Message<UpdateGenericOIDCProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string issuer = 3;
   */
  issuer = "";

  /**
   * @generated from field: string client_id = 4;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 5;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 6;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 7;
   */
  providerOptions?: Options;

  /**
   * @generated from field: bool is_id_token_mapping = 8;
   */
  isIdTokenMapping = false;

  constructor(data?: PartialMessage<UpdateGenericOIDCProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGenericOIDCProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "provider_options", kind: "message", T: Options },
    { no: 8, name: "is_id_token_mapping", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGenericOIDCProviderRequest {
    return new UpdateGenericOIDCProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGenericOIDCProviderRequest {
    return new UpdateGenericOIDCProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGenericOIDCProviderRequest {
    return new UpdateGenericOIDCProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGenericOIDCProviderRequest | PlainMessage<UpdateGenericOIDCProviderRequest> | undefined, b: UpdateGenericOIDCProviderRequest | PlainMessage<UpdateGenericOIDCProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGenericOIDCProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGenericOIDCProviderResponse
 */
export class UpdateGenericOIDCProviderResponse extends Message<UpdateGenericOIDCProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGenericOIDCProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGenericOIDCProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGenericOIDCProviderResponse {
    return new UpdateGenericOIDCProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGenericOIDCProviderResponse {
    return new UpdateGenericOIDCProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGenericOIDCProviderResponse {
    return new UpdateGenericOIDCProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGenericOIDCProviderResponse | PlainMessage<UpdateGenericOIDCProviderResponse> | undefined, b: UpdateGenericOIDCProviderResponse | PlainMessage<UpdateGenericOIDCProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGenericOIDCProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.MigrateGenericOIDCProviderRequest
 */
export class MigrateGenericOIDCProviderRequest extends Message<MigrateGenericOIDCProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from oneof zitadel.admin.v1.MigrateGenericOIDCProviderRequest.template
   */
  template: {
    /**
     * @generated from field: zitadel.admin.v1.AddAzureADProviderRequest azure = 2;
     */
    value: AddAzureADProviderRequest;
    case: "azure";
  } | {
    /**
     * @generated from field: zitadel.admin.v1.AddGoogleProviderRequest google = 3;
     */
    value: AddGoogleProviderRequest;
    case: "google";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MigrateGenericOIDCProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.MigrateGenericOIDCProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "azure", kind: "message", T: AddAzureADProviderRequest, oneof: "template" },
    { no: 3, name: "google", kind: "message", T: AddGoogleProviderRequest, oneof: "template" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MigrateGenericOIDCProviderRequest {
    return new MigrateGenericOIDCProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MigrateGenericOIDCProviderRequest {
    return new MigrateGenericOIDCProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MigrateGenericOIDCProviderRequest {
    return new MigrateGenericOIDCProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: MigrateGenericOIDCProviderRequest | PlainMessage<MigrateGenericOIDCProviderRequest> | undefined, b: MigrateGenericOIDCProviderRequest | PlainMessage<MigrateGenericOIDCProviderRequest> | undefined): boolean {
    return proto3.util.equals(MigrateGenericOIDCProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.MigrateGenericOIDCProviderResponse
 */
export class MigrateGenericOIDCProviderResponse extends Message<MigrateGenericOIDCProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<MigrateGenericOIDCProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.MigrateGenericOIDCProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MigrateGenericOIDCProviderResponse {
    return new MigrateGenericOIDCProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MigrateGenericOIDCProviderResponse {
    return new MigrateGenericOIDCProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MigrateGenericOIDCProviderResponse {
    return new MigrateGenericOIDCProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MigrateGenericOIDCProviderResponse | PlainMessage<MigrateGenericOIDCProviderResponse> | undefined, b: MigrateGenericOIDCProviderResponse | PlainMessage<MigrateGenericOIDCProviderResponse> | undefined): boolean {
    return proto3.util.equals(MigrateGenericOIDCProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddJWTProviderRequest
 */
export class AddJWTProviderRequest extends Message<AddJWTProviderRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string issuer = 2;
   */
  issuer = "";

  /**
   * @generated from field: string jwt_endpoint = 3;
   */
  jwtEndpoint = "";

  /**
   * @generated from field: string keys_endpoint = 4;
   */
  keysEndpoint = "";

  /**
   * @generated from field: string header_name = 5;
   */
  headerName = "";

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddJWTProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddJWTProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "jwt_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "keys_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "header_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddJWTProviderRequest {
    return new AddJWTProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddJWTProviderRequest {
    return new AddJWTProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddJWTProviderRequest {
    return new AddJWTProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddJWTProviderRequest | PlainMessage<AddJWTProviderRequest> | undefined, b: AddJWTProviderRequest | PlainMessage<AddJWTProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddJWTProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddJWTProviderResponse
 */
export class AddJWTProviderResponse extends Message<AddJWTProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddJWTProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddJWTProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddJWTProviderResponse {
    return new AddJWTProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddJWTProviderResponse {
    return new AddJWTProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddJWTProviderResponse {
    return new AddJWTProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddJWTProviderResponse | PlainMessage<AddJWTProviderResponse> | undefined, b: AddJWTProviderResponse | PlainMessage<AddJWTProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddJWTProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateJWTProviderRequest
 */
export class UpdateJWTProviderRequest extends Message<UpdateJWTProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string issuer = 3;
   */
  issuer = "";

  /**
   * @generated from field: string jwt_endpoint = 4;
   */
  jwtEndpoint = "";

  /**
   * @generated from field: string keys_endpoint = 5;
   */
  keysEndpoint = "";

  /**
   * @generated from field: string header_name = 6;
   */
  headerName = "";

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 7;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateJWTProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateJWTProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "jwt_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "keys_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "header_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateJWTProviderRequest {
    return new UpdateJWTProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateJWTProviderRequest {
    return new UpdateJWTProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateJWTProviderRequest {
    return new UpdateJWTProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateJWTProviderRequest | PlainMessage<UpdateJWTProviderRequest> | undefined, b: UpdateJWTProviderRequest | PlainMessage<UpdateJWTProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateJWTProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateJWTProviderResponse
 */
export class UpdateJWTProviderResponse extends Message<UpdateJWTProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateJWTProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateJWTProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateJWTProviderResponse {
    return new UpdateJWTProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateJWTProviderResponse {
    return new UpdateJWTProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateJWTProviderResponse {
    return new UpdateJWTProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateJWTProviderResponse | PlainMessage<UpdateJWTProviderResponse> | undefined, b: UpdateJWTProviderResponse | PlainMessage<UpdateJWTProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateJWTProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddAzureADProviderRequest
 */
export class AddAzureADProviderRequest extends Message<AddAzureADProviderRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  /**
   * if not provided the `common` tenant will be used
   *
   * @generated from field: zitadel.idp.v1.AzureADTenant tenant = 4;
   */
  tenant?: AzureADTenant;

  /**
   * @generated from field: bool email_verified = 5;
   */
  emailVerified = false;

  /**
   * @generated from field: repeated string scopes = 6;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 7;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddAzureADProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddAzureADProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "tenant", kind: "message", T: AzureADTenant },
    { no: 5, name: "email_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddAzureADProviderRequest {
    return new AddAzureADProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddAzureADProviderRequest {
    return new AddAzureADProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddAzureADProviderRequest {
    return new AddAzureADProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddAzureADProviderRequest | PlainMessage<AddAzureADProviderRequest> | undefined, b: AddAzureADProviderRequest | PlainMessage<AddAzureADProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddAzureADProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddAzureADProviderResponse
 */
export class AddAzureADProviderResponse extends Message<AddAzureADProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddAzureADProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddAzureADProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddAzureADProviderResponse {
    return new AddAzureADProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddAzureADProviderResponse {
    return new AddAzureADProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddAzureADProviderResponse {
    return new AddAzureADProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddAzureADProviderResponse | PlainMessage<AddAzureADProviderResponse> | undefined, b: AddAzureADProviderResponse | PlainMessage<AddAzureADProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddAzureADProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateAzureADProviderRequest
 */
export class UpdateAzureADProviderRequest extends Message<UpdateAzureADProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * if not provided the `common` tenant will be used
   *
   * @generated from field: zitadel.idp.v1.AzureADTenant tenant = 5;
   */
  tenant?: AzureADTenant;

  /**
   * @generated from field: bool email_verified = 6;
   */
  emailVerified = false;

  /**
   * @generated from field: repeated string scopes = 7;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 8;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateAzureADProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateAzureADProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "tenant", kind: "message", T: AzureADTenant },
    { no: 6, name: "email_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAzureADProviderRequest {
    return new UpdateAzureADProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAzureADProviderRequest {
    return new UpdateAzureADProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAzureADProviderRequest {
    return new UpdateAzureADProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAzureADProviderRequest | PlainMessage<UpdateAzureADProviderRequest> | undefined, b: UpdateAzureADProviderRequest | PlainMessage<UpdateAzureADProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAzureADProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateAzureADProviderResponse
 */
export class UpdateAzureADProviderResponse extends Message<UpdateAzureADProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateAzureADProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateAzureADProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAzureADProviderResponse {
    return new UpdateAzureADProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAzureADProviderResponse {
    return new UpdateAzureADProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAzureADProviderResponse {
    return new UpdateAzureADProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAzureADProviderResponse | PlainMessage<UpdateAzureADProviderResponse> | undefined, b: UpdateAzureADProviderResponse | PlainMessage<UpdateAzureADProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateAzureADProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGitHubProviderRequest
 */
export class AddGitHubProviderRequest extends Message<AddGitHubProviderRequest> {
  /**
   * GitHub will be used as default, if no name is provided
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 4;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 5;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddGitHubProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGitHubProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitHubProviderRequest {
    return new AddGitHubProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitHubProviderRequest {
    return new AddGitHubProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitHubProviderRequest {
    return new AddGitHubProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitHubProviderRequest | PlainMessage<AddGitHubProviderRequest> | undefined, b: AddGitHubProviderRequest | PlainMessage<AddGitHubProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGitHubProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGitHubProviderResponse
 */
export class AddGitHubProviderResponse extends Message<AddGitHubProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGitHubProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGitHubProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitHubProviderResponse {
    return new AddGitHubProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitHubProviderResponse {
    return new AddGitHubProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitHubProviderResponse {
    return new AddGitHubProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitHubProviderResponse | PlainMessage<AddGitHubProviderResponse> | undefined, b: AddGitHubProviderResponse | PlainMessage<AddGitHubProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGitHubProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGitHubProviderRequest
 */
export class UpdateGitHubProviderRequest extends Message<UpdateGitHubProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateGitHubProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGitHubProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitHubProviderRequest {
    return new UpdateGitHubProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitHubProviderRequest {
    return new UpdateGitHubProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitHubProviderRequest {
    return new UpdateGitHubProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitHubProviderRequest | PlainMessage<UpdateGitHubProviderRequest> | undefined, b: UpdateGitHubProviderRequest | PlainMessage<UpdateGitHubProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGitHubProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGitHubProviderResponse
 */
export class UpdateGitHubProviderResponse extends Message<UpdateGitHubProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGitHubProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGitHubProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitHubProviderResponse {
    return new UpdateGitHubProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitHubProviderResponse {
    return new UpdateGitHubProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitHubProviderResponse {
    return new UpdateGitHubProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitHubProviderResponse | PlainMessage<UpdateGitHubProviderResponse> | undefined, b: UpdateGitHubProviderResponse | PlainMessage<UpdateGitHubProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGitHubProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGitHubEnterpriseServerProviderRequest
 */
export class AddGitHubEnterpriseServerProviderRequest extends Message<AddGitHubEnterpriseServerProviderRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  /**
   * @generated from field: string authorization_endpoint = 4;
   */
  authorizationEndpoint = "";

  /**
   * @generated from field: string token_endpoint = 5;
   */
  tokenEndpoint = "";

  /**
   * @generated from field: string user_endpoint = 6;
   */
  userEndpoint = "";

  /**
   * @generated from field: repeated string scopes = 7;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 8;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddGitHubEnterpriseServerProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGitHubEnterpriseServerProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "authorization_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "token_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "user_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitHubEnterpriseServerProviderRequest {
    return new AddGitHubEnterpriseServerProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitHubEnterpriseServerProviderRequest {
    return new AddGitHubEnterpriseServerProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitHubEnterpriseServerProviderRequest {
    return new AddGitHubEnterpriseServerProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitHubEnterpriseServerProviderRequest | PlainMessage<AddGitHubEnterpriseServerProviderRequest> | undefined, b: AddGitHubEnterpriseServerProviderRequest | PlainMessage<AddGitHubEnterpriseServerProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGitHubEnterpriseServerProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGitHubEnterpriseServerProviderResponse
 */
export class AddGitHubEnterpriseServerProviderResponse extends Message<AddGitHubEnterpriseServerProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGitHubEnterpriseServerProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGitHubEnterpriseServerProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitHubEnterpriseServerProviderResponse {
    return new AddGitHubEnterpriseServerProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitHubEnterpriseServerProviderResponse {
    return new AddGitHubEnterpriseServerProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitHubEnterpriseServerProviderResponse {
    return new AddGitHubEnterpriseServerProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitHubEnterpriseServerProviderResponse | PlainMessage<AddGitHubEnterpriseServerProviderResponse> | undefined, b: AddGitHubEnterpriseServerProviderResponse | PlainMessage<AddGitHubEnterpriseServerProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGitHubEnterpriseServerProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGitHubEnterpriseServerProviderRequest
 */
export class UpdateGitHubEnterpriseServerProviderRequest extends Message<UpdateGitHubEnterpriseServerProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: string authorization_endpoint = 5;
   */
  authorizationEndpoint = "";

  /**
   * @generated from field: string token_endpoint = 6;
   */
  tokenEndpoint = "";

  /**
   * @generated from field: string user_endpoint = 7;
   */
  userEndpoint = "";

  /**
   * @generated from field: repeated string scopes = 8;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 9;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateGitHubEnterpriseServerProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGitHubEnterpriseServerProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "authorization_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "token_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "user_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitHubEnterpriseServerProviderRequest {
    return new UpdateGitHubEnterpriseServerProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitHubEnterpriseServerProviderRequest {
    return new UpdateGitHubEnterpriseServerProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitHubEnterpriseServerProviderRequest {
    return new UpdateGitHubEnterpriseServerProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitHubEnterpriseServerProviderRequest | PlainMessage<UpdateGitHubEnterpriseServerProviderRequest> | undefined, b: UpdateGitHubEnterpriseServerProviderRequest | PlainMessage<UpdateGitHubEnterpriseServerProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGitHubEnterpriseServerProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGitHubEnterpriseServerProviderResponse
 */
export class UpdateGitHubEnterpriseServerProviderResponse extends Message<UpdateGitHubEnterpriseServerProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGitHubEnterpriseServerProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGitHubEnterpriseServerProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitHubEnterpriseServerProviderResponse {
    return new UpdateGitHubEnterpriseServerProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitHubEnterpriseServerProviderResponse {
    return new UpdateGitHubEnterpriseServerProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitHubEnterpriseServerProviderResponse {
    return new UpdateGitHubEnterpriseServerProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitHubEnterpriseServerProviderResponse | PlainMessage<UpdateGitHubEnterpriseServerProviderResponse> | undefined, b: UpdateGitHubEnterpriseServerProviderResponse | PlainMessage<UpdateGitHubEnterpriseServerProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGitHubEnterpriseServerProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGitLabProviderRequest
 */
export class AddGitLabProviderRequest extends Message<AddGitLabProviderRequest> {
  /**
   * GitLab will be used as default, if no name is provided
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 4;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 5;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddGitLabProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGitLabProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitLabProviderRequest {
    return new AddGitLabProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitLabProviderRequest {
    return new AddGitLabProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitLabProviderRequest {
    return new AddGitLabProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitLabProviderRequest | PlainMessage<AddGitLabProviderRequest> | undefined, b: AddGitLabProviderRequest | PlainMessage<AddGitLabProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGitLabProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGitLabProviderResponse
 */
export class AddGitLabProviderResponse extends Message<AddGitLabProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGitLabProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGitLabProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitLabProviderResponse {
    return new AddGitLabProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitLabProviderResponse {
    return new AddGitLabProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitLabProviderResponse {
    return new AddGitLabProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitLabProviderResponse | PlainMessage<AddGitLabProviderResponse> | undefined, b: AddGitLabProviderResponse | PlainMessage<AddGitLabProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGitLabProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGitLabProviderRequest
 */
export class UpdateGitLabProviderRequest extends Message<UpdateGitLabProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateGitLabProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGitLabProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitLabProviderRequest {
    return new UpdateGitLabProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitLabProviderRequest {
    return new UpdateGitLabProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitLabProviderRequest {
    return new UpdateGitLabProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitLabProviderRequest | PlainMessage<UpdateGitLabProviderRequest> | undefined, b: UpdateGitLabProviderRequest | PlainMessage<UpdateGitLabProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGitLabProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGitLabProviderResponse
 */
export class UpdateGitLabProviderResponse extends Message<UpdateGitLabProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGitLabProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGitLabProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitLabProviderResponse {
    return new UpdateGitLabProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitLabProviderResponse {
    return new UpdateGitLabProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitLabProviderResponse {
    return new UpdateGitLabProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitLabProviderResponse | PlainMessage<UpdateGitLabProviderResponse> | undefined, b: UpdateGitLabProviderResponse | PlainMessage<UpdateGitLabProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGitLabProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGitLabSelfHostedProviderRequest
 */
export class AddGitLabSelfHostedProviderRequest extends Message<AddGitLabSelfHostedProviderRequest> {
  /**
   * @generated from field: string issuer = 1;
   */
  issuer = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddGitLabSelfHostedProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGitLabSelfHostedProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitLabSelfHostedProviderRequest {
    return new AddGitLabSelfHostedProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitLabSelfHostedProviderRequest {
    return new AddGitLabSelfHostedProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitLabSelfHostedProviderRequest {
    return new AddGitLabSelfHostedProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitLabSelfHostedProviderRequest | PlainMessage<AddGitLabSelfHostedProviderRequest> | undefined, b: AddGitLabSelfHostedProviderRequest | PlainMessage<AddGitLabSelfHostedProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGitLabSelfHostedProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGitLabSelfHostedProviderResponse
 */
export class AddGitLabSelfHostedProviderResponse extends Message<AddGitLabSelfHostedProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGitLabSelfHostedProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGitLabSelfHostedProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGitLabSelfHostedProviderResponse {
    return new AddGitLabSelfHostedProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGitLabSelfHostedProviderResponse {
    return new AddGitLabSelfHostedProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGitLabSelfHostedProviderResponse {
    return new AddGitLabSelfHostedProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGitLabSelfHostedProviderResponse | PlainMessage<AddGitLabSelfHostedProviderResponse> | undefined, b: AddGitLabSelfHostedProviderResponse | PlainMessage<AddGitLabSelfHostedProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGitLabSelfHostedProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGitLabSelfHostedProviderRequest
 */
export class UpdateGitLabSelfHostedProviderRequest extends Message<UpdateGitLabSelfHostedProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string issuer = 2;
   */
  issuer = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string client_id = 4;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 5;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 6;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 7;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateGitLabSelfHostedProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGitLabSelfHostedProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitLabSelfHostedProviderRequest {
    return new UpdateGitLabSelfHostedProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitLabSelfHostedProviderRequest {
    return new UpdateGitLabSelfHostedProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitLabSelfHostedProviderRequest {
    return new UpdateGitLabSelfHostedProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitLabSelfHostedProviderRequest | PlainMessage<UpdateGitLabSelfHostedProviderRequest> | undefined, b: UpdateGitLabSelfHostedProviderRequest | PlainMessage<UpdateGitLabSelfHostedProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGitLabSelfHostedProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGitLabSelfHostedProviderResponse
 */
export class UpdateGitLabSelfHostedProviderResponse extends Message<UpdateGitLabSelfHostedProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGitLabSelfHostedProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGitLabSelfHostedProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGitLabSelfHostedProviderResponse {
    return new UpdateGitLabSelfHostedProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGitLabSelfHostedProviderResponse {
    return new UpdateGitLabSelfHostedProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGitLabSelfHostedProviderResponse {
    return new UpdateGitLabSelfHostedProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGitLabSelfHostedProviderResponse | PlainMessage<UpdateGitLabSelfHostedProviderResponse> | undefined, b: UpdateGitLabSelfHostedProviderResponse | PlainMessage<UpdateGitLabSelfHostedProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGitLabSelfHostedProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGoogleProviderRequest
 */
export class AddGoogleProviderRequest extends Message<AddGoogleProviderRequest> {
  /**
   * Google will be used as default, if no name is provided
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 4;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 5;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddGoogleProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGoogleProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGoogleProviderRequest {
    return new AddGoogleProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGoogleProviderRequest {
    return new AddGoogleProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGoogleProviderRequest {
    return new AddGoogleProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddGoogleProviderRequest | PlainMessage<AddGoogleProviderRequest> | undefined, b: AddGoogleProviderRequest | PlainMessage<AddGoogleProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddGoogleProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddGoogleProviderResponse
 */
export class AddGoogleProviderResponse extends Message<AddGoogleProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddGoogleProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddGoogleProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGoogleProviderResponse {
    return new AddGoogleProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGoogleProviderResponse {
    return new AddGoogleProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGoogleProviderResponse {
    return new AddGoogleProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddGoogleProviderResponse | PlainMessage<AddGoogleProviderResponse> | undefined, b: AddGoogleProviderResponse | PlainMessage<AddGoogleProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddGoogleProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGoogleProviderRequest
 */
export class UpdateGoogleProviderRequest extends Message<UpdateGoogleProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * client_secret will only be updated if provided
   *
   * @generated from field: string client_secret = 4;
   */
  clientSecret = "";

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateGoogleProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGoogleProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGoogleProviderRequest {
    return new UpdateGoogleProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGoogleProviderRequest {
    return new UpdateGoogleProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGoogleProviderRequest {
    return new UpdateGoogleProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGoogleProviderRequest | PlainMessage<UpdateGoogleProviderRequest> | undefined, b: UpdateGoogleProviderRequest | PlainMessage<UpdateGoogleProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGoogleProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateGoogleProviderResponse
 */
export class UpdateGoogleProviderResponse extends Message<UpdateGoogleProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateGoogleProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateGoogleProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGoogleProviderResponse {
    return new UpdateGoogleProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGoogleProviderResponse {
    return new UpdateGoogleProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGoogleProviderResponse {
    return new UpdateGoogleProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGoogleProviderResponse | PlainMessage<UpdateGoogleProviderResponse> | undefined, b: UpdateGoogleProviderResponse | PlainMessage<UpdateGoogleProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGoogleProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddLDAPProviderRequest
 */
export class AddLDAPProviderRequest extends Message<AddLDAPProviderRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: repeated string servers = 2;
   */
  servers: string[] = [];

  /**
   * @generated from field: bool start_tls = 3;
   */
  startTls = false;

  /**
   * @generated from field: string base_dn = 4;
   */
  baseDn = "";

  /**
   * @generated from field: string bind_dn = 5;
   */
  bindDn = "";

  /**
   * @generated from field: string bind_password = 6;
   */
  bindPassword = "";

  /**
   * @generated from field: string user_base = 7;
   */
  userBase = "";

  /**
   * @generated from field: repeated string user_object_classes = 8;
   */
  userObjectClasses: string[] = [];

  /**
   * @generated from field: repeated string user_filters = 9;
   */
  userFilters: string[] = [];

  /**
   * @generated from field: google.protobuf.Duration timeout = 10;
   */
  timeout?: Duration;

  /**
   * @generated from field: zitadel.idp.v1.LDAPAttributes attributes = 11;
   */
  attributes?: LDAPAttributes;

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 12;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddLDAPProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddLDAPProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "servers", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "start_tls", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "base_dn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "bind_dn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "bind_password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "user_base", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "user_object_classes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "user_filters", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 10, name: "timeout", kind: "message", T: Duration },
    { no: 11, name: "attributes", kind: "message", T: LDAPAttributes },
    { no: 12, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddLDAPProviderRequest {
    return new AddLDAPProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddLDAPProviderRequest {
    return new AddLDAPProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddLDAPProviderRequest {
    return new AddLDAPProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddLDAPProviderRequest | PlainMessage<AddLDAPProviderRequest> | undefined, b: AddLDAPProviderRequest | PlainMessage<AddLDAPProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddLDAPProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddLDAPProviderResponse
 */
export class AddLDAPProviderResponse extends Message<AddLDAPProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddLDAPProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddLDAPProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddLDAPProviderResponse {
    return new AddLDAPProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddLDAPProviderResponse {
    return new AddLDAPProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddLDAPProviderResponse {
    return new AddLDAPProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddLDAPProviderResponse | PlainMessage<AddLDAPProviderResponse> | undefined, b: AddLDAPProviderResponse | PlainMessage<AddLDAPProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddLDAPProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateLDAPProviderRequest
 */
export class UpdateLDAPProviderRequest extends Message<UpdateLDAPProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: repeated string servers = 3;
   */
  servers: string[] = [];

  /**
   * @generated from field: bool start_tls = 4;
   */
  startTls = false;

  /**
   * @generated from field: string base_dn = 5;
   */
  baseDn = "";

  /**
   * @generated from field: string bind_dn = 6;
   */
  bindDn = "";

  /**
   * @generated from field: string bind_password = 7;
   */
  bindPassword = "";

  /**
   * @generated from field: string user_base = 8;
   */
  userBase = "";

  /**
   * @generated from field: repeated string user_object_classes = 9;
   */
  userObjectClasses: string[] = [];

  /**
   * @generated from field: repeated string user_filters = 10;
   */
  userFilters: string[] = [];

  /**
   * @generated from field: google.protobuf.Duration timeout = 11;
   */
  timeout?: Duration;

  /**
   * @generated from field: zitadel.idp.v1.LDAPAttributes attributes = 12;
   */
  attributes?: LDAPAttributes;

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 13;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateLDAPProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateLDAPProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "servers", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "start_tls", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "base_dn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "bind_dn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "bind_password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "user_base", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "user_object_classes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 10, name: "user_filters", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 11, name: "timeout", kind: "message", T: Duration },
    { no: 12, name: "attributes", kind: "message", T: LDAPAttributes },
    { no: 13, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLDAPProviderRequest {
    return new UpdateLDAPProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLDAPProviderRequest {
    return new UpdateLDAPProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLDAPProviderRequest {
    return new UpdateLDAPProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLDAPProviderRequest | PlainMessage<UpdateLDAPProviderRequest> | undefined, b: UpdateLDAPProviderRequest | PlainMessage<UpdateLDAPProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateLDAPProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateLDAPProviderResponse
 */
export class UpdateLDAPProviderResponse extends Message<UpdateLDAPProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateLDAPProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateLDAPProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLDAPProviderResponse {
    return new UpdateLDAPProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLDAPProviderResponse {
    return new UpdateLDAPProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLDAPProviderResponse {
    return new UpdateLDAPProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLDAPProviderResponse | PlainMessage<UpdateLDAPProviderResponse> | undefined, b: UpdateLDAPProviderResponse | PlainMessage<UpdateLDAPProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateLDAPProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddAppleProviderRequest
 */
export class AddAppleProviderRequest extends Message<AddAppleProviderRequest> {
  /**
   * Apple will be used as default, if no name is provided
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: string team_id = 3;
   */
  teamId = "";

  /**
   * @generated from field: string key_id = 4;
   */
  keyId = "";

  /**
   * @generated from field: bytes private_key = 5;
   */
  privateKey = new Uint8Array(0);

  /**
   * @generated from field: repeated string scopes = 6;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 7;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<AddAppleProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddAppleProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "team_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "private_key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 6, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddAppleProviderRequest {
    return new AddAppleProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddAppleProviderRequest {
    return new AddAppleProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddAppleProviderRequest {
    return new AddAppleProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddAppleProviderRequest | PlainMessage<AddAppleProviderRequest> | undefined, b: AddAppleProviderRequest | PlainMessage<AddAppleProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddAppleProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddAppleProviderResponse
 */
export class AddAppleProviderResponse extends Message<AddAppleProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddAppleProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddAppleProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddAppleProviderResponse {
    return new AddAppleProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddAppleProviderResponse {
    return new AddAppleProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddAppleProviderResponse {
    return new AddAppleProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddAppleProviderResponse | PlainMessage<AddAppleProviderResponse> | undefined, b: AddAppleProviderResponse | PlainMessage<AddAppleProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddAppleProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateAppleProviderRequest
 */
export class UpdateAppleProviderRequest extends Message<UpdateAppleProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * @generated from field: string team_id = 4;
   */
  teamId = "";

  /**
   * @generated from field: string key_id = 5;
   */
  keyId = "";

  /**
   * @generated from field: bytes private_key = 6;
   */
  privateKey = new Uint8Array(0);

  /**
   * @generated from field: repeated string scopes = 7;
   */
  scopes: string[] = [];

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 8;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<UpdateAppleProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateAppleProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "team_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "private_key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 7, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "provider_options", kind: "message", T: Options },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppleProviderRequest {
    return new UpdateAppleProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppleProviderRequest {
    return new UpdateAppleProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppleProviderRequest {
    return new UpdateAppleProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAppleProviderRequest | PlainMessage<UpdateAppleProviderRequest> | undefined, b: UpdateAppleProviderRequest | PlainMessage<UpdateAppleProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAppleProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateAppleProviderResponse
 */
export class UpdateAppleProviderResponse extends Message<UpdateAppleProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateAppleProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateAppleProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppleProviderResponse {
    return new UpdateAppleProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppleProviderResponse {
    return new UpdateAppleProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppleProviderResponse {
    return new UpdateAppleProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAppleProviderResponse | PlainMessage<UpdateAppleProviderResponse> | undefined, b: UpdateAppleProviderResponse | PlainMessage<UpdateAppleProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateAppleProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddSAMLProviderRequest
 */
export class AddSAMLProviderRequest extends Message<AddSAMLProviderRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from oneof zitadel.admin.v1.AddSAMLProviderRequest.metadata
   */
  metadata: {
    /**
     * Metadata of the SAML identity provider.
     *
     * @generated from field: bytes metadata_xml = 2;
     */
    value: Uint8Array;
    case: "metadataXml";
  } | {
    /**
     * Url to the metadata of the SAML identity provider.
     *
     * @generated from field: string metadata_url = 3;
     */
    value: string;
    case: "metadataUrl";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * Binding which defines the type of communication with the identity provider.
   *
   * @generated from field: zitadel.idp.v1.SAMLBinding binding = 4;
   */
  binding = SAMLBinding.SAML_BINDING_UNSPECIFIED;

  /**
   * Boolean which defines if the authentication requests are signed.
   *
   * @generated from field: bool with_signed_request = 5;
   */
  withSignedRequest = false;

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 6;
   */
  providerOptions?: Options;

  /**
   * Optionally specify the `nameid-format` requested.
   *
   * @generated from field: optional zitadel.idp.v1.SAMLNameIDFormat name_id_format = 7;
   */
  nameIdFormat?: SAMLNameIDFormat;

  /**
   * Optionally specify the name of the attribute, which will be used to map the user
   * in case the nameid-format returned is `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
   *
   * @generated from field: optional string transient_mapping_attribute_name = 8;
   */
  transientMappingAttributeName?: string;

  constructor(data?: PartialMessage<AddSAMLProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddSAMLProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata_xml", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "metadata" },
    { no: 3, name: "metadata_url", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "metadata" },
    { no: 4, name: "binding", kind: "enum", T: proto3.getEnumType(SAMLBinding) },
    { no: 5, name: "with_signed_request", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "provider_options", kind: "message", T: Options },
    { no: 7, name: "name_id_format", kind: "enum", T: proto3.getEnumType(SAMLNameIDFormat), opt: true },
    { no: 8, name: "transient_mapping_attribute_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSAMLProviderRequest {
    return new AddSAMLProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSAMLProviderRequest {
    return new AddSAMLProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSAMLProviderRequest {
    return new AddSAMLProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddSAMLProviderRequest | PlainMessage<AddSAMLProviderRequest> | undefined, b: AddSAMLProviderRequest | PlainMessage<AddSAMLProviderRequest> | undefined): boolean {
    return proto3.util.equals(AddSAMLProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddSAMLProviderResponse
 */
export class AddSAMLProviderResponse extends Message<AddSAMLProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<AddSAMLProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddSAMLProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSAMLProviderResponse {
    return new AddSAMLProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSAMLProviderResponse {
    return new AddSAMLProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSAMLProviderResponse {
    return new AddSAMLProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddSAMLProviderResponse | PlainMessage<AddSAMLProviderResponse> | undefined, b: AddSAMLProviderResponse | PlainMessage<AddSAMLProviderResponse> | undefined): boolean {
    return proto3.util.equals(AddSAMLProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateSAMLProviderRequest
 */
export class UpdateSAMLProviderRequest extends Message<UpdateSAMLProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * Metadata of the SAML identity provider.
   *
   * @generated from oneof zitadel.admin.v1.UpdateSAMLProviderRequest.metadata
   */
  metadata: {
    /**
     * @generated from field: bytes metadata_xml = 3;
     */
    value: Uint8Array;
    case: "metadataXml";
  } | {
    /**
     * Url to the metadata of the SAML identity provider
     *
     * @generated from field: string metadata_url = 4;
     */
    value: string;
    case: "metadataUrl";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * Binding which defines the type of communication with the identity provider.
   *
   * @generated from field: zitadel.idp.v1.SAMLBinding binding = 5;
   */
  binding = SAMLBinding.SAML_BINDING_UNSPECIFIED;

  /**
   * Boolean which defines if the authentication requests are signed
   *
   * @generated from field: bool with_signed_request = 6;
   */
  withSignedRequest = false;

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 7;
   */
  providerOptions?: Options;

  /**
   * Optionally specify the `nameid-format` requested.
   *
   * @generated from field: optional zitadel.idp.v1.SAMLNameIDFormat name_id_format = 8;
   */
  nameIdFormat?: SAMLNameIDFormat;

  /**
   * Optionally specify the name of the attribute, which will be used to map the user
   * in case the nameid-format returned is `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
   *
   * @generated from field: optional string transient_mapping_attribute_name = 9;
   */
  transientMappingAttributeName?: string;

  constructor(data?: PartialMessage<UpdateSAMLProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateSAMLProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "metadata_xml", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "metadata" },
    { no: 4, name: "metadata_url", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "metadata" },
    { no: 5, name: "binding", kind: "enum", T: proto3.getEnumType(SAMLBinding) },
    { no: 6, name: "with_signed_request", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "provider_options", kind: "message", T: Options },
    { no: 8, name: "name_id_format", kind: "enum", T: proto3.getEnumType(SAMLNameIDFormat), opt: true },
    { no: 9, name: "transient_mapping_attribute_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSAMLProviderRequest {
    return new UpdateSAMLProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSAMLProviderRequest {
    return new UpdateSAMLProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSAMLProviderRequest {
    return new UpdateSAMLProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSAMLProviderRequest | PlainMessage<UpdateSAMLProviderRequest> | undefined, b: UpdateSAMLProviderRequest | PlainMessage<UpdateSAMLProviderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateSAMLProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateSAMLProviderResponse
 */
export class UpdateSAMLProviderResponse extends Message<UpdateSAMLProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateSAMLProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateSAMLProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSAMLProviderResponse {
    return new UpdateSAMLProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSAMLProviderResponse {
    return new UpdateSAMLProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSAMLProviderResponse {
    return new UpdateSAMLProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSAMLProviderResponse | PlainMessage<UpdateSAMLProviderResponse> | undefined, b: UpdateSAMLProviderResponse | PlainMessage<UpdateSAMLProviderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateSAMLProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RegenerateSAMLProviderCertificateRequest
 */
export class RegenerateSAMLProviderCertificateRequest extends Message<RegenerateSAMLProviderCertificateRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<RegenerateSAMLProviderCertificateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RegenerateSAMLProviderCertificateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegenerateSAMLProviderCertificateRequest {
    return new RegenerateSAMLProviderCertificateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegenerateSAMLProviderCertificateRequest {
    return new RegenerateSAMLProviderCertificateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegenerateSAMLProviderCertificateRequest {
    return new RegenerateSAMLProviderCertificateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RegenerateSAMLProviderCertificateRequest | PlainMessage<RegenerateSAMLProviderCertificateRequest> | undefined, b: RegenerateSAMLProviderCertificateRequest | PlainMessage<RegenerateSAMLProviderCertificateRequest> | undefined): boolean {
    return proto3.util.equals(RegenerateSAMLProviderCertificateRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RegenerateSAMLProviderCertificateResponse
 */
export class RegenerateSAMLProviderCertificateResponse extends Message<RegenerateSAMLProviderCertificateResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RegenerateSAMLProviderCertificateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RegenerateSAMLProviderCertificateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegenerateSAMLProviderCertificateResponse {
    return new RegenerateSAMLProviderCertificateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegenerateSAMLProviderCertificateResponse {
    return new RegenerateSAMLProviderCertificateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegenerateSAMLProviderCertificateResponse {
    return new RegenerateSAMLProviderCertificateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RegenerateSAMLProviderCertificateResponse | PlainMessage<RegenerateSAMLProviderCertificateResponse> | undefined, b: RegenerateSAMLProviderCertificateResponse | PlainMessage<RegenerateSAMLProviderCertificateResponse> | undefined): boolean {
    return proto3.util.equals(RegenerateSAMLProviderCertificateResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.DeleteProviderRequest
 */
export class DeleteProviderRequest extends Message<DeleteProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.DeleteProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteProviderRequest {
    return new DeleteProviderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteProviderRequest {
    return new DeleteProviderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteProviderRequest {
    return new DeleteProviderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteProviderRequest | PlainMessage<DeleteProviderRequest> | undefined, b: DeleteProviderRequest | PlainMessage<DeleteProviderRequest> | undefined): boolean {
    return proto3.util.equals(DeleteProviderRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.DeleteProviderResponse
 */
export class DeleteProviderResponse extends Message<DeleteProviderResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<DeleteProviderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.DeleteProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteProviderResponse {
    return new DeleteProviderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteProviderResponse {
    return new DeleteProviderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteProviderResponse {
    return new DeleteProviderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteProviderResponse | PlainMessage<DeleteProviderResponse> | undefined, b: DeleteProviderResponse | PlainMessage<DeleteProviderResponse> | undefined): boolean {
    return proto3.util.equals(DeleteProviderResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetOrgIAMPolicyRequest
 */
export class GetOrgIAMPolicyRequest extends Message<GetOrgIAMPolicyRequest> {
  constructor(data?: PartialMessage<GetOrgIAMPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetOrgIAMPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrgIAMPolicyRequest {
    return new GetOrgIAMPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrgIAMPolicyRequest {
    return new GetOrgIAMPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrgIAMPolicyRequest {
    return new GetOrgIAMPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrgIAMPolicyRequest | PlainMessage<GetOrgIAMPolicyRequest> | undefined, b: GetOrgIAMPolicyRequest | PlainMessage<GetOrgIAMPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetOrgIAMPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetOrgIAMPolicyResponse
 */
export class GetOrgIAMPolicyResponse extends Message<GetOrgIAMPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.OrgIAMPolicy policy = 1;
   */
  policy?: OrgIAMPolicy;

  constructor(data?: PartialMessage<GetOrgIAMPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetOrgIAMPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: OrgIAMPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrgIAMPolicyResponse {
    return new GetOrgIAMPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrgIAMPolicyResponse {
    return new GetOrgIAMPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrgIAMPolicyResponse {
    return new GetOrgIAMPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrgIAMPolicyResponse | PlainMessage<GetOrgIAMPolicyResponse> | undefined, b: GetOrgIAMPolicyResponse | PlainMessage<GetOrgIAMPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetOrgIAMPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateOrgIAMPolicyRequest
 */
export class UpdateOrgIAMPolicyRequest extends Message<UpdateOrgIAMPolicyRequest> {
  /**
   * @generated from field: bool user_login_must_be_domain = 1;
   */
  userLoginMustBeDomain = false;

  constructor(data?: PartialMessage<UpdateOrgIAMPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateOrgIAMPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_login_must_be_domain", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrgIAMPolicyRequest {
    return new UpdateOrgIAMPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrgIAMPolicyRequest {
    return new UpdateOrgIAMPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrgIAMPolicyRequest {
    return new UpdateOrgIAMPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrgIAMPolicyRequest | PlainMessage<UpdateOrgIAMPolicyRequest> | undefined, b: UpdateOrgIAMPolicyRequest | PlainMessage<UpdateOrgIAMPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOrgIAMPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateOrgIAMPolicyResponse
 */
export class UpdateOrgIAMPolicyResponse extends Message<UpdateOrgIAMPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateOrgIAMPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateOrgIAMPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrgIAMPolicyResponse {
    return new UpdateOrgIAMPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrgIAMPolicyResponse {
    return new UpdateOrgIAMPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrgIAMPolicyResponse {
    return new UpdateOrgIAMPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrgIAMPolicyResponse | PlainMessage<UpdateOrgIAMPolicyResponse> | undefined, b: UpdateOrgIAMPolicyResponse | PlainMessage<UpdateOrgIAMPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOrgIAMPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomOrgIAMPolicyRequest
 */
export class GetCustomOrgIAMPolicyRequest extends Message<GetCustomOrgIAMPolicyRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  constructor(data?: PartialMessage<GetCustomOrgIAMPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomOrgIAMPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomOrgIAMPolicyRequest {
    return new GetCustomOrgIAMPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomOrgIAMPolicyRequest {
    return new GetCustomOrgIAMPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomOrgIAMPolicyRequest {
    return new GetCustomOrgIAMPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomOrgIAMPolicyRequest | PlainMessage<GetCustomOrgIAMPolicyRequest> | undefined, b: GetCustomOrgIAMPolicyRequest | PlainMessage<GetCustomOrgIAMPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomOrgIAMPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomOrgIAMPolicyResponse
 */
export class GetCustomOrgIAMPolicyResponse extends Message<GetCustomOrgIAMPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.OrgIAMPolicy policy = 1;
   */
  policy?: OrgIAMPolicy;

  /**
   * deprecated: is_default is also defined in zitadel.policy.v1.OrgIAMPolicy
   *
   * @generated from field: bool is_default = 2;
   */
  isDefault = false;

  constructor(data?: PartialMessage<GetCustomOrgIAMPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomOrgIAMPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: OrgIAMPolicy },
    { no: 2, name: "is_default", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomOrgIAMPolicyResponse {
    return new GetCustomOrgIAMPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomOrgIAMPolicyResponse {
    return new GetCustomOrgIAMPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomOrgIAMPolicyResponse {
    return new GetCustomOrgIAMPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomOrgIAMPolicyResponse | PlainMessage<GetCustomOrgIAMPolicyResponse> | undefined, b: GetCustomOrgIAMPolicyResponse | PlainMessage<GetCustomOrgIAMPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomOrgIAMPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddCustomOrgIAMPolicyRequest
 */
export class AddCustomOrgIAMPolicyRequest extends Message<AddCustomOrgIAMPolicyRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * the username has to end with the domain of its organization (uniqueness is organization based)
   *
   * @generated from field: bool user_login_must_be_domain = 2;
   */
  userLoginMustBeDomain = false;

  constructor(data?: PartialMessage<AddCustomOrgIAMPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddCustomOrgIAMPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_login_must_be_domain", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomOrgIAMPolicyRequest {
    return new AddCustomOrgIAMPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomOrgIAMPolicyRequest {
    return new AddCustomOrgIAMPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomOrgIAMPolicyRequest {
    return new AddCustomOrgIAMPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomOrgIAMPolicyRequest | PlainMessage<AddCustomOrgIAMPolicyRequest> | undefined, b: AddCustomOrgIAMPolicyRequest | PlainMessage<AddCustomOrgIAMPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddCustomOrgIAMPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddCustomOrgIAMPolicyResponse
 */
export class AddCustomOrgIAMPolicyResponse extends Message<AddCustomOrgIAMPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddCustomOrgIAMPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddCustomOrgIAMPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomOrgIAMPolicyResponse {
    return new AddCustomOrgIAMPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomOrgIAMPolicyResponse {
    return new AddCustomOrgIAMPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomOrgIAMPolicyResponse {
    return new AddCustomOrgIAMPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomOrgIAMPolicyResponse | PlainMessage<AddCustomOrgIAMPolicyResponse> | undefined, b: AddCustomOrgIAMPolicyResponse | PlainMessage<AddCustomOrgIAMPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddCustomOrgIAMPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateCustomOrgIAMPolicyRequest
 */
export class UpdateCustomOrgIAMPolicyRequest extends Message<UpdateCustomOrgIAMPolicyRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: bool user_login_must_be_domain = 2;
   */
  userLoginMustBeDomain = false;

  constructor(data?: PartialMessage<UpdateCustomOrgIAMPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateCustomOrgIAMPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_login_must_be_domain", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomOrgIAMPolicyRequest {
    return new UpdateCustomOrgIAMPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomOrgIAMPolicyRequest {
    return new UpdateCustomOrgIAMPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomOrgIAMPolicyRequest {
    return new UpdateCustomOrgIAMPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomOrgIAMPolicyRequest | PlainMessage<UpdateCustomOrgIAMPolicyRequest> | undefined, b: UpdateCustomOrgIAMPolicyRequest | PlainMessage<UpdateCustomOrgIAMPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateCustomOrgIAMPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateCustomOrgIAMPolicyResponse
 */
export class UpdateCustomOrgIAMPolicyResponse extends Message<UpdateCustomOrgIAMPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateCustomOrgIAMPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateCustomOrgIAMPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomOrgIAMPolicyResponse {
    return new UpdateCustomOrgIAMPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomOrgIAMPolicyResponse {
    return new UpdateCustomOrgIAMPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomOrgIAMPolicyResponse {
    return new UpdateCustomOrgIAMPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomOrgIAMPolicyResponse | PlainMessage<UpdateCustomOrgIAMPolicyResponse> | undefined, b: UpdateCustomOrgIAMPolicyResponse | PlainMessage<UpdateCustomOrgIAMPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateCustomOrgIAMPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomOrgIAMPolicyToDefaultRequest
 */
export class ResetCustomOrgIAMPolicyToDefaultRequest extends Message<ResetCustomOrgIAMPolicyToDefaultRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  constructor(data?: PartialMessage<ResetCustomOrgIAMPolicyToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomOrgIAMPolicyToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomOrgIAMPolicyToDefaultRequest {
    return new ResetCustomOrgIAMPolicyToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomOrgIAMPolicyToDefaultRequest {
    return new ResetCustomOrgIAMPolicyToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomOrgIAMPolicyToDefaultRequest {
    return new ResetCustomOrgIAMPolicyToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomOrgIAMPolicyToDefaultRequest | PlainMessage<ResetCustomOrgIAMPolicyToDefaultRequest> | undefined, b: ResetCustomOrgIAMPolicyToDefaultRequest | PlainMessage<ResetCustomOrgIAMPolicyToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomOrgIAMPolicyToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomOrgIAMPolicyToDefaultResponse
 */
export class ResetCustomOrgIAMPolicyToDefaultResponse extends Message<ResetCustomOrgIAMPolicyToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomOrgIAMPolicyToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomOrgIAMPolicyToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomOrgIAMPolicyToDefaultResponse {
    return new ResetCustomOrgIAMPolicyToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomOrgIAMPolicyToDefaultResponse {
    return new ResetCustomOrgIAMPolicyToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomOrgIAMPolicyToDefaultResponse {
    return new ResetCustomOrgIAMPolicyToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomOrgIAMPolicyToDefaultResponse | PlainMessage<ResetCustomOrgIAMPolicyToDefaultResponse> | undefined, b: ResetCustomOrgIAMPolicyToDefaultResponse | PlainMessage<ResetCustomOrgIAMPolicyToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomOrgIAMPolicyToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDomainPolicyRequest
 */
export class GetDomainPolicyRequest extends Message<GetDomainPolicyRequest> {
  constructor(data?: PartialMessage<GetDomainPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDomainPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDomainPolicyRequest {
    return new GetDomainPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDomainPolicyRequest {
    return new GetDomainPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDomainPolicyRequest {
    return new GetDomainPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDomainPolicyRequest | PlainMessage<GetDomainPolicyRequest> | undefined, b: GetDomainPolicyRequest | PlainMessage<GetDomainPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetDomainPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDomainPolicyResponse
 */
export class GetDomainPolicyResponse extends Message<GetDomainPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.DomainPolicy policy = 1;
   */
  policy?: DomainPolicy;

  constructor(data?: PartialMessage<GetDomainPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDomainPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: DomainPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDomainPolicyResponse {
    return new GetDomainPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDomainPolicyResponse {
    return new GetDomainPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDomainPolicyResponse {
    return new GetDomainPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDomainPolicyResponse | PlainMessage<GetDomainPolicyResponse> | undefined, b: GetDomainPolicyResponse | PlainMessage<GetDomainPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetDomainPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateDomainPolicyRequest
 */
export class UpdateDomainPolicyRequest extends Message<UpdateDomainPolicyRequest> {
  /**
   * @generated from field: bool user_login_must_be_domain = 1;
   */
  userLoginMustBeDomain = false;

  /**
   * @generated from field: bool validate_org_domains = 2;
   */
  validateOrgDomains = false;

  /**
   * @generated from field: bool smtp_sender_address_matches_instance_domain = 3;
   */
  smtpSenderAddressMatchesInstanceDomain = false;

  constructor(data?: PartialMessage<UpdateDomainPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateDomainPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_login_must_be_domain", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "validate_org_domains", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "smtp_sender_address_matches_instance_domain", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDomainPolicyRequest {
    return new UpdateDomainPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDomainPolicyRequest {
    return new UpdateDomainPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDomainPolicyRequest {
    return new UpdateDomainPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDomainPolicyRequest | PlainMessage<UpdateDomainPolicyRequest> | undefined, b: UpdateDomainPolicyRequest | PlainMessage<UpdateDomainPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateDomainPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateDomainPolicyResponse
 */
export class UpdateDomainPolicyResponse extends Message<UpdateDomainPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateDomainPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateDomainPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDomainPolicyResponse {
    return new UpdateDomainPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDomainPolicyResponse {
    return new UpdateDomainPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDomainPolicyResponse {
    return new UpdateDomainPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDomainPolicyResponse | PlainMessage<UpdateDomainPolicyResponse> | undefined, b: UpdateDomainPolicyResponse | PlainMessage<UpdateDomainPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateDomainPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomDomainPolicyRequest
 */
export class GetCustomDomainPolicyRequest extends Message<GetCustomDomainPolicyRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  constructor(data?: PartialMessage<GetCustomDomainPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomDomainPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomDomainPolicyRequest {
    return new GetCustomDomainPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomDomainPolicyRequest {
    return new GetCustomDomainPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomDomainPolicyRequest {
    return new GetCustomDomainPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomDomainPolicyRequest | PlainMessage<GetCustomDomainPolicyRequest> | undefined, b: GetCustomDomainPolicyRequest | PlainMessage<GetCustomDomainPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomDomainPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomDomainPolicyResponse
 */
export class GetCustomDomainPolicyResponse extends Message<GetCustomDomainPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.DomainPolicy policy = 1;
   */
  policy?: DomainPolicy;

  /**
   * deprecated: is_default is also defined in zitadel.policy.v1.DomainPolicy
   *
   * @generated from field: bool is_default = 2;
   */
  isDefault = false;

  constructor(data?: PartialMessage<GetCustomDomainPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomDomainPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: DomainPolicy },
    { no: 2, name: "is_default", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomDomainPolicyResponse {
    return new GetCustomDomainPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomDomainPolicyResponse {
    return new GetCustomDomainPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomDomainPolicyResponse {
    return new GetCustomDomainPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomDomainPolicyResponse | PlainMessage<GetCustomDomainPolicyResponse> | undefined, b: GetCustomDomainPolicyResponse | PlainMessage<GetCustomDomainPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomDomainPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddCustomDomainPolicyRequest
 */
export class AddCustomDomainPolicyRequest extends Message<AddCustomDomainPolicyRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * the username has to end with the domain of its organization (uniqueness is organization based)
   *
   * @generated from field: bool user_login_must_be_domain = 2;
   */
  userLoginMustBeDomain = false;

  /**
   * @generated from field: bool validate_org_domains = 3;
   */
  validateOrgDomains = false;

  /**
   * @generated from field: bool smtp_sender_address_matches_instance_domain = 4;
   */
  smtpSenderAddressMatchesInstanceDomain = false;

  constructor(data?: PartialMessage<AddCustomDomainPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddCustomDomainPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_login_must_be_domain", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "validate_org_domains", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "smtp_sender_address_matches_instance_domain", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomDomainPolicyRequest {
    return new AddCustomDomainPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomDomainPolicyRequest {
    return new AddCustomDomainPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomDomainPolicyRequest {
    return new AddCustomDomainPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomDomainPolicyRequest | PlainMessage<AddCustomDomainPolicyRequest> | undefined, b: AddCustomDomainPolicyRequest | PlainMessage<AddCustomDomainPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddCustomDomainPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddCustomDomainPolicyResponse
 */
export class AddCustomDomainPolicyResponse extends Message<AddCustomDomainPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddCustomDomainPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddCustomDomainPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCustomDomainPolicyResponse {
    return new AddCustomDomainPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCustomDomainPolicyResponse {
    return new AddCustomDomainPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCustomDomainPolicyResponse {
    return new AddCustomDomainPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddCustomDomainPolicyResponse | PlainMessage<AddCustomDomainPolicyResponse> | undefined, b: AddCustomDomainPolicyResponse | PlainMessage<AddCustomDomainPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddCustomDomainPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateCustomDomainPolicyRequest
 */
export class UpdateCustomDomainPolicyRequest extends Message<UpdateCustomDomainPolicyRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: bool user_login_must_be_domain = 2;
   */
  userLoginMustBeDomain = false;

  /**
   * @generated from field: bool validate_org_domains = 3;
   */
  validateOrgDomains = false;

  /**
   * @generated from field: bool smtp_sender_address_matches_instance_domain = 4;
   */
  smtpSenderAddressMatchesInstanceDomain = false;

  constructor(data?: PartialMessage<UpdateCustomDomainPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateCustomDomainPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_login_must_be_domain", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "validate_org_domains", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "smtp_sender_address_matches_instance_domain", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomDomainPolicyRequest {
    return new UpdateCustomDomainPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomDomainPolicyRequest {
    return new UpdateCustomDomainPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomDomainPolicyRequest {
    return new UpdateCustomDomainPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomDomainPolicyRequest | PlainMessage<UpdateCustomDomainPolicyRequest> | undefined, b: UpdateCustomDomainPolicyRequest | PlainMessage<UpdateCustomDomainPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateCustomDomainPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateCustomDomainPolicyResponse
 */
export class UpdateCustomDomainPolicyResponse extends Message<UpdateCustomDomainPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateCustomDomainPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateCustomDomainPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomDomainPolicyResponse {
    return new UpdateCustomDomainPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomDomainPolicyResponse {
    return new UpdateCustomDomainPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomDomainPolicyResponse {
    return new UpdateCustomDomainPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCustomDomainPolicyResponse | PlainMessage<UpdateCustomDomainPolicyResponse> | undefined, b: UpdateCustomDomainPolicyResponse | PlainMessage<UpdateCustomDomainPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateCustomDomainPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomDomainPolicyToDefaultRequest
 */
export class ResetCustomDomainPolicyToDefaultRequest extends Message<ResetCustomDomainPolicyToDefaultRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  constructor(data?: PartialMessage<ResetCustomDomainPolicyToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomDomainPolicyToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomDomainPolicyToDefaultRequest {
    return new ResetCustomDomainPolicyToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomDomainPolicyToDefaultRequest {
    return new ResetCustomDomainPolicyToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomDomainPolicyToDefaultRequest {
    return new ResetCustomDomainPolicyToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomDomainPolicyToDefaultRequest | PlainMessage<ResetCustomDomainPolicyToDefaultRequest> | undefined, b: ResetCustomDomainPolicyToDefaultRequest | PlainMessage<ResetCustomDomainPolicyToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomDomainPolicyToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomDomainPolicyToDefaultResponse
 */
export class ResetCustomDomainPolicyToDefaultResponse extends Message<ResetCustomDomainPolicyToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomDomainPolicyToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomDomainPolicyToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomDomainPolicyToDefaultResponse {
    return new ResetCustomDomainPolicyToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomDomainPolicyToDefaultResponse {
    return new ResetCustomDomainPolicyToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomDomainPolicyToDefaultResponse {
    return new ResetCustomDomainPolicyToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomDomainPolicyToDefaultResponse | PlainMessage<ResetCustomDomainPolicyToDefaultResponse> | undefined, b: ResetCustomDomainPolicyToDefaultResponse | PlainMessage<ResetCustomDomainPolicyToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomDomainPolicyToDefaultResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetLabelPolicyRequest
 */
export class GetLabelPolicyRequest extends Message<GetLabelPolicyRequest> {
  constructor(data?: PartialMessage<GetLabelPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetLabelPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLabelPolicyRequest {
    return new GetLabelPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLabelPolicyRequest {
    return new GetLabelPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLabelPolicyRequest {
    return new GetLabelPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetLabelPolicyRequest | PlainMessage<GetLabelPolicyRequest> | undefined, b: GetLabelPolicyRequest | PlainMessage<GetLabelPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetLabelPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetLabelPolicyResponse
 */
export class GetLabelPolicyResponse extends Message<GetLabelPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.LabelPolicy policy = 1;
   */
  policy?: LabelPolicy;

  constructor(data?: PartialMessage<GetLabelPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetLabelPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: LabelPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLabelPolicyResponse {
    return new GetLabelPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLabelPolicyResponse {
    return new GetLabelPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLabelPolicyResponse {
    return new GetLabelPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetLabelPolicyResponse | PlainMessage<GetLabelPolicyResponse> | undefined, b: GetLabelPolicyResponse | PlainMessage<GetLabelPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetLabelPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetPreviewLabelPolicyRequest
 */
export class GetPreviewLabelPolicyRequest extends Message<GetPreviewLabelPolicyRequest> {
  constructor(data?: PartialMessage<GetPreviewLabelPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetPreviewLabelPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPreviewLabelPolicyRequest {
    return new GetPreviewLabelPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPreviewLabelPolicyRequest {
    return new GetPreviewLabelPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPreviewLabelPolicyRequest {
    return new GetPreviewLabelPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPreviewLabelPolicyRequest | PlainMessage<GetPreviewLabelPolicyRequest> | undefined, b: GetPreviewLabelPolicyRequest | PlainMessage<GetPreviewLabelPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetPreviewLabelPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetPreviewLabelPolicyResponse
 */
export class GetPreviewLabelPolicyResponse extends Message<GetPreviewLabelPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.LabelPolicy policy = 1;
   */
  policy?: LabelPolicy;

  constructor(data?: PartialMessage<GetPreviewLabelPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetPreviewLabelPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: LabelPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPreviewLabelPolicyResponse {
    return new GetPreviewLabelPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPreviewLabelPolicyResponse {
    return new GetPreviewLabelPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPreviewLabelPolicyResponse {
    return new GetPreviewLabelPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPreviewLabelPolicyResponse | PlainMessage<GetPreviewLabelPolicyResponse> | undefined, b: GetPreviewLabelPolicyResponse | PlainMessage<GetPreviewLabelPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetPreviewLabelPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateLabelPolicyRequest
 */
export class UpdateLabelPolicyRequest extends Message<UpdateLabelPolicyRequest> {
  /**
   * @generated from field: string primary_color = 1;
   */
  primaryColor = "";

  /**
   * @generated from field: bool hide_login_name_suffix = 3;
   */
  hideLoginNameSuffix = false;

  /**
   * @generated from field: string warn_color = 4;
   */
  warnColor = "";

  /**
   * @generated from field: string background_color = 5;
   */
  backgroundColor = "";

  /**
   * @generated from field: string font_color = 6;
   */
  fontColor = "";

  /**
   * @generated from field: string primary_color_dark = 7;
   */
  primaryColorDark = "";

  /**
   * @generated from field: string background_color_dark = 8;
   */
  backgroundColorDark = "";

  /**
   * @generated from field: string warn_color_dark = 9;
   */
  warnColorDark = "";

  /**
   * @generated from field: string font_color_dark = 10;
   */
  fontColorDark = "";

  /**
   * @generated from field: bool disable_watermark = 11;
   */
  disableWatermark = false;

  /**
   * @generated from field: zitadel.policy.v1.ThemeMode theme_mode = 12;
   */
  themeMode = ThemeMode.UNSPECIFIED;

  constructor(data?: PartialMessage<UpdateLabelPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateLabelPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "primary_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "hide_login_name_suffix", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "warn_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "background_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "font_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "primary_color_dark", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "background_color_dark", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "warn_color_dark", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "font_color_dark", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "disable_watermark", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "theme_mode", kind: "enum", T: proto3.getEnumType(ThemeMode) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLabelPolicyRequest {
    return new UpdateLabelPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLabelPolicyRequest {
    return new UpdateLabelPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLabelPolicyRequest {
    return new UpdateLabelPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLabelPolicyRequest | PlainMessage<UpdateLabelPolicyRequest> | undefined, b: UpdateLabelPolicyRequest | PlainMessage<UpdateLabelPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateLabelPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateLabelPolicyResponse
 */
export class UpdateLabelPolicyResponse extends Message<UpdateLabelPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateLabelPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateLabelPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLabelPolicyResponse {
    return new UpdateLabelPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLabelPolicyResponse {
    return new UpdateLabelPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLabelPolicyResponse {
    return new UpdateLabelPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLabelPolicyResponse | PlainMessage<UpdateLabelPolicyResponse> | undefined, b: UpdateLabelPolicyResponse | PlainMessage<UpdateLabelPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateLabelPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.ActivateLabelPolicyRequest
 */
export class ActivateLabelPolicyRequest extends Message<ActivateLabelPolicyRequest> {
  constructor(data?: PartialMessage<ActivateLabelPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ActivateLabelPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivateLabelPolicyRequest {
    return new ActivateLabelPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivateLabelPolicyRequest {
    return new ActivateLabelPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivateLabelPolicyRequest {
    return new ActivateLabelPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ActivateLabelPolicyRequest | PlainMessage<ActivateLabelPolicyRequest> | undefined, b: ActivateLabelPolicyRequest | PlainMessage<ActivateLabelPolicyRequest> | undefined): boolean {
    return proto3.util.equals(ActivateLabelPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ActivateLabelPolicyResponse
 */
export class ActivateLabelPolicyResponse extends Message<ActivateLabelPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ActivateLabelPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ActivateLabelPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivateLabelPolicyResponse {
    return new ActivateLabelPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivateLabelPolicyResponse {
    return new ActivateLabelPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivateLabelPolicyResponse {
    return new ActivateLabelPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ActivateLabelPolicyResponse | PlainMessage<ActivateLabelPolicyResponse> | undefined, b: ActivateLabelPolicyResponse | PlainMessage<ActivateLabelPolicyResponse> | undefined): boolean {
    return proto3.util.equals(ActivateLabelPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.RemoveLabelPolicyLogoRequest
 */
export class RemoveLabelPolicyLogoRequest extends Message<RemoveLabelPolicyLogoRequest> {
  constructor(data?: PartialMessage<RemoveLabelPolicyLogoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveLabelPolicyLogoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveLabelPolicyLogoRequest {
    return new RemoveLabelPolicyLogoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveLabelPolicyLogoRequest {
    return new RemoveLabelPolicyLogoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveLabelPolicyLogoRequest {
    return new RemoveLabelPolicyLogoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveLabelPolicyLogoRequest | PlainMessage<RemoveLabelPolicyLogoRequest> | undefined, b: RemoveLabelPolicyLogoRequest | PlainMessage<RemoveLabelPolicyLogoRequest> | undefined): boolean {
    return proto3.util.equals(RemoveLabelPolicyLogoRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveLabelPolicyLogoResponse
 */
export class RemoveLabelPolicyLogoResponse extends Message<RemoveLabelPolicyLogoResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveLabelPolicyLogoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveLabelPolicyLogoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveLabelPolicyLogoResponse {
    return new RemoveLabelPolicyLogoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveLabelPolicyLogoResponse {
    return new RemoveLabelPolicyLogoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveLabelPolicyLogoResponse {
    return new RemoveLabelPolicyLogoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveLabelPolicyLogoResponse | PlainMessage<RemoveLabelPolicyLogoResponse> | undefined, b: RemoveLabelPolicyLogoResponse | PlainMessage<RemoveLabelPolicyLogoResponse> | undefined): boolean {
    return proto3.util.equals(RemoveLabelPolicyLogoResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.RemoveLabelPolicyLogoDarkRequest
 */
export class RemoveLabelPolicyLogoDarkRequest extends Message<RemoveLabelPolicyLogoDarkRequest> {
  constructor(data?: PartialMessage<RemoveLabelPolicyLogoDarkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveLabelPolicyLogoDarkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveLabelPolicyLogoDarkRequest {
    return new RemoveLabelPolicyLogoDarkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveLabelPolicyLogoDarkRequest {
    return new RemoveLabelPolicyLogoDarkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveLabelPolicyLogoDarkRequest {
    return new RemoveLabelPolicyLogoDarkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveLabelPolicyLogoDarkRequest | PlainMessage<RemoveLabelPolicyLogoDarkRequest> | undefined, b: RemoveLabelPolicyLogoDarkRequest | PlainMessage<RemoveLabelPolicyLogoDarkRequest> | undefined): boolean {
    return proto3.util.equals(RemoveLabelPolicyLogoDarkRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveLabelPolicyLogoDarkResponse
 */
export class RemoveLabelPolicyLogoDarkResponse extends Message<RemoveLabelPolicyLogoDarkResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveLabelPolicyLogoDarkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveLabelPolicyLogoDarkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveLabelPolicyLogoDarkResponse {
    return new RemoveLabelPolicyLogoDarkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveLabelPolicyLogoDarkResponse {
    return new RemoveLabelPolicyLogoDarkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveLabelPolicyLogoDarkResponse {
    return new RemoveLabelPolicyLogoDarkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveLabelPolicyLogoDarkResponse | PlainMessage<RemoveLabelPolicyLogoDarkResponse> | undefined, b: RemoveLabelPolicyLogoDarkResponse | PlainMessage<RemoveLabelPolicyLogoDarkResponse> | undefined): boolean {
    return proto3.util.equals(RemoveLabelPolicyLogoDarkResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.RemoveLabelPolicyIconRequest
 */
export class RemoveLabelPolicyIconRequest extends Message<RemoveLabelPolicyIconRequest> {
  constructor(data?: PartialMessage<RemoveLabelPolicyIconRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveLabelPolicyIconRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveLabelPolicyIconRequest {
    return new RemoveLabelPolicyIconRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveLabelPolicyIconRequest {
    return new RemoveLabelPolicyIconRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveLabelPolicyIconRequest {
    return new RemoveLabelPolicyIconRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveLabelPolicyIconRequest | PlainMessage<RemoveLabelPolicyIconRequest> | undefined, b: RemoveLabelPolicyIconRequest | PlainMessage<RemoveLabelPolicyIconRequest> | undefined): boolean {
    return proto3.util.equals(RemoveLabelPolicyIconRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveLabelPolicyIconResponse
 */
export class RemoveLabelPolicyIconResponse extends Message<RemoveLabelPolicyIconResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveLabelPolicyIconResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveLabelPolicyIconResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveLabelPolicyIconResponse {
    return new RemoveLabelPolicyIconResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveLabelPolicyIconResponse {
    return new RemoveLabelPolicyIconResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveLabelPolicyIconResponse {
    return new RemoveLabelPolicyIconResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveLabelPolicyIconResponse | PlainMessage<RemoveLabelPolicyIconResponse> | undefined, b: RemoveLabelPolicyIconResponse | PlainMessage<RemoveLabelPolicyIconResponse> | undefined): boolean {
    return proto3.util.equals(RemoveLabelPolicyIconResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.RemoveLabelPolicyIconDarkRequest
 */
export class RemoveLabelPolicyIconDarkRequest extends Message<RemoveLabelPolicyIconDarkRequest> {
  constructor(data?: PartialMessage<RemoveLabelPolicyIconDarkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveLabelPolicyIconDarkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveLabelPolicyIconDarkRequest {
    return new RemoveLabelPolicyIconDarkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveLabelPolicyIconDarkRequest {
    return new RemoveLabelPolicyIconDarkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveLabelPolicyIconDarkRequest {
    return new RemoveLabelPolicyIconDarkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveLabelPolicyIconDarkRequest | PlainMessage<RemoveLabelPolicyIconDarkRequest> | undefined, b: RemoveLabelPolicyIconDarkRequest | PlainMessage<RemoveLabelPolicyIconDarkRequest> | undefined): boolean {
    return proto3.util.equals(RemoveLabelPolicyIconDarkRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveLabelPolicyIconDarkResponse
 */
export class RemoveLabelPolicyIconDarkResponse extends Message<RemoveLabelPolicyIconDarkResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveLabelPolicyIconDarkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveLabelPolicyIconDarkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveLabelPolicyIconDarkResponse {
    return new RemoveLabelPolicyIconDarkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveLabelPolicyIconDarkResponse {
    return new RemoveLabelPolicyIconDarkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveLabelPolicyIconDarkResponse {
    return new RemoveLabelPolicyIconDarkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveLabelPolicyIconDarkResponse | PlainMessage<RemoveLabelPolicyIconDarkResponse> | undefined, b: RemoveLabelPolicyIconDarkResponse | PlainMessage<RemoveLabelPolicyIconDarkResponse> | undefined): boolean {
    return proto3.util.equals(RemoveLabelPolicyIconDarkResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.RemoveLabelPolicyFontRequest
 */
export class RemoveLabelPolicyFontRequest extends Message<RemoveLabelPolicyFontRequest> {
  constructor(data?: PartialMessage<RemoveLabelPolicyFontRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveLabelPolicyFontRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveLabelPolicyFontRequest {
    return new RemoveLabelPolicyFontRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveLabelPolicyFontRequest {
    return new RemoveLabelPolicyFontRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveLabelPolicyFontRequest {
    return new RemoveLabelPolicyFontRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveLabelPolicyFontRequest | PlainMessage<RemoveLabelPolicyFontRequest> | undefined, b: RemoveLabelPolicyFontRequest | PlainMessage<RemoveLabelPolicyFontRequest> | undefined): boolean {
    return proto3.util.equals(RemoveLabelPolicyFontRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveLabelPolicyFontResponse
 */
export class RemoveLabelPolicyFontResponse extends Message<RemoveLabelPolicyFontResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveLabelPolicyFontResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveLabelPolicyFontResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveLabelPolicyFontResponse {
    return new RemoveLabelPolicyFontResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveLabelPolicyFontResponse {
    return new RemoveLabelPolicyFontResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveLabelPolicyFontResponse {
    return new RemoveLabelPolicyFontResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveLabelPolicyFontResponse | PlainMessage<RemoveLabelPolicyFontResponse> | undefined, b: RemoveLabelPolicyFontResponse | PlainMessage<RemoveLabelPolicyFontResponse> | undefined): boolean {
    return proto3.util.equals(RemoveLabelPolicyFontResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetLoginPolicyRequest
 */
export class GetLoginPolicyRequest extends Message<GetLoginPolicyRequest> {
  constructor(data?: PartialMessage<GetLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLoginPolicyRequest {
    return new GetLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLoginPolicyRequest {
    return new GetLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLoginPolicyRequest {
    return new GetLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetLoginPolicyRequest | PlainMessage<GetLoginPolicyRequest> | undefined, b: GetLoginPolicyRequest | PlainMessage<GetLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetLoginPolicyResponse
 */
export class GetLoginPolicyResponse extends Message<GetLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.LoginPolicy policy = 1;
   */
  policy?: LoginPolicy;

  constructor(data?: PartialMessage<GetLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: LoginPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLoginPolicyResponse {
    return new GetLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLoginPolicyResponse {
    return new GetLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLoginPolicyResponse {
    return new GetLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetLoginPolicyResponse | PlainMessage<GetLoginPolicyResponse> | undefined, b: GetLoginPolicyResponse | PlainMessage<GetLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateLoginPolicyRequest
 */
export class UpdateLoginPolicyRequest extends Message<UpdateLoginPolicyRequest> {
  /**
   * @generated from field: bool allow_username_password = 1;
   */
  allowUsernamePassword = false;

  /**
   * @generated from field: bool allow_register = 2;
   */
  allowRegister = false;

  /**
   * @generated from field: bool allow_external_idp = 3;
   */
  allowExternalIdp = false;

  /**
   * @generated from field: bool force_mfa = 4;
   */
  forceMfa = false;

  /**
   * @generated from field: zitadel.policy.v1.PasswordlessType passwordless_type = 5;
   */
  passwordlessType = PasswordlessType.NOT_ALLOWED;

  /**
   * @generated from field: bool hide_password_reset = 6;
   */
  hidePasswordReset = false;

  /**
   * @generated from field: bool ignore_unknown_usernames = 7;
   */
  ignoreUnknownUsernames = false;

  /**
   * @generated from field: string default_redirect_uri = 8;
   */
  defaultRedirectUri = "";

  /**
   * @generated from field: google.protobuf.Duration password_check_lifetime = 9;
   */
  passwordCheckLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration external_login_check_lifetime = 10;
   */
  externalLoginCheckLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration mfa_init_skip_lifetime = 11;
   */
  mfaInitSkipLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration second_factor_check_lifetime = 12;
   */
  secondFactorCheckLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration multi_factor_check_lifetime = 13;
   */
  multiFactorCheckLifetime?: Duration;

  /**
   * If set to true, the suffix (@domain.com) of an unknown username input on the login screen will be matched against the org domains and will redirect to the registration of that organization on success.
   *
   * @generated from field: bool allow_domain_discovery = 14;
   */
  allowDomainDiscovery = false;

  /**
   * @generated from field: bool disable_login_with_email = 15;
   */
  disableLoginWithEmail = false;

  /**
   * @generated from field: bool disable_login_with_phone = 16;
   */
  disableLoginWithPhone = false;

  /**
   * @generated from field: bool force_mfa_local_only = 17;
   */
  forceMfaLocalOnly = false;

  constructor(data?: PartialMessage<UpdateLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "allow_username_password", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "allow_register", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "allow_external_idp", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "force_mfa", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "passwordless_type", kind: "enum", T: proto3.getEnumType(PasswordlessType) },
    { no: 6, name: "hide_password_reset", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "ignore_unknown_usernames", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "default_redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "password_check_lifetime", kind: "message", T: Duration },
    { no: 10, name: "external_login_check_lifetime", kind: "message", T: Duration },
    { no: 11, name: "mfa_init_skip_lifetime", kind: "message", T: Duration },
    { no: 12, name: "second_factor_check_lifetime", kind: "message", T: Duration },
    { no: 13, name: "multi_factor_check_lifetime", kind: "message", T: Duration },
    { no: 14, name: "allow_domain_discovery", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 15, name: "disable_login_with_email", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 16, name: "disable_login_with_phone", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 17, name: "force_mfa_local_only", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLoginPolicyRequest {
    return new UpdateLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLoginPolicyRequest {
    return new UpdateLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLoginPolicyRequest {
    return new UpdateLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLoginPolicyRequest | PlainMessage<UpdateLoginPolicyRequest> | undefined, b: UpdateLoginPolicyRequest | PlainMessage<UpdateLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateLoginPolicyResponse
 */
export class UpdateLoginPolicyResponse extends Message<UpdateLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLoginPolicyResponse {
    return new UpdateLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLoginPolicyResponse {
    return new UpdateLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLoginPolicyResponse {
    return new UpdateLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLoginPolicyResponse | PlainMessage<UpdateLoginPolicyResponse> | undefined, b: UpdateLoginPolicyResponse | PlainMessage<UpdateLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListLoginPolicyIDPsRequest
 */
export class ListLoginPolicyIDPsRequest extends Message<ListLoginPolicyIDPsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  constructor(data?: PartialMessage<ListLoginPolicyIDPsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListLoginPolicyIDPsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListLoginPolicyIDPsRequest {
    return new ListLoginPolicyIDPsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListLoginPolicyIDPsRequest {
    return new ListLoginPolicyIDPsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListLoginPolicyIDPsRequest {
    return new ListLoginPolicyIDPsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListLoginPolicyIDPsRequest | PlainMessage<ListLoginPolicyIDPsRequest> | undefined, b: ListLoginPolicyIDPsRequest | PlainMessage<ListLoginPolicyIDPsRequest> | undefined): boolean {
    return proto3.util.equals(ListLoginPolicyIDPsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListLoginPolicyIDPsResponse
 */
export class ListLoginPolicyIDPsResponse extends Message<ListLoginPolicyIDPsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.idp.v1.IDPLoginPolicyLink result = 2;
   */
  result: IDPLoginPolicyLink[] = [];

  constructor(data?: PartialMessage<ListLoginPolicyIDPsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListLoginPolicyIDPsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: IDPLoginPolicyLink, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListLoginPolicyIDPsResponse {
    return new ListLoginPolicyIDPsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListLoginPolicyIDPsResponse {
    return new ListLoginPolicyIDPsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListLoginPolicyIDPsResponse {
    return new ListLoginPolicyIDPsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListLoginPolicyIDPsResponse | PlainMessage<ListLoginPolicyIDPsResponse> | undefined, b: ListLoginPolicyIDPsResponse | PlainMessage<ListLoginPolicyIDPsResponse> | undefined): boolean {
    return proto3.util.equals(ListLoginPolicyIDPsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddIDPToLoginPolicyRequest
 */
export class AddIDPToLoginPolicyRequest extends Message<AddIDPToLoginPolicyRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  constructor(data?: PartialMessage<AddIDPToLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddIDPToLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddIDPToLoginPolicyRequest {
    return new AddIDPToLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddIDPToLoginPolicyRequest {
    return new AddIDPToLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddIDPToLoginPolicyRequest {
    return new AddIDPToLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddIDPToLoginPolicyRequest | PlainMessage<AddIDPToLoginPolicyRequest> | undefined, b: AddIDPToLoginPolicyRequest | PlainMessage<AddIDPToLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddIDPToLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddIDPToLoginPolicyResponse
 */
export class AddIDPToLoginPolicyResponse extends Message<AddIDPToLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddIDPToLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddIDPToLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddIDPToLoginPolicyResponse {
    return new AddIDPToLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddIDPToLoginPolicyResponse {
    return new AddIDPToLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddIDPToLoginPolicyResponse {
    return new AddIDPToLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddIDPToLoginPolicyResponse | PlainMessage<AddIDPToLoginPolicyResponse> | undefined, b: AddIDPToLoginPolicyResponse | PlainMessage<AddIDPToLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddIDPToLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveIDPFromLoginPolicyRequest
 */
export class RemoveIDPFromLoginPolicyRequest extends Message<RemoveIDPFromLoginPolicyRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  constructor(data?: PartialMessage<RemoveIDPFromLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveIDPFromLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveIDPFromLoginPolicyRequest {
    return new RemoveIDPFromLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveIDPFromLoginPolicyRequest {
    return new RemoveIDPFromLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveIDPFromLoginPolicyRequest {
    return new RemoveIDPFromLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveIDPFromLoginPolicyRequest | PlainMessage<RemoveIDPFromLoginPolicyRequest> | undefined, b: RemoveIDPFromLoginPolicyRequest | PlainMessage<RemoveIDPFromLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(RemoveIDPFromLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveIDPFromLoginPolicyResponse
 */
export class RemoveIDPFromLoginPolicyResponse extends Message<RemoveIDPFromLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveIDPFromLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveIDPFromLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveIDPFromLoginPolicyResponse {
    return new RemoveIDPFromLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveIDPFromLoginPolicyResponse {
    return new RemoveIDPFromLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveIDPFromLoginPolicyResponse {
    return new RemoveIDPFromLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveIDPFromLoginPolicyResponse | PlainMessage<RemoveIDPFromLoginPolicyResponse> | undefined, b: RemoveIDPFromLoginPolicyResponse | PlainMessage<RemoveIDPFromLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(RemoveIDPFromLoginPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.ListLoginPolicySecondFactorsRequest
 */
export class ListLoginPolicySecondFactorsRequest extends Message<ListLoginPolicySecondFactorsRequest> {
  constructor(data?: PartialMessage<ListLoginPolicySecondFactorsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListLoginPolicySecondFactorsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListLoginPolicySecondFactorsRequest {
    return new ListLoginPolicySecondFactorsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListLoginPolicySecondFactorsRequest {
    return new ListLoginPolicySecondFactorsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListLoginPolicySecondFactorsRequest {
    return new ListLoginPolicySecondFactorsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListLoginPolicySecondFactorsRequest | PlainMessage<ListLoginPolicySecondFactorsRequest> | undefined, b: ListLoginPolicySecondFactorsRequest | PlainMessage<ListLoginPolicySecondFactorsRequest> | undefined): boolean {
    return proto3.util.equals(ListLoginPolicySecondFactorsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListLoginPolicySecondFactorsResponse
 */
export class ListLoginPolicySecondFactorsResponse extends Message<ListLoginPolicySecondFactorsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.policy.v1.SecondFactorType result = 2;
   */
  result: SecondFactorType[] = [];

  constructor(data?: PartialMessage<ListLoginPolicySecondFactorsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListLoginPolicySecondFactorsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "enum", T: proto3.getEnumType(SecondFactorType), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListLoginPolicySecondFactorsResponse {
    return new ListLoginPolicySecondFactorsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListLoginPolicySecondFactorsResponse {
    return new ListLoginPolicySecondFactorsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListLoginPolicySecondFactorsResponse {
    return new ListLoginPolicySecondFactorsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListLoginPolicySecondFactorsResponse | PlainMessage<ListLoginPolicySecondFactorsResponse> | undefined, b: ListLoginPolicySecondFactorsResponse | PlainMessage<ListLoginPolicySecondFactorsResponse> | undefined): boolean {
    return proto3.util.equals(ListLoginPolicySecondFactorsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddSecondFactorToLoginPolicyRequest
 */
export class AddSecondFactorToLoginPolicyRequest extends Message<AddSecondFactorToLoginPolicyRequest> {
  /**
   * @generated from field: zitadel.policy.v1.SecondFactorType type = 1;
   */
  type = SecondFactorType.UNSPECIFIED;

  constructor(data?: PartialMessage<AddSecondFactorToLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddSecondFactorToLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(SecondFactorType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSecondFactorToLoginPolicyRequest {
    return new AddSecondFactorToLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSecondFactorToLoginPolicyRequest {
    return new AddSecondFactorToLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSecondFactorToLoginPolicyRequest {
    return new AddSecondFactorToLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddSecondFactorToLoginPolicyRequest | PlainMessage<AddSecondFactorToLoginPolicyRequest> | undefined, b: AddSecondFactorToLoginPolicyRequest | PlainMessage<AddSecondFactorToLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddSecondFactorToLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddSecondFactorToLoginPolicyResponse
 */
export class AddSecondFactorToLoginPolicyResponse extends Message<AddSecondFactorToLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddSecondFactorToLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddSecondFactorToLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddSecondFactorToLoginPolicyResponse {
    return new AddSecondFactorToLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddSecondFactorToLoginPolicyResponse {
    return new AddSecondFactorToLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddSecondFactorToLoginPolicyResponse {
    return new AddSecondFactorToLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddSecondFactorToLoginPolicyResponse | PlainMessage<AddSecondFactorToLoginPolicyResponse> | undefined, b: AddSecondFactorToLoginPolicyResponse | PlainMessage<AddSecondFactorToLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddSecondFactorToLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveSecondFactorFromLoginPolicyRequest
 */
export class RemoveSecondFactorFromLoginPolicyRequest extends Message<RemoveSecondFactorFromLoginPolicyRequest> {
  /**
   * @generated from field: zitadel.policy.v1.SecondFactorType type = 1;
   */
  type = SecondFactorType.UNSPECIFIED;

  constructor(data?: PartialMessage<RemoveSecondFactorFromLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveSecondFactorFromLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(SecondFactorType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveSecondFactorFromLoginPolicyRequest {
    return new RemoveSecondFactorFromLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveSecondFactorFromLoginPolicyRequest {
    return new RemoveSecondFactorFromLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveSecondFactorFromLoginPolicyRequest {
    return new RemoveSecondFactorFromLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveSecondFactorFromLoginPolicyRequest | PlainMessage<RemoveSecondFactorFromLoginPolicyRequest> | undefined, b: RemoveSecondFactorFromLoginPolicyRequest | PlainMessage<RemoveSecondFactorFromLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(RemoveSecondFactorFromLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveSecondFactorFromLoginPolicyResponse
 */
export class RemoveSecondFactorFromLoginPolicyResponse extends Message<RemoveSecondFactorFromLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveSecondFactorFromLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveSecondFactorFromLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveSecondFactorFromLoginPolicyResponse {
    return new RemoveSecondFactorFromLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveSecondFactorFromLoginPolicyResponse {
    return new RemoveSecondFactorFromLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveSecondFactorFromLoginPolicyResponse {
    return new RemoveSecondFactorFromLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveSecondFactorFromLoginPolicyResponse | PlainMessage<RemoveSecondFactorFromLoginPolicyResponse> | undefined, b: RemoveSecondFactorFromLoginPolicyResponse | PlainMessage<RemoveSecondFactorFromLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(RemoveSecondFactorFromLoginPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.ListLoginPolicyMultiFactorsRequest
 */
export class ListLoginPolicyMultiFactorsRequest extends Message<ListLoginPolicyMultiFactorsRequest> {
  constructor(data?: PartialMessage<ListLoginPolicyMultiFactorsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListLoginPolicyMultiFactorsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListLoginPolicyMultiFactorsRequest {
    return new ListLoginPolicyMultiFactorsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListLoginPolicyMultiFactorsRequest {
    return new ListLoginPolicyMultiFactorsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListLoginPolicyMultiFactorsRequest {
    return new ListLoginPolicyMultiFactorsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListLoginPolicyMultiFactorsRequest | PlainMessage<ListLoginPolicyMultiFactorsRequest> | undefined, b: ListLoginPolicyMultiFactorsRequest | PlainMessage<ListLoginPolicyMultiFactorsRequest> | undefined): boolean {
    return proto3.util.equals(ListLoginPolicyMultiFactorsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListLoginPolicyMultiFactorsResponse
 */
export class ListLoginPolicyMultiFactorsResponse extends Message<ListLoginPolicyMultiFactorsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.policy.v1.MultiFactorType result = 2;
   */
  result: MultiFactorType[] = [];

  constructor(data?: PartialMessage<ListLoginPolicyMultiFactorsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListLoginPolicyMultiFactorsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "enum", T: proto3.getEnumType(MultiFactorType), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListLoginPolicyMultiFactorsResponse {
    return new ListLoginPolicyMultiFactorsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListLoginPolicyMultiFactorsResponse {
    return new ListLoginPolicyMultiFactorsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListLoginPolicyMultiFactorsResponse {
    return new ListLoginPolicyMultiFactorsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListLoginPolicyMultiFactorsResponse | PlainMessage<ListLoginPolicyMultiFactorsResponse> | undefined, b: ListLoginPolicyMultiFactorsResponse | PlainMessage<ListLoginPolicyMultiFactorsResponse> | undefined): boolean {
    return proto3.util.equals(ListLoginPolicyMultiFactorsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddMultiFactorToLoginPolicyRequest
 */
export class AddMultiFactorToLoginPolicyRequest extends Message<AddMultiFactorToLoginPolicyRequest> {
  /**
   * @generated from field: zitadel.policy.v1.MultiFactorType type = 1;
   */
  type = MultiFactorType.UNSPECIFIED;

  constructor(data?: PartialMessage<AddMultiFactorToLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddMultiFactorToLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(MultiFactorType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMultiFactorToLoginPolicyRequest {
    return new AddMultiFactorToLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMultiFactorToLoginPolicyRequest {
    return new AddMultiFactorToLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMultiFactorToLoginPolicyRequest {
    return new AddMultiFactorToLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddMultiFactorToLoginPolicyRequest | PlainMessage<AddMultiFactorToLoginPolicyRequest> | undefined, b: AddMultiFactorToLoginPolicyRequest | PlainMessage<AddMultiFactorToLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddMultiFactorToLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddMultiFactorToLoginPolicyResponse
 */
export class AddMultiFactorToLoginPolicyResponse extends Message<AddMultiFactorToLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddMultiFactorToLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddMultiFactorToLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMultiFactorToLoginPolicyResponse {
    return new AddMultiFactorToLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMultiFactorToLoginPolicyResponse {
    return new AddMultiFactorToLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMultiFactorToLoginPolicyResponse {
    return new AddMultiFactorToLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddMultiFactorToLoginPolicyResponse | PlainMessage<AddMultiFactorToLoginPolicyResponse> | undefined, b: AddMultiFactorToLoginPolicyResponse | PlainMessage<AddMultiFactorToLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddMultiFactorToLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveMultiFactorFromLoginPolicyRequest
 */
export class RemoveMultiFactorFromLoginPolicyRequest extends Message<RemoveMultiFactorFromLoginPolicyRequest> {
  /**
   * @generated from field: zitadel.policy.v1.MultiFactorType type = 1;
   */
  type = MultiFactorType.UNSPECIFIED;

  constructor(data?: PartialMessage<RemoveMultiFactorFromLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveMultiFactorFromLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(MultiFactorType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMultiFactorFromLoginPolicyRequest {
    return new RemoveMultiFactorFromLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMultiFactorFromLoginPolicyRequest {
    return new RemoveMultiFactorFromLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMultiFactorFromLoginPolicyRequest {
    return new RemoveMultiFactorFromLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMultiFactorFromLoginPolicyRequest | PlainMessage<RemoveMultiFactorFromLoginPolicyRequest> | undefined, b: RemoveMultiFactorFromLoginPolicyRequest | PlainMessage<RemoveMultiFactorFromLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMultiFactorFromLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveMultiFactorFromLoginPolicyResponse
 */
export class RemoveMultiFactorFromLoginPolicyResponse extends Message<RemoveMultiFactorFromLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMultiFactorFromLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveMultiFactorFromLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMultiFactorFromLoginPolicyResponse {
    return new RemoveMultiFactorFromLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMultiFactorFromLoginPolicyResponse {
    return new RemoveMultiFactorFromLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMultiFactorFromLoginPolicyResponse {
    return new RemoveMultiFactorFromLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMultiFactorFromLoginPolicyResponse | PlainMessage<RemoveMultiFactorFromLoginPolicyResponse> | undefined, b: RemoveMultiFactorFromLoginPolicyResponse | PlainMessage<RemoveMultiFactorFromLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMultiFactorFromLoginPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetPasswordComplexityPolicyRequest
 */
export class GetPasswordComplexityPolicyRequest extends Message<GetPasswordComplexityPolicyRequest> {
  constructor(data?: PartialMessage<GetPasswordComplexityPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetPasswordComplexityPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPasswordComplexityPolicyRequest {
    return new GetPasswordComplexityPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPasswordComplexityPolicyRequest {
    return new GetPasswordComplexityPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPasswordComplexityPolicyRequest {
    return new GetPasswordComplexityPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPasswordComplexityPolicyRequest | PlainMessage<GetPasswordComplexityPolicyRequest> | undefined, b: GetPasswordComplexityPolicyRequest | PlainMessage<GetPasswordComplexityPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetPasswordComplexityPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetPasswordComplexityPolicyResponse
 */
export class GetPasswordComplexityPolicyResponse extends Message<GetPasswordComplexityPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.PasswordComplexityPolicy policy = 1;
   */
  policy?: PasswordComplexityPolicy;

  constructor(data?: PartialMessage<GetPasswordComplexityPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetPasswordComplexityPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: PasswordComplexityPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPasswordComplexityPolicyResponse {
    return new GetPasswordComplexityPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPasswordComplexityPolicyResponse {
    return new GetPasswordComplexityPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPasswordComplexityPolicyResponse {
    return new GetPasswordComplexityPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPasswordComplexityPolicyResponse | PlainMessage<GetPasswordComplexityPolicyResponse> | undefined, b: GetPasswordComplexityPolicyResponse | PlainMessage<GetPasswordComplexityPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetPasswordComplexityPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdatePasswordComplexityPolicyRequest
 */
export class UpdatePasswordComplexityPolicyRequest extends Message<UpdatePasswordComplexityPolicyRequest> {
  /**
   * @generated from field: uint32 min_length = 1;
   */
  minLength = 0;

  /**
   * @generated from field: bool has_uppercase = 2;
   */
  hasUppercase = false;

  /**
   * @generated from field: bool has_lowercase = 3;
   */
  hasLowercase = false;

  /**
   * @generated from field: bool has_number = 4;
   */
  hasNumber = false;

  /**
   * @generated from field: bool has_symbol = 5;
   */
  hasSymbol = false;

  constructor(data?: PartialMessage<UpdatePasswordComplexityPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdatePasswordComplexityPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "min_length", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "has_uppercase", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "has_lowercase", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "has_number", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "has_symbol", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePasswordComplexityPolicyRequest {
    return new UpdatePasswordComplexityPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePasswordComplexityPolicyRequest {
    return new UpdatePasswordComplexityPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePasswordComplexityPolicyRequest {
    return new UpdatePasswordComplexityPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePasswordComplexityPolicyRequest | PlainMessage<UpdatePasswordComplexityPolicyRequest> | undefined, b: UpdatePasswordComplexityPolicyRequest | PlainMessage<UpdatePasswordComplexityPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdatePasswordComplexityPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdatePasswordComplexityPolicyResponse
 */
export class UpdatePasswordComplexityPolicyResponse extends Message<UpdatePasswordComplexityPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdatePasswordComplexityPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdatePasswordComplexityPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePasswordComplexityPolicyResponse {
    return new UpdatePasswordComplexityPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePasswordComplexityPolicyResponse {
    return new UpdatePasswordComplexityPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePasswordComplexityPolicyResponse {
    return new UpdatePasswordComplexityPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePasswordComplexityPolicyResponse | PlainMessage<UpdatePasswordComplexityPolicyResponse> | undefined, b: UpdatePasswordComplexityPolicyResponse | PlainMessage<UpdatePasswordComplexityPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdatePasswordComplexityPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetPasswordAgePolicyRequest
 */
export class GetPasswordAgePolicyRequest extends Message<GetPasswordAgePolicyRequest> {
  constructor(data?: PartialMessage<GetPasswordAgePolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetPasswordAgePolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPasswordAgePolicyRequest {
    return new GetPasswordAgePolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPasswordAgePolicyRequest {
    return new GetPasswordAgePolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPasswordAgePolicyRequest {
    return new GetPasswordAgePolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPasswordAgePolicyRequest | PlainMessage<GetPasswordAgePolicyRequest> | undefined, b: GetPasswordAgePolicyRequest | PlainMessage<GetPasswordAgePolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetPasswordAgePolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetPasswordAgePolicyResponse
 */
export class GetPasswordAgePolicyResponse extends Message<GetPasswordAgePolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.PasswordAgePolicy policy = 1;
   */
  policy?: PasswordAgePolicy;

  constructor(data?: PartialMessage<GetPasswordAgePolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetPasswordAgePolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: PasswordAgePolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPasswordAgePolicyResponse {
    return new GetPasswordAgePolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPasswordAgePolicyResponse {
    return new GetPasswordAgePolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPasswordAgePolicyResponse {
    return new GetPasswordAgePolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPasswordAgePolicyResponse | PlainMessage<GetPasswordAgePolicyResponse> | undefined, b: GetPasswordAgePolicyResponse | PlainMessage<GetPasswordAgePolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetPasswordAgePolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdatePasswordAgePolicyRequest
 */
export class UpdatePasswordAgePolicyRequest extends Message<UpdatePasswordAgePolicyRequest> {
  /**
   * Amount of days after which a password will expire. The user will be forced to change the password on the following authentication.
   *
   * @generated from field: uint32 max_age_days = 1;
   */
  maxAgeDays = 0;

  /**
   * Amount of days after which the user should be notified of the upcoming expiry. ZITADEL will not notify the user.
   *
   * @generated from field: uint32 expire_warn_days = 2;
   */
  expireWarnDays = 0;

  constructor(data?: PartialMessage<UpdatePasswordAgePolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdatePasswordAgePolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "max_age_days", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "expire_warn_days", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePasswordAgePolicyRequest {
    return new UpdatePasswordAgePolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePasswordAgePolicyRequest {
    return new UpdatePasswordAgePolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePasswordAgePolicyRequest {
    return new UpdatePasswordAgePolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePasswordAgePolicyRequest | PlainMessage<UpdatePasswordAgePolicyRequest> | undefined, b: UpdatePasswordAgePolicyRequest | PlainMessage<UpdatePasswordAgePolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdatePasswordAgePolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdatePasswordAgePolicyResponse
 */
export class UpdatePasswordAgePolicyResponse extends Message<UpdatePasswordAgePolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdatePasswordAgePolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdatePasswordAgePolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePasswordAgePolicyResponse {
    return new UpdatePasswordAgePolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePasswordAgePolicyResponse {
    return new UpdatePasswordAgePolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePasswordAgePolicyResponse {
    return new UpdatePasswordAgePolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePasswordAgePolicyResponse | PlainMessage<UpdatePasswordAgePolicyResponse> | undefined, b: UpdatePasswordAgePolicyResponse | PlainMessage<UpdatePasswordAgePolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdatePasswordAgePolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetLockoutPolicyRequest
 */
export class GetLockoutPolicyRequest extends Message<GetLockoutPolicyRequest> {
  constructor(data?: PartialMessage<GetLockoutPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetLockoutPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLockoutPolicyRequest {
    return new GetLockoutPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLockoutPolicyRequest {
    return new GetLockoutPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLockoutPolicyRequest {
    return new GetLockoutPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetLockoutPolicyRequest | PlainMessage<GetLockoutPolicyRequest> | undefined, b: GetLockoutPolicyRequest | PlainMessage<GetLockoutPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetLockoutPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetLockoutPolicyResponse
 */
export class GetLockoutPolicyResponse extends Message<GetLockoutPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.LockoutPolicy policy = 1;
   */
  policy?: LockoutPolicy;

  constructor(data?: PartialMessage<GetLockoutPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetLockoutPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: LockoutPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLockoutPolicyResponse {
    return new GetLockoutPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLockoutPolicyResponse {
    return new GetLockoutPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLockoutPolicyResponse {
    return new GetLockoutPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetLockoutPolicyResponse | PlainMessage<GetLockoutPolicyResponse> | undefined, b: GetLockoutPolicyResponse | PlainMessage<GetLockoutPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetLockoutPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateLockoutPolicyRequest
 */
export class UpdateLockoutPolicyRequest extends Message<UpdateLockoutPolicyRequest> {
  /**
   * failed attempts until a user gets locked
   *
   * @generated from field: uint32 max_password_attempts = 1;
   */
  maxPasswordAttempts = 0;

  /**
   * @generated from field: uint32 max_otp_attempts = 2;
   */
  maxOtpAttempts = 0;

  constructor(data?: PartialMessage<UpdateLockoutPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateLockoutPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "max_password_attempts", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "max_otp_attempts", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLockoutPolicyRequest {
    return new UpdateLockoutPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLockoutPolicyRequest {
    return new UpdateLockoutPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLockoutPolicyRequest {
    return new UpdateLockoutPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLockoutPolicyRequest | PlainMessage<UpdateLockoutPolicyRequest> | undefined, b: UpdateLockoutPolicyRequest | PlainMessage<UpdateLockoutPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateLockoutPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateLockoutPolicyResponse
 */
export class UpdateLockoutPolicyResponse extends Message<UpdateLockoutPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateLockoutPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateLockoutPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLockoutPolicyResponse {
    return new UpdateLockoutPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLockoutPolicyResponse {
    return new UpdateLockoutPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLockoutPolicyResponse {
    return new UpdateLockoutPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLockoutPolicyResponse | PlainMessage<UpdateLockoutPolicyResponse> | undefined, b: UpdateLockoutPolicyResponse | PlainMessage<UpdateLockoutPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateLockoutPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetPrivacyPolicyRequest
 */
export class GetPrivacyPolicyRequest extends Message<GetPrivacyPolicyRequest> {
  constructor(data?: PartialMessage<GetPrivacyPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetPrivacyPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPrivacyPolicyRequest {
    return new GetPrivacyPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPrivacyPolicyRequest {
    return new GetPrivacyPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPrivacyPolicyRequest {
    return new GetPrivacyPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPrivacyPolicyRequest | PlainMessage<GetPrivacyPolicyRequest> | undefined, b: GetPrivacyPolicyRequest | PlainMessage<GetPrivacyPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetPrivacyPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetPrivacyPolicyResponse
 */
export class GetPrivacyPolicyResponse extends Message<GetPrivacyPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.PrivacyPolicy policy = 1;
   */
  policy?: PrivacyPolicy;

  constructor(data?: PartialMessage<GetPrivacyPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetPrivacyPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: PrivacyPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPrivacyPolicyResponse {
    return new GetPrivacyPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPrivacyPolicyResponse {
    return new GetPrivacyPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPrivacyPolicyResponse {
    return new GetPrivacyPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPrivacyPolicyResponse | PlainMessage<GetPrivacyPolicyResponse> | undefined, b: GetPrivacyPolicyResponse | PlainMessage<GetPrivacyPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetPrivacyPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdatePrivacyPolicyRequest
 */
export class UpdatePrivacyPolicyRequest extends Message<UpdatePrivacyPolicyRequest> {
  /**
   * @generated from field: string tos_link = 1;
   */
  tosLink = "";

  /**
   * @generated from field: string privacy_link = 2;
   */
  privacyLink = "";

  /**
   * @generated from field: string help_link = 3;
   */
  helpLink = "";

  /**
   * @generated from field: string support_email = 4;
   */
  supportEmail = "";

  /**
   * @generated from field: string docs_link = 5;
   */
  docsLink = "";

  /**
   * @generated from field: string custom_link = 6;
   */
  customLink = "";

  /**
   * @generated from field: string custom_link_text = 7;
   */
  customLinkText = "";

  constructor(data?: PartialMessage<UpdatePrivacyPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdatePrivacyPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tos_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "privacy_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "help_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "support_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "docs_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "custom_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "custom_link_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePrivacyPolicyRequest {
    return new UpdatePrivacyPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePrivacyPolicyRequest {
    return new UpdatePrivacyPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePrivacyPolicyRequest {
    return new UpdatePrivacyPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePrivacyPolicyRequest | PlainMessage<UpdatePrivacyPolicyRequest> | undefined, b: UpdatePrivacyPolicyRequest | PlainMessage<UpdatePrivacyPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdatePrivacyPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdatePrivacyPolicyResponse
 */
export class UpdatePrivacyPolicyResponse extends Message<UpdatePrivacyPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdatePrivacyPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdatePrivacyPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePrivacyPolicyResponse {
    return new UpdatePrivacyPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePrivacyPolicyResponse {
    return new UpdatePrivacyPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePrivacyPolicyResponse {
    return new UpdatePrivacyPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePrivacyPolicyResponse | PlainMessage<UpdatePrivacyPolicyResponse> | undefined, b: UpdatePrivacyPolicyResponse | PlainMessage<UpdatePrivacyPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdatePrivacyPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddNotificationPolicyRequest
 */
export class AddNotificationPolicyRequest extends Message<AddNotificationPolicyRequest> {
  /**
   * @generated from field: bool password_change = 1;
   */
  passwordChange = false;

  constructor(data?: PartialMessage<AddNotificationPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddNotificationPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "password_change", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddNotificationPolicyRequest {
    return new AddNotificationPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddNotificationPolicyRequest {
    return new AddNotificationPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddNotificationPolicyRequest {
    return new AddNotificationPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddNotificationPolicyRequest | PlainMessage<AddNotificationPolicyRequest> | undefined, b: AddNotificationPolicyRequest | PlainMessage<AddNotificationPolicyRequest> | undefined): boolean {
    return proto3.util.equals(AddNotificationPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddNotificationPolicyResponse
 */
export class AddNotificationPolicyResponse extends Message<AddNotificationPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddNotificationPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddNotificationPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddNotificationPolicyResponse {
    return new AddNotificationPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddNotificationPolicyResponse {
    return new AddNotificationPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddNotificationPolicyResponse {
    return new AddNotificationPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddNotificationPolicyResponse | PlainMessage<AddNotificationPolicyResponse> | undefined, b: AddNotificationPolicyResponse | PlainMessage<AddNotificationPolicyResponse> | undefined): boolean {
    return proto3.util.equals(AddNotificationPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.GetNotificationPolicyRequest
 */
export class GetNotificationPolicyRequest extends Message<GetNotificationPolicyRequest> {
  constructor(data?: PartialMessage<GetNotificationPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetNotificationPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetNotificationPolicyRequest {
    return new GetNotificationPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetNotificationPolicyRequest {
    return new GetNotificationPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetNotificationPolicyRequest {
    return new GetNotificationPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetNotificationPolicyRequest | PlainMessage<GetNotificationPolicyRequest> | undefined, b: GetNotificationPolicyRequest | PlainMessage<GetNotificationPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetNotificationPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetNotificationPolicyResponse
 */
export class GetNotificationPolicyResponse extends Message<GetNotificationPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.NotificationPolicy policy = 1;
   */
  policy?: NotificationPolicy;

  constructor(data?: PartialMessage<GetNotificationPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetNotificationPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: NotificationPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetNotificationPolicyResponse {
    return new GetNotificationPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetNotificationPolicyResponse {
    return new GetNotificationPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetNotificationPolicyResponse {
    return new GetNotificationPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetNotificationPolicyResponse | PlainMessage<GetNotificationPolicyResponse> | undefined, b: GetNotificationPolicyResponse | PlainMessage<GetNotificationPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetNotificationPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateNotificationPolicyRequest
 */
export class UpdateNotificationPolicyRequest extends Message<UpdateNotificationPolicyRequest> {
  /**
   * @generated from field: bool password_change = 1;
   */
  passwordChange = false;

  constructor(data?: PartialMessage<UpdateNotificationPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateNotificationPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "password_change", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateNotificationPolicyRequest {
    return new UpdateNotificationPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateNotificationPolicyRequest {
    return new UpdateNotificationPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateNotificationPolicyRequest {
    return new UpdateNotificationPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateNotificationPolicyRequest | PlainMessage<UpdateNotificationPolicyRequest> | undefined, b: UpdateNotificationPolicyRequest | PlainMessage<UpdateNotificationPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateNotificationPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateNotificationPolicyResponse
 */
export class UpdateNotificationPolicyResponse extends Message<UpdateNotificationPolicyResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateNotificationPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateNotificationPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateNotificationPolicyResponse {
    return new UpdateNotificationPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateNotificationPolicyResponse {
    return new UpdateNotificationPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateNotificationPolicyResponse {
    return new UpdateNotificationPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateNotificationPolicyResponse | PlainMessage<UpdateNotificationPolicyResponse> | undefined, b: UpdateNotificationPolicyResponse | PlainMessage<UpdateNotificationPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdateNotificationPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultInitMessageTextRequest
 */
export class GetDefaultInitMessageTextRequest extends Message<GetDefaultInitMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultInitMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultInitMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultInitMessageTextRequest {
    return new GetDefaultInitMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultInitMessageTextRequest {
    return new GetDefaultInitMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultInitMessageTextRequest {
    return new GetDefaultInitMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultInitMessageTextRequest | PlainMessage<GetDefaultInitMessageTextRequest> | undefined, b: GetDefaultInitMessageTextRequest | PlainMessage<GetDefaultInitMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultInitMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultInitMessageTextResponse
 */
export class GetDefaultInitMessageTextResponse extends Message<GetDefaultInitMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultInitMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultInitMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultInitMessageTextResponse {
    return new GetDefaultInitMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultInitMessageTextResponse {
    return new GetDefaultInitMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultInitMessageTextResponse {
    return new GetDefaultInitMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultInitMessageTextResponse | PlainMessage<GetDefaultInitMessageTextResponse> | undefined, b: GetDefaultInitMessageTextResponse | PlainMessage<GetDefaultInitMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultInitMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomInitMessageTextRequest
 */
export class GetCustomInitMessageTextRequest extends Message<GetCustomInitMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomInitMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomInitMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomInitMessageTextRequest {
    return new GetCustomInitMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomInitMessageTextRequest {
    return new GetCustomInitMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomInitMessageTextRequest {
    return new GetCustomInitMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomInitMessageTextRequest | PlainMessage<GetCustomInitMessageTextRequest> | undefined, b: GetCustomInitMessageTextRequest | PlainMessage<GetCustomInitMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomInitMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomInitMessageTextResponse
 */
export class GetCustomInitMessageTextResponse extends Message<GetCustomInitMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomInitMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomInitMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomInitMessageTextResponse {
    return new GetCustomInitMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomInitMessageTextResponse {
    return new GetCustomInitMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomInitMessageTextResponse {
    return new GetCustomInitMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomInitMessageTextResponse | PlainMessage<GetCustomInitMessageTextResponse> | undefined, b: GetCustomInitMessageTextResponse | PlainMessage<GetCustomInitMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomInitMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultInitMessageTextRequest
 */
export class SetDefaultInitMessageTextRequest extends Message<SetDefaultInitMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetDefaultInitMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultInitMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultInitMessageTextRequest {
    return new SetDefaultInitMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultInitMessageTextRequest {
    return new SetDefaultInitMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultInitMessageTextRequest {
    return new SetDefaultInitMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultInitMessageTextRequest | PlainMessage<SetDefaultInitMessageTextRequest> | undefined, b: SetDefaultInitMessageTextRequest | PlainMessage<SetDefaultInitMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetDefaultInitMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultInitMessageTextResponse
 */
export class SetDefaultInitMessageTextResponse extends Message<SetDefaultInitMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetDefaultInitMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultInitMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultInitMessageTextResponse {
    return new SetDefaultInitMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultInitMessageTextResponse {
    return new SetDefaultInitMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultInitMessageTextResponse {
    return new SetDefaultInitMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultInitMessageTextResponse | PlainMessage<SetDefaultInitMessageTextResponse> | undefined, b: SetDefaultInitMessageTextResponse | PlainMessage<SetDefaultInitMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetDefaultInitMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomInitMessageTextToDefaultRequest
 */
export class ResetCustomInitMessageTextToDefaultRequest extends Message<ResetCustomInitMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomInitMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomInitMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomInitMessageTextToDefaultRequest {
    return new ResetCustomInitMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomInitMessageTextToDefaultRequest {
    return new ResetCustomInitMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomInitMessageTextToDefaultRequest {
    return new ResetCustomInitMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomInitMessageTextToDefaultRequest | PlainMessage<ResetCustomInitMessageTextToDefaultRequest> | undefined, b: ResetCustomInitMessageTextToDefaultRequest | PlainMessage<ResetCustomInitMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomInitMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomInitMessageTextToDefaultResponse
 */
export class ResetCustomInitMessageTextToDefaultResponse extends Message<ResetCustomInitMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomInitMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomInitMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomInitMessageTextToDefaultResponse {
    return new ResetCustomInitMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomInitMessageTextToDefaultResponse {
    return new ResetCustomInitMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomInitMessageTextToDefaultResponse {
    return new ResetCustomInitMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomInitMessageTextToDefaultResponse | PlainMessage<ResetCustomInitMessageTextToDefaultResponse> | undefined, b: ResetCustomInitMessageTextToDefaultResponse | PlainMessage<ResetCustomInitMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomInitMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultPasswordResetMessageTextRequest
 */
export class GetDefaultPasswordResetMessageTextRequest extends Message<GetDefaultPasswordResetMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultPasswordResetMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultPasswordResetMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordResetMessageTextRequest {
    return new GetDefaultPasswordResetMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordResetMessageTextRequest {
    return new GetDefaultPasswordResetMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordResetMessageTextRequest {
    return new GetDefaultPasswordResetMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordResetMessageTextRequest | PlainMessage<GetDefaultPasswordResetMessageTextRequest> | undefined, b: GetDefaultPasswordResetMessageTextRequest | PlainMessage<GetDefaultPasswordResetMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordResetMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultPasswordResetMessageTextResponse
 */
export class GetDefaultPasswordResetMessageTextResponse extends Message<GetDefaultPasswordResetMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultPasswordResetMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultPasswordResetMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordResetMessageTextResponse {
    return new GetDefaultPasswordResetMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordResetMessageTextResponse {
    return new GetDefaultPasswordResetMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordResetMessageTextResponse {
    return new GetDefaultPasswordResetMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordResetMessageTextResponse | PlainMessage<GetDefaultPasswordResetMessageTextResponse> | undefined, b: GetDefaultPasswordResetMessageTextResponse | PlainMessage<GetDefaultPasswordResetMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordResetMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomPasswordResetMessageTextRequest
 */
export class GetCustomPasswordResetMessageTextRequest extends Message<GetCustomPasswordResetMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomPasswordResetMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomPasswordResetMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomPasswordResetMessageTextRequest {
    return new GetCustomPasswordResetMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomPasswordResetMessageTextRequest {
    return new GetCustomPasswordResetMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomPasswordResetMessageTextRequest {
    return new GetCustomPasswordResetMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomPasswordResetMessageTextRequest | PlainMessage<GetCustomPasswordResetMessageTextRequest> | undefined, b: GetCustomPasswordResetMessageTextRequest | PlainMessage<GetCustomPasswordResetMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomPasswordResetMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomPasswordResetMessageTextResponse
 */
export class GetCustomPasswordResetMessageTextResponse extends Message<GetCustomPasswordResetMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomPasswordResetMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomPasswordResetMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomPasswordResetMessageTextResponse {
    return new GetCustomPasswordResetMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomPasswordResetMessageTextResponse {
    return new GetCustomPasswordResetMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomPasswordResetMessageTextResponse {
    return new GetCustomPasswordResetMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomPasswordResetMessageTextResponse | PlainMessage<GetCustomPasswordResetMessageTextResponse> | undefined, b: GetCustomPasswordResetMessageTextResponse | PlainMessage<GetCustomPasswordResetMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomPasswordResetMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultPasswordResetMessageTextRequest
 */
export class SetDefaultPasswordResetMessageTextRequest extends Message<SetDefaultPasswordResetMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetDefaultPasswordResetMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultPasswordResetMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultPasswordResetMessageTextRequest {
    return new SetDefaultPasswordResetMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultPasswordResetMessageTextRequest {
    return new SetDefaultPasswordResetMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultPasswordResetMessageTextRequest {
    return new SetDefaultPasswordResetMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultPasswordResetMessageTextRequest | PlainMessage<SetDefaultPasswordResetMessageTextRequest> | undefined, b: SetDefaultPasswordResetMessageTextRequest | PlainMessage<SetDefaultPasswordResetMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetDefaultPasswordResetMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultPasswordResetMessageTextResponse
 */
export class SetDefaultPasswordResetMessageTextResponse extends Message<SetDefaultPasswordResetMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetDefaultPasswordResetMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultPasswordResetMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultPasswordResetMessageTextResponse {
    return new SetDefaultPasswordResetMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultPasswordResetMessageTextResponse {
    return new SetDefaultPasswordResetMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultPasswordResetMessageTextResponse {
    return new SetDefaultPasswordResetMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultPasswordResetMessageTextResponse | PlainMessage<SetDefaultPasswordResetMessageTextResponse> | undefined, b: SetDefaultPasswordResetMessageTextResponse | PlainMessage<SetDefaultPasswordResetMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetDefaultPasswordResetMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomPasswordResetMessageTextToDefaultRequest
 */
export class ResetCustomPasswordResetMessageTextToDefaultRequest extends Message<ResetCustomPasswordResetMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomPasswordResetMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomPasswordResetMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomPasswordResetMessageTextToDefaultRequest {
    return new ResetCustomPasswordResetMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomPasswordResetMessageTextToDefaultRequest {
    return new ResetCustomPasswordResetMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomPasswordResetMessageTextToDefaultRequest {
    return new ResetCustomPasswordResetMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomPasswordResetMessageTextToDefaultRequest | PlainMessage<ResetCustomPasswordResetMessageTextToDefaultRequest> | undefined, b: ResetCustomPasswordResetMessageTextToDefaultRequest | PlainMessage<ResetCustomPasswordResetMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomPasswordResetMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomPasswordResetMessageTextToDefaultResponse
 */
export class ResetCustomPasswordResetMessageTextToDefaultResponse extends Message<ResetCustomPasswordResetMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomPasswordResetMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomPasswordResetMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomPasswordResetMessageTextToDefaultResponse {
    return new ResetCustomPasswordResetMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomPasswordResetMessageTextToDefaultResponse {
    return new ResetCustomPasswordResetMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomPasswordResetMessageTextToDefaultResponse {
    return new ResetCustomPasswordResetMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomPasswordResetMessageTextToDefaultResponse | PlainMessage<ResetCustomPasswordResetMessageTextToDefaultResponse> | undefined, b: ResetCustomPasswordResetMessageTextToDefaultResponse | PlainMessage<ResetCustomPasswordResetMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomPasswordResetMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultVerifyEmailMessageTextRequest
 */
export class GetDefaultVerifyEmailMessageTextRequest extends Message<GetDefaultVerifyEmailMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultVerifyEmailMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultVerifyEmailMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifyEmailMessageTextRequest {
    return new GetDefaultVerifyEmailMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailMessageTextRequest {
    return new GetDefaultVerifyEmailMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailMessageTextRequest {
    return new GetDefaultVerifyEmailMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifyEmailMessageTextRequest | PlainMessage<GetDefaultVerifyEmailMessageTextRequest> | undefined, b: GetDefaultVerifyEmailMessageTextRequest | PlainMessage<GetDefaultVerifyEmailMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifyEmailMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultVerifyEmailMessageTextResponse
 */
export class GetDefaultVerifyEmailMessageTextResponse extends Message<GetDefaultVerifyEmailMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultVerifyEmailMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultVerifyEmailMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifyEmailMessageTextResponse {
    return new GetDefaultVerifyEmailMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailMessageTextResponse {
    return new GetDefaultVerifyEmailMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailMessageTextResponse {
    return new GetDefaultVerifyEmailMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifyEmailMessageTextResponse | PlainMessage<GetDefaultVerifyEmailMessageTextResponse> | undefined, b: GetDefaultVerifyEmailMessageTextResponse | PlainMessage<GetDefaultVerifyEmailMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifyEmailMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomVerifyEmailMessageTextRequest
 */
export class GetCustomVerifyEmailMessageTextRequest extends Message<GetCustomVerifyEmailMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomVerifyEmailMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomVerifyEmailMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifyEmailMessageTextRequest {
    return new GetCustomVerifyEmailMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailMessageTextRequest {
    return new GetCustomVerifyEmailMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailMessageTextRequest {
    return new GetCustomVerifyEmailMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifyEmailMessageTextRequest | PlainMessage<GetCustomVerifyEmailMessageTextRequest> | undefined, b: GetCustomVerifyEmailMessageTextRequest | PlainMessage<GetCustomVerifyEmailMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifyEmailMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomVerifyEmailMessageTextResponse
 */
export class GetCustomVerifyEmailMessageTextResponse extends Message<GetCustomVerifyEmailMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomVerifyEmailMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomVerifyEmailMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifyEmailMessageTextResponse {
    return new GetCustomVerifyEmailMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailMessageTextResponse {
    return new GetCustomVerifyEmailMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailMessageTextResponse {
    return new GetCustomVerifyEmailMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifyEmailMessageTextResponse | PlainMessage<GetCustomVerifyEmailMessageTextResponse> | undefined, b: GetCustomVerifyEmailMessageTextResponse | PlainMessage<GetCustomVerifyEmailMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifyEmailMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultVerifyEmailMessageTextRequest
 */
export class SetDefaultVerifyEmailMessageTextRequest extends Message<SetDefaultVerifyEmailMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetDefaultVerifyEmailMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultVerifyEmailMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultVerifyEmailMessageTextRequest {
    return new SetDefaultVerifyEmailMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultVerifyEmailMessageTextRequest {
    return new SetDefaultVerifyEmailMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultVerifyEmailMessageTextRequest {
    return new SetDefaultVerifyEmailMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultVerifyEmailMessageTextRequest | PlainMessage<SetDefaultVerifyEmailMessageTextRequest> | undefined, b: SetDefaultVerifyEmailMessageTextRequest | PlainMessage<SetDefaultVerifyEmailMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetDefaultVerifyEmailMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultVerifyEmailMessageTextResponse
 */
export class SetDefaultVerifyEmailMessageTextResponse extends Message<SetDefaultVerifyEmailMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetDefaultVerifyEmailMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultVerifyEmailMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultVerifyEmailMessageTextResponse {
    return new SetDefaultVerifyEmailMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultVerifyEmailMessageTextResponse {
    return new SetDefaultVerifyEmailMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultVerifyEmailMessageTextResponse {
    return new SetDefaultVerifyEmailMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultVerifyEmailMessageTextResponse | PlainMessage<SetDefaultVerifyEmailMessageTextResponse> | undefined, b: SetDefaultVerifyEmailMessageTextResponse | PlainMessage<SetDefaultVerifyEmailMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetDefaultVerifyEmailMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomVerifyEmailMessageTextToDefaultRequest
 */
export class ResetCustomVerifyEmailMessageTextToDefaultRequest extends Message<ResetCustomVerifyEmailMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomVerifyEmailMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomVerifyEmailMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifyEmailMessageTextToDefaultRequest {
    return new ResetCustomVerifyEmailMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailMessageTextToDefaultRequest {
    return new ResetCustomVerifyEmailMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailMessageTextToDefaultRequest {
    return new ResetCustomVerifyEmailMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifyEmailMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifyEmailMessageTextToDefaultRequest> | undefined, b: ResetCustomVerifyEmailMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifyEmailMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifyEmailMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomVerifyEmailMessageTextToDefaultResponse
 */
export class ResetCustomVerifyEmailMessageTextToDefaultResponse extends Message<ResetCustomVerifyEmailMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomVerifyEmailMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomVerifyEmailMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifyEmailMessageTextToDefaultResponse {
    return new ResetCustomVerifyEmailMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailMessageTextToDefaultResponse {
    return new ResetCustomVerifyEmailMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailMessageTextToDefaultResponse {
    return new ResetCustomVerifyEmailMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifyEmailMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifyEmailMessageTextToDefaultResponse> | undefined, b: ResetCustomVerifyEmailMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifyEmailMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifyEmailMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultVerifyPhoneMessageTextRequest
 */
export class GetDefaultVerifyPhoneMessageTextRequest extends Message<GetDefaultVerifyPhoneMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultVerifyPhoneMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultVerifyPhoneMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifyPhoneMessageTextRequest {
    return new GetDefaultVerifyPhoneMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifyPhoneMessageTextRequest {
    return new GetDefaultVerifyPhoneMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifyPhoneMessageTextRequest {
    return new GetDefaultVerifyPhoneMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifyPhoneMessageTextRequest | PlainMessage<GetDefaultVerifyPhoneMessageTextRequest> | undefined, b: GetDefaultVerifyPhoneMessageTextRequest | PlainMessage<GetDefaultVerifyPhoneMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifyPhoneMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultVerifyPhoneMessageTextResponse
 */
export class GetDefaultVerifyPhoneMessageTextResponse extends Message<GetDefaultVerifyPhoneMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultVerifyPhoneMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultVerifyPhoneMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifyPhoneMessageTextResponse {
    return new GetDefaultVerifyPhoneMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifyPhoneMessageTextResponse {
    return new GetDefaultVerifyPhoneMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifyPhoneMessageTextResponse {
    return new GetDefaultVerifyPhoneMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifyPhoneMessageTextResponse | PlainMessage<GetDefaultVerifyPhoneMessageTextResponse> | undefined, b: GetDefaultVerifyPhoneMessageTextResponse | PlainMessage<GetDefaultVerifyPhoneMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifyPhoneMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomVerifyPhoneMessageTextRequest
 */
export class GetCustomVerifyPhoneMessageTextRequest extends Message<GetCustomVerifyPhoneMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomVerifyPhoneMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomVerifyPhoneMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifyPhoneMessageTextRequest {
    return new GetCustomVerifyPhoneMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifyPhoneMessageTextRequest {
    return new GetCustomVerifyPhoneMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifyPhoneMessageTextRequest {
    return new GetCustomVerifyPhoneMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifyPhoneMessageTextRequest | PlainMessage<GetCustomVerifyPhoneMessageTextRequest> | undefined, b: GetCustomVerifyPhoneMessageTextRequest | PlainMessage<GetCustomVerifyPhoneMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifyPhoneMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomVerifyPhoneMessageTextResponse
 */
export class GetCustomVerifyPhoneMessageTextResponse extends Message<GetCustomVerifyPhoneMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomVerifyPhoneMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomVerifyPhoneMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifyPhoneMessageTextResponse {
    return new GetCustomVerifyPhoneMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifyPhoneMessageTextResponse {
    return new GetCustomVerifyPhoneMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifyPhoneMessageTextResponse {
    return new GetCustomVerifyPhoneMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifyPhoneMessageTextResponse | PlainMessage<GetCustomVerifyPhoneMessageTextResponse> | undefined, b: GetCustomVerifyPhoneMessageTextResponse | PlainMessage<GetCustomVerifyPhoneMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifyPhoneMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultVerifyPhoneMessageTextRequest
 */
export class SetDefaultVerifyPhoneMessageTextRequest extends Message<SetDefaultVerifyPhoneMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetDefaultVerifyPhoneMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultVerifyPhoneMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultVerifyPhoneMessageTextRequest {
    return new SetDefaultVerifyPhoneMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultVerifyPhoneMessageTextRequest {
    return new SetDefaultVerifyPhoneMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultVerifyPhoneMessageTextRequest {
    return new SetDefaultVerifyPhoneMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultVerifyPhoneMessageTextRequest | PlainMessage<SetDefaultVerifyPhoneMessageTextRequest> | undefined, b: SetDefaultVerifyPhoneMessageTextRequest | PlainMessage<SetDefaultVerifyPhoneMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetDefaultVerifyPhoneMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultVerifyPhoneMessageTextResponse
 */
export class SetDefaultVerifyPhoneMessageTextResponse extends Message<SetDefaultVerifyPhoneMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetDefaultVerifyPhoneMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultVerifyPhoneMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultVerifyPhoneMessageTextResponse {
    return new SetDefaultVerifyPhoneMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultVerifyPhoneMessageTextResponse {
    return new SetDefaultVerifyPhoneMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultVerifyPhoneMessageTextResponse {
    return new SetDefaultVerifyPhoneMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultVerifyPhoneMessageTextResponse | PlainMessage<SetDefaultVerifyPhoneMessageTextResponse> | undefined, b: SetDefaultVerifyPhoneMessageTextResponse | PlainMessage<SetDefaultVerifyPhoneMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetDefaultVerifyPhoneMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomVerifyPhoneMessageTextToDefaultRequest
 */
export class ResetCustomVerifyPhoneMessageTextToDefaultRequest extends Message<ResetCustomVerifyPhoneMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomVerifyPhoneMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomVerifyPhoneMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifyPhoneMessageTextToDefaultRequest {
    return new ResetCustomVerifyPhoneMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifyPhoneMessageTextToDefaultRequest {
    return new ResetCustomVerifyPhoneMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifyPhoneMessageTextToDefaultRequest {
    return new ResetCustomVerifyPhoneMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifyPhoneMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifyPhoneMessageTextToDefaultRequest> | undefined, b: ResetCustomVerifyPhoneMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifyPhoneMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifyPhoneMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomVerifyPhoneMessageTextToDefaultResponse
 */
export class ResetCustomVerifyPhoneMessageTextToDefaultResponse extends Message<ResetCustomVerifyPhoneMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomVerifyPhoneMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomVerifyPhoneMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifyPhoneMessageTextToDefaultResponse {
    return new ResetCustomVerifyPhoneMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifyPhoneMessageTextToDefaultResponse {
    return new ResetCustomVerifyPhoneMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifyPhoneMessageTextToDefaultResponse {
    return new ResetCustomVerifyPhoneMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifyPhoneMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifyPhoneMessageTextToDefaultResponse> | undefined, b: ResetCustomVerifyPhoneMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifyPhoneMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifyPhoneMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomVerifySMSOTPMessageTextRequest
 */
export class GetCustomVerifySMSOTPMessageTextRequest extends Message<GetCustomVerifySMSOTPMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomVerifySMSOTPMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomVerifySMSOTPMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifySMSOTPMessageTextRequest {
    return new GetCustomVerifySMSOTPMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifySMSOTPMessageTextRequest {
    return new GetCustomVerifySMSOTPMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifySMSOTPMessageTextRequest {
    return new GetCustomVerifySMSOTPMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifySMSOTPMessageTextRequest | PlainMessage<GetCustomVerifySMSOTPMessageTextRequest> | undefined, b: GetCustomVerifySMSOTPMessageTextRequest | PlainMessage<GetCustomVerifySMSOTPMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifySMSOTPMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomVerifySMSOTPMessageTextResponse
 */
export class GetCustomVerifySMSOTPMessageTextResponse extends Message<GetCustomVerifySMSOTPMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomVerifySMSOTPMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomVerifySMSOTPMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifySMSOTPMessageTextResponse {
    return new GetCustomVerifySMSOTPMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifySMSOTPMessageTextResponse {
    return new GetCustomVerifySMSOTPMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifySMSOTPMessageTextResponse {
    return new GetCustomVerifySMSOTPMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifySMSOTPMessageTextResponse | PlainMessage<GetCustomVerifySMSOTPMessageTextResponse> | undefined, b: GetCustomVerifySMSOTPMessageTextResponse | PlainMessage<GetCustomVerifySMSOTPMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifySMSOTPMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultVerifySMSOTPMessageTextRequest
 */
export class GetDefaultVerifySMSOTPMessageTextRequest extends Message<GetDefaultVerifySMSOTPMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultVerifySMSOTPMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultVerifySMSOTPMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifySMSOTPMessageTextRequest {
    return new GetDefaultVerifySMSOTPMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifySMSOTPMessageTextRequest {
    return new GetDefaultVerifySMSOTPMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifySMSOTPMessageTextRequest {
    return new GetDefaultVerifySMSOTPMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifySMSOTPMessageTextRequest | PlainMessage<GetDefaultVerifySMSOTPMessageTextRequest> | undefined, b: GetDefaultVerifySMSOTPMessageTextRequest | PlainMessage<GetDefaultVerifySMSOTPMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifySMSOTPMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultVerifySMSOTPMessageTextResponse
 */
export class GetDefaultVerifySMSOTPMessageTextResponse extends Message<GetDefaultVerifySMSOTPMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultVerifySMSOTPMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultVerifySMSOTPMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifySMSOTPMessageTextResponse {
    return new GetDefaultVerifySMSOTPMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifySMSOTPMessageTextResponse {
    return new GetDefaultVerifySMSOTPMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifySMSOTPMessageTextResponse {
    return new GetDefaultVerifySMSOTPMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifySMSOTPMessageTextResponse | PlainMessage<GetDefaultVerifySMSOTPMessageTextResponse> | undefined, b: GetDefaultVerifySMSOTPMessageTextResponse | PlainMessage<GetDefaultVerifySMSOTPMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifySMSOTPMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultVerifySMSOTPMessageTextRequest
 */
export class SetDefaultVerifySMSOTPMessageTextRequest extends Message<SetDefaultVerifySMSOTPMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string text = 2;
   */
  text = "";

  constructor(data?: PartialMessage<SetDefaultVerifySMSOTPMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultVerifySMSOTPMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultVerifySMSOTPMessageTextRequest {
    return new SetDefaultVerifySMSOTPMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultVerifySMSOTPMessageTextRequest {
    return new SetDefaultVerifySMSOTPMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultVerifySMSOTPMessageTextRequest {
    return new SetDefaultVerifySMSOTPMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultVerifySMSOTPMessageTextRequest | PlainMessage<SetDefaultVerifySMSOTPMessageTextRequest> | undefined, b: SetDefaultVerifySMSOTPMessageTextRequest | PlainMessage<SetDefaultVerifySMSOTPMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetDefaultVerifySMSOTPMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultVerifySMSOTPMessageTextResponse
 */
export class SetDefaultVerifySMSOTPMessageTextResponse extends Message<SetDefaultVerifySMSOTPMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetDefaultVerifySMSOTPMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultVerifySMSOTPMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultVerifySMSOTPMessageTextResponse {
    return new SetDefaultVerifySMSOTPMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultVerifySMSOTPMessageTextResponse {
    return new SetDefaultVerifySMSOTPMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultVerifySMSOTPMessageTextResponse {
    return new SetDefaultVerifySMSOTPMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultVerifySMSOTPMessageTextResponse | PlainMessage<SetDefaultVerifySMSOTPMessageTextResponse> | undefined, b: SetDefaultVerifySMSOTPMessageTextResponse | PlainMessage<SetDefaultVerifySMSOTPMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetDefaultVerifySMSOTPMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest
 */
export class ResetCustomVerifySMSOTPMessageTextToDefaultRequest extends Message<ResetCustomVerifySMSOTPMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomVerifySMSOTPMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifySMSOTPMessageTextToDefaultRequest {
    return new ResetCustomVerifySMSOTPMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifySMSOTPMessageTextToDefaultRequest {
    return new ResetCustomVerifySMSOTPMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifySMSOTPMessageTextToDefaultRequest {
    return new ResetCustomVerifySMSOTPMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifySMSOTPMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifySMSOTPMessageTextToDefaultRequest> | undefined, b: ResetCustomVerifySMSOTPMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifySMSOTPMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifySMSOTPMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse
 */
export class ResetCustomVerifySMSOTPMessageTextToDefaultResponse extends Message<ResetCustomVerifySMSOTPMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomVerifySMSOTPMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifySMSOTPMessageTextToDefaultResponse {
    return new ResetCustomVerifySMSOTPMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifySMSOTPMessageTextToDefaultResponse {
    return new ResetCustomVerifySMSOTPMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifySMSOTPMessageTextToDefaultResponse {
    return new ResetCustomVerifySMSOTPMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifySMSOTPMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifySMSOTPMessageTextToDefaultResponse> | undefined, b: ResetCustomVerifySMSOTPMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifySMSOTPMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifySMSOTPMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomVerifyEmailOTPMessageTextRequest
 */
export class GetCustomVerifyEmailOTPMessageTextRequest extends Message<GetCustomVerifyEmailOTPMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomVerifyEmailOTPMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomVerifyEmailOTPMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifyEmailOTPMessageTextRequest {
    return new GetCustomVerifyEmailOTPMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailOTPMessageTextRequest {
    return new GetCustomVerifyEmailOTPMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailOTPMessageTextRequest {
    return new GetCustomVerifyEmailOTPMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifyEmailOTPMessageTextRequest | PlainMessage<GetCustomVerifyEmailOTPMessageTextRequest> | undefined, b: GetCustomVerifyEmailOTPMessageTextRequest | PlainMessage<GetCustomVerifyEmailOTPMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifyEmailOTPMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomVerifyEmailOTPMessageTextResponse
 */
export class GetCustomVerifyEmailOTPMessageTextResponse extends Message<GetCustomVerifyEmailOTPMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomVerifyEmailOTPMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomVerifyEmailOTPMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomVerifyEmailOTPMessageTextResponse {
    return new GetCustomVerifyEmailOTPMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailOTPMessageTextResponse {
    return new GetCustomVerifyEmailOTPMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomVerifyEmailOTPMessageTextResponse {
    return new GetCustomVerifyEmailOTPMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomVerifyEmailOTPMessageTextResponse | PlainMessage<GetCustomVerifyEmailOTPMessageTextResponse> | undefined, b: GetCustomVerifyEmailOTPMessageTextResponse | PlainMessage<GetCustomVerifyEmailOTPMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomVerifyEmailOTPMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultVerifyEmailOTPMessageTextRequest
 */
export class GetDefaultVerifyEmailOTPMessageTextRequest extends Message<GetDefaultVerifyEmailOTPMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultVerifyEmailOTPMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultVerifyEmailOTPMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifyEmailOTPMessageTextRequest {
    return new GetDefaultVerifyEmailOTPMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailOTPMessageTextRequest {
    return new GetDefaultVerifyEmailOTPMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailOTPMessageTextRequest {
    return new GetDefaultVerifyEmailOTPMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifyEmailOTPMessageTextRequest | PlainMessage<GetDefaultVerifyEmailOTPMessageTextRequest> | undefined, b: GetDefaultVerifyEmailOTPMessageTextRequest | PlainMessage<GetDefaultVerifyEmailOTPMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifyEmailOTPMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultVerifyEmailOTPMessageTextResponse
 */
export class GetDefaultVerifyEmailOTPMessageTextResponse extends Message<GetDefaultVerifyEmailOTPMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultVerifyEmailOTPMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultVerifyEmailOTPMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultVerifyEmailOTPMessageTextResponse {
    return new GetDefaultVerifyEmailOTPMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailOTPMessageTextResponse {
    return new GetDefaultVerifyEmailOTPMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultVerifyEmailOTPMessageTextResponse {
    return new GetDefaultVerifyEmailOTPMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultVerifyEmailOTPMessageTextResponse | PlainMessage<GetDefaultVerifyEmailOTPMessageTextResponse> | undefined, b: GetDefaultVerifyEmailOTPMessageTextResponse | PlainMessage<GetDefaultVerifyEmailOTPMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultVerifyEmailOTPMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultVerifyEmailOTPMessageTextRequest
 */
export class SetDefaultVerifyEmailOTPMessageTextRequest extends Message<SetDefaultVerifyEmailOTPMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetDefaultVerifyEmailOTPMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultVerifyEmailOTPMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultVerifyEmailOTPMessageTextRequest {
    return new SetDefaultVerifyEmailOTPMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultVerifyEmailOTPMessageTextRequest {
    return new SetDefaultVerifyEmailOTPMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultVerifyEmailOTPMessageTextRequest {
    return new SetDefaultVerifyEmailOTPMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultVerifyEmailOTPMessageTextRequest | PlainMessage<SetDefaultVerifyEmailOTPMessageTextRequest> | undefined, b: SetDefaultVerifyEmailOTPMessageTextRequest | PlainMessage<SetDefaultVerifyEmailOTPMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetDefaultVerifyEmailOTPMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultVerifyEmailOTPMessageTextResponse
 */
export class SetDefaultVerifyEmailOTPMessageTextResponse extends Message<SetDefaultVerifyEmailOTPMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetDefaultVerifyEmailOTPMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultVerifyEmailOTPMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultVerifyEmailOTPMessageTextResponse {
    return new SetDefaultVerifyEmailOTPMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultVerifyEmailOTPMessageTextResponse {
    return new SetDefaultVerifyEmailOTPMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultVerifyEmailOTPMessageTextResponse {
    return new SetDefaultVerifyEmailOTPMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultVerifyEmailOTPMessageTextResponse | PlainMessage<SetDefaultVerifyEmailOTPMessageTextResponse> | undefined, b: SetDefaultVerifyEmailOTPMessageTextResponse | PlainMessage<SetDefaultVerifyEmailOTPMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetDefaultVerifyEmailOTPMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest
 */
export class ResetCustomVerifyEmailOTPMessageTextToDefaultRequest extends Message<ResetCustomVerifyEmailOTPMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomVerifyEmailOTPMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifyEmailOTPMessageTextToDefaultRequest {
    return new ResetCustomVerifyEmailOTPMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailOTPMessageTextToDefaultRequest {
    return new ResetCustomVerifyEmailOTPMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailOTPMessageTextToDefaultRequest {
    return new ResetCustomVerifyEmailOTPMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifyEmailOTPMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifyEmailOTPMessageTextToDefaultRequest> | undefined, b: ResetCustomVerifyEmailOTPMessageTextToDefaultRequest | PlainMessage<ResetCustomVerifyEmailOTPMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifyEmailOTPMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse
 */
export class ResetCustomVerifyEmailOTPMessageTextToDefaultResponse extends Message<ResetCustomVerifyEmailOTPMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomVerifyEmailOTPMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomVerifyEmailOTPMessageTextToDefaultResponse {
    return new ResetCustomVerifyEmailOTPMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailOTPMessageTextToDefaultResponse {
    return new ResetCustomVerifyEmailOTPMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomVerifyEmailOTPMessageTextToDefaultResponse {
    return new ResetCustomVerifyEmailOTPMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomVerifyEmailOTPMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifyEmailOTPMessageTextToDefaultResponse> | undefined, b: ResetCustomVerifyEmailOTPMessageTextToDefaultResponse | PlainMessage<ResetCustomVerifyEmailOTPMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomVerifyEmailOTPMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultDomainClaimedMessageTextRequest
 */
export class GetDefaultDomainClaimedMessageTextRequest extends Message<GetDefaultDomainClaimedMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultDomainClaimedMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultDomainClaimedMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultDomainClaimedMessageTextRequest {
    return new GetDefaultDomainClaimedMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultDomainClaimedMessageTextRequest {
    return new GetDefaultDomainClaimedMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultDomainClaimedMessageTextRequest {
    return new GetDefaultDomainClaimedMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultDomainClaimedMessageTextRequest | PlainMessage<GetDefaultDomainClaimedMessageTextRequest> | undefined, b: GetDefaultDomainClaimedMessageTextRequest | PlainMessage<GetDefaultDomainClaimedMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultDomainClaimedMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultDomainClaimedMessageTextResponse
 */
export class GetDefaultDomainClaimedMessageTextResponse extends Message<GetDefaultDomainClaimedMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultDomainClaimedMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultDomainClaimedMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultDomainClaimedMessageTextResponse {
    return new GetDefaultDomainClaimedMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultDomainClaimedMessageTextResponse {
    return new GetDefaultDomainClaimedMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultDomainClaimedMessageTextResponse {
    return new GetDefaultDomainClaimedMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultDomainClaimedMessageTextResponse | PlainMessage<GetDefaultDomainClaimedMessageTextResponse> | undefined, b: GetDefaultDomainClaimedMessageTextResponse | PlainMessage<GetDefaultDomainClaimedMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultDomainClaimedMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomDomainClaimedMessageTextRequest
 */
export class GetCustomDomainClaimedMessageTextRequest extends Message<GetCustomDomainClaimedMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomDomainClaimedMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomDomainClaimedMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomDomainClaimedMessageTextRequest {
    return new GetCustomDomainClaimedMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomDomainClaimedMessageTextRequest {
    return new GetCustomDomainClaimedMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomDomainClaimedMessageTextRequest {
    return new GetCustomDomainClaimedMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomDomainClaimedMessageTextRequest | PlainMessage<GetCustomDomainClaimedMessageTextRequest> | undefined, b: GetCustomDomainClaimedMessageTextRequest | PlainMessage<GetCustomDomainClaimedMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomDomainClaimedMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomDomainClaimedMessageTextResponse
 */
export class GetCustomDomainClaimedMessageTextResponse extends Message<GetCustomDomainClaimedMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomDomainClaimedMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomDomainClaimedMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomDomainClaimedMessageTextResponse {
    return new GetCustomDomainClaimedMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomDomainClaimedMessageTextResponse {
    return new GetCustomDomainClaimedMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomDomainClaimedMessageTextResponse {
    return new GetCustomDomainClaimedMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomDomainClaimedMessageTextResponse | PlainMessage<GetCustomDomainClaimedMessageTextResponse> | undefined, b: GetCustomDomainClaimedMessageTextResponse | PlainMessage<GetCustomDomainClaimedMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomDomainClaimedMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultDomainClaimedMessageTextRequest
 */
export class SetDefaultDomainClaimedMessageTextRequest extends Message<SetDefaultDomainClaimedMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetDefaultDomainClaimedMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultDomainClaimedMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultDomainClaimedMessageTextRequest {
    return new SetDefaultDomainClaimedMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultDomainClaimedMessageTextRequest {
    return new SetDefaultDomainClaimedMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultDomainClaimedMessageTextRequest {
    return new SetDefaultDomainClaimedMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultDomainClaimedMessageTextRequest | PlainMessage<SetDefaultDomainClaimedMessageTextRequest> | undefined, b: SetDefaultDomainClaimedMessageTextRequest | PlainMessage<SetDefaultDomainClaimedMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetDefaultDomainClaimedMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultDomainClaimedMessageTextResponse
 */
export class SetDefaultDomainClaimedMessageTextResponse extends Message<SetDefaultDomainClaimedMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetDefaultDomainClaimedMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultDomainClaimedMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultDomainClaimedMessageTextResponse {
    return new SetDefaultDomainClaimedMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultDomainClaimedMessageTextResponse {
    return new SetDefaultDomainClaimedMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultDomainClaimedMessageTextResponse {
    return new SetDefaultDomainClaimedMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultDomainClaimedMessageTextResponse | PlainMessage<SetDefaultDomainClaimedMessageTextResponse> | undefined, b: SetDefaultDomainClaimedMessageTextResponse | PlainMessage<SetDefaultDomainClaimedMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetDefaultDomainClaimedMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomDomainClaimedMessageTextToDefaultRequest
 */
export class ResetCustomDomainClaimedMessageTextToDefaultRequest extends Message<ResetCustomDomainClaimedMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomDomainClaimedMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomDomainClaimedMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomDomainClaimedMessageTextToDefaultRequest {
    return new ResetCustomDomainClaimedMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomDomainClaimedMessageTextToDefaultRequest {
    return new ResetCustomDomainClaimedMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomDomainClaimedMessageTextToDefaultRequest {
    return new ResetCustomDomainClaimedMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomDomainClaimedMessageTextToDefaultRequest | PlainMessage<ResetCustomDomainClaimedMessageTextToDefaultRequest> | undefined, b: ResetCustomDomainClaimedMessageTextToDefaultRequest | PlainMessage<ResetCustomDomainClaimedMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomDomainClaimedMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomDomainClaimedMessageTextToDefaultResponse
 */
export class ResetCustomDomainClaimedMessageTextToDefaultResponse extends Message<ResetCustomDomainClaimedMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomDomainClaimedMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomDomainClaimedMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomDomainClaimedMessageTextToDefaultResponse {
    return new ResetCustomDomainClaimedMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomDomainClaimedMessageTextToDefaultResponse {
    return new ResetCustomDomainClaimedMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomDomainClaimedMessageTextToDefaultResponse {
    return new ResetCustomDomainClaimedMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomDomainClaimedMessageTextToDefaultResponse | PlainMessage<ResetCustomDomainClaimedMessageTextToDefaultResponse> | undefined, b: ResetCustomDomainClaimedMessageTextToDefaultResponse | PlainMessage<ResetCustomDomainClaimedMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomDomainClaimedMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultPasswordChangeMessageTextRequest
 */
export class GetDefaultPasswordChangeMessageTextRequest extends Message<GetDefaultPasswordChangeMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultPasswordChangeMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultPasswordChangeMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordChangeMessageTextRequest {
    return new GetDefaultPasswordChangeMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordChangeMessageTextRequest {
    return new GetDefaultPasswordChangeMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordChangeMessageTextRequest {
    return new GetDefaultPasswordChangeMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordChangeMessageTextRequest | PlainMessage<GetDefaultPasswordChangeMessageTextRequest> | undefined, b: GetDefaultPasswordChangeMessageTextRequest | PlainMessage<GetDefaultPasswordChangeMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordChangeMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultPasswordChangeMessageTextResponse
 */
export class GetDefaultPasswordChangeMessageTextResponse extends Message<GetDefaultPasswordChangeMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultPasswordChangeMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultPasswordChangeMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordChangeMessageTextResponse {
    return new GetDefaultPasswordChangeMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordChangeMessageTextResponse {
    return new GetDefaultPasswordChangeMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordChangeMessageTextResponse {
    return new GetDefaultPasswordChangeMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordChangeMessageTextResponse | PlainMessage<GetDefaultPasswordChangeMessageTextResponse> | undefined, b: GetDefaultPasswordChangeMessageTextResponse | PlainMessage<GetDefaultPasswordChangeMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordChangeMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomPasswordChangeMessageTextRequest
 */
export class GetCustomPasswordChangeMessageTextRequest extends Message<GetCustomPasswordChangeMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomPasswordChangeMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomPasswordChangeMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomPasswordChangeMessageTextRequest {
    return new GetCustomPasswordChangeMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomPasswordChangeMessageTextRequest {
    return new GetCustomPasswordChangeMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomPasswordChangeMessageTextRequest {
    return new GetCustomPasswordChangeMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomPasswordChangeMessageTextRequest | PlainMessage<GetCustomPasswordChangeMessageTextRequest> | undefined, b: GetCustomPasswordChangeMessageTextRequest | PlainMessage<GetCustomPasswordChangeMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomPasswordChangeMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomPasswordChangeMessageTextResponse
 */
export class GetCustomPasswordChangeMessageTextResponse extends Message<GetCustomPasswordChangeMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomPasswordChangeMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomPasswordChangeMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomPasswordChangeMessageTextResponse {
    return new GetCustomPasswordChangeMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomPasswordChangeMessageTextResponse {
    return new GetCustomPasswordChangeMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomPasswordChangeMessageTextResponse {
    return new GetCustomPasswordChangeMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomPasswordChangeMessageTextResponse | PlainMessage<GetCustomPasswordChangeMessageTextResponse> | undefined, b: GetCustomPasswordChangeMessageTextResponse | PlainMessage<GetCustomPasswordChangeMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomPasswordChangeMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultPasswordChangeMessageTextRequest
 */
export class SetDefaultPasswordChangeMessageTextRequest extends Message<SetDefaultPasswordChangeMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetDefaultPasswordChangeMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultPasswordChangeMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultPasswordChangeMessageTextRequest {
    return new SetDefaultPasswordChangeMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultPasswordChangeMessageTextRequest {
    return new SetDefaultPasswordChangeMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultPasswordChangeMessageTextRequest {
    return new SetDefaultPasswordChangeMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultPasswordChangeMessageTextRequest | PlainMessage<SetDefaultPasswordChangeMessageTextRequest> | undefined, b: SetDefaultPasswordChangeMessageTextRequest | PlainMessage<SetDefaultPasswordChangeMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetDefaultPasswordChangeMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultPasswordChangeMessageTextResponse
 */
export class SetDefaultPasswordChangeMessageTextResponse extends Message<SetDefaultPasswordChangeMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetDefaultPasswordChangeMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultPasswordChangeMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultPasswordChangeMessageTextResponse {
    return new SetDefaultPasswordChangeMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultPasswordChangeMessageTextResponse {
    return new SetDefaultPasswordChangeMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultPasswordChangeMessageTextResponse {
    return new SetDefaultPasswordChangeMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultPasswordChangeMessageTextResponse | PlainMessage<SetDefaultPasswordChangeMessageTextResponse> | undefined, b: SetDefaultPasswordChangeMessageTextResponse | PlainMessage<SetDefaultPasswordChangeMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetDefaultPasswordChangeMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomPasswordChangeMessageTextToDefaultRequest
 */
export class ResetCustomPasswordChangeMessageTextToDefaultRequest extends Message<ResetCustomPasswordChangeMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomPasswordChangeMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomPasswordChangeMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomPasswordChangeMessageTextToDefaultRequest {
    return new ResetCustomPasswordChangeMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomPasswordChangeMessageTextToDefaultRequest {
    return new ResetCustomPasswordChangeMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomPasswordChangeMessageTextToDefaultRequest {
    return new ResetCustomPasswordChangeMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomPasswordChangeMessageTextToDefaultRequest | PlainMessage<ResetCustomPasswordChangeMessageTextToDefaultRequest> | undefined, b: ResetCustomPasswordChangeMessageTextToDefaultRequest | PlainMessage<ResetCustomPasswordChangeMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomPasswordChangeMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomPasswordChangeMessageTextToDefaultResponse
 */
export class ResetCustomPasswordChangeMessageTextToDefaultResponse extends Message<ResetCustomPasswordChangeMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomPasswordChangeMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomPasswordChangeMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomPasswordChangeMessageTextToDefaultResponse {
    return new ResetCustomPasswordChangeMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomPasswordChangeMessageTextToDefaultResponse {
    return new ResetCustomPasswordChangeMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomPasswordChangeMessageTextToDefaultResponse {
    return new ResetCustomPasswordChangeMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomPasswordChangeMessageTextToDefaultResponse | PlainMessage<ResetCustomPasswordChangeMessageTextToDefaultResponse> | undefined, b: ResetCustomPasswordChangeMessageTextToDefaultResponse | PlainMessage<ResetCustomPasswordChangeMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomPasswordChangeMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultPasswordlessRegistrationMessageTextRequest
 */
export class GetDefaultPasswordlessRegistrationMessageTextRequest extends Message<GetDefaultPasswordlessRegistrationMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultPasswordlessRegistrationMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultPasswordlessRegistrationMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordlessRegistrationMessageTextRequest {
    return new GetDefaultPasswordlessRegistrationMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordlessRegistrationMessageTextRequest {
    return new GetDefaultPasswordlessRegistrationMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordlessRegistrationMessageTextRequest {
    return new GetDefaultPasswordlessRegistrationMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordlessRegistrationMessageTextRequest | PlainMessage<GetDefaultPasswordlessRegistrationMessageTextRequest> | undefined, b: GetDefaultPasswordlessRegistrationMessageTextRequest | PlainMessage<GetDefaultPasswordlessRegistrationMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordlessRegistrationMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultPasswordlessRegistrationMessageTextResponse
 */
export class GetDefaultPasswordlessRegistrationMessageTextResponse extends Message<GetDefaultPasswordlessRegistrationMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetDefaultPasswordlessRegistrationMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultPasswordlessRegistrationMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultPasswordlessRegistrationMessageTextResponse {
    return new GetDefaultPasswordlessRegistrationMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultPasswordlessRegistrationMessageTextResponse {
    return new GetDefaultPasswordlessRegistrationMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultPasswordlessRegistrationMessageTextResponse {
    return new GetDefaultPasswordlessRegistrationMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultPasswordlessRegistrationMessageTextResponse | PlainMessage<GetDefaultPasswordlessRegistrationMessageTextResponse> | undefined, b: GetDefaultPasswordlessRegistrationMessageTextResponse | PlainMessage<GetDefaultPasswordlessRegistrationMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultPasswordlessRegistrationMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomPasswordlessRegistrationMessageTextRequest
 */
export class GetCustomPasswordlessRegistrationMessageTextRequest extends Message<GetCustomPasswordlessRegistrationMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomPasswordlessRegistrationMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomPasswordlessRegistrationMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomPasswordlessRegistrationMessageTextRequest {
    return new GetCustomPasswordlessRegistrationMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomPasswordlessRegistrationMessageTextRequest {
    return new GetCustomPasswordlessRegistrationMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomPasswordlessRegistrationMessageTextRequest {
    return new GetCustomPasswordlessRegistrationMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomPasswordlessRegistrationMessageTextRequest | PlainMessage<GetCustomPasswordlessRegistrationMessageTextRequest> | undefined, b: GetCustomPasswordlessRegistrationMessageTextRequest | PlainMessage<GetCustomPasswordlessRegistrationMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomPasswordlessRegistrationMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomPasswordlessRegistrationMessageTextResponse
 */
export class GetCustomPasswordlessRegistrationMessageTextResponse extends Message<GetCustomPasswordlessRegistrationMessageTextResponse> {
  /**
   * @generated from field: zitadel.text.v1.MessageCustomText custom_text = 1;
   */
  customText?: MessageCustomText;

  constructor(data?: PartialMessage<GetCustomPasswordlessRegistrationMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomPasswordlessRegistrationMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: MessageCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomPasswordlessRegistrationMessageTextResponse {
    return new GetCustomPasswordlessRegistrationMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomPasswordlessRegistrationMessageTextResponse {
    return new GetCustomPasswordlessRegistrationMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomPasswordlessRegistrationMessageTextResponse {
    return new GetCustomPasswordlessRegistrationMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomPasswordlessRegistrationMessageTextResponse | PlainMessage<GetCustomPasswordlessRegistrationMessageTextResponse> | undefined, b: GetCustomPasswordlessRegistrationMessageTextResponse | PlainMessage<GetCustomPasswordlessRegistrationMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomPasswordlessRegistrationMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultPasswordlessRegistrationMessageTextRequest
 */
export class SetDefaultPasswordlessRegistrationMessageTextRequest extends Message<SetDefaultPasswordlessRegistrationMessageTextRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string pre_header = 3;
   */
  preHeader = "";

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string greeting = 5;
   */
  greeting = "";

  /**
   * @generated from field: string text = 6;
   */
  text = "";

  /**
   * @generated from field: string button_text = 7;
   */
  buttonText = "";

  /**
   * @generated from field: string footer_text = 8;
   */
  footerText = "";

  constructor(data?: PartialMessage<SetDefaultPasswordlessRegistrationMessageTextRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultPasswordlessRegistrationMessageTextRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pre_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "footer_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultPasswordlessRegistrationMessageTextRequest {
    return new SetDefaultPasswordlessRegistrationMessageTextRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultPasswordlessRegistrationMessageTextRequest {
    return new SetDefaultPasswordlessRegistrationMessageTextRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultPasswordlessRegistrationMessageTextRequest {
    return new SetDefaultPasswordlessRegistrationMessageTextRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultPasswordlessRegistrationMessageTextRequest | PlainMessage<SetDefaultPasswordlessRegistrationMessageTextRequest> | undefined, b: SetDefaultPasswordlessRegistrationMessageTextRequest | PlainMessage<SetDefaultPasswordlessRegistrationMessageTextRequest> | undefined): boolean {
    return proto3.util.equals(SetDefaultPasswordlessRegistrationMessageTextRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetDefaultPasswordlessRegistrationMessageTextResponse
 */
export class SetDefaultPasswordlessRegistrationMessageTextResponse extends Message<SetDefaultPasswordlessRegistrationMessageTextResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetDefaultPasswordlessRegistrationMessageTextResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetDefaultPasswordlessRegistrationMessageTextResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultPasswordlessRegistrationMessageTextResponse {
    return new SetDefaultPasswordlessRegistrationMessageTextResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultPasswordlessRegistrationMessageTextResponse {
    return new SetDefaultPasswordlessRegistrationMessageTextResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultPasswordlessRegistrationMessageTextResponse {
    return new SetDefaultPasswordlessRegistrationMessageTextResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultPasswordlessRegistrationMessageTextResponse | PlainMessage<SetDefaultPasswordlessRegistrationMessageTextResponse> | undefined, b: SetDefaultPasswordlessRegistrationMessageTextResponse | PlainMessage<SetDefaultPasswordlessRegistrationMessageTextResponse> | undefined): boolean {
    return proto3.util.equals(SetDefaultPasswordlessRegistrationMessageTextResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest
 */
export class ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest extends Message<ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest {
    return new ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest {
    return new ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest {
    return new ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest | PlainMessage<ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest> | undefined, b: ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest | PlainMessage<ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse
 */
export class ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse extends Message<ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse {
    return new ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse {
    return new ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse {
    return new ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse | PlainMessage<ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse> | undefined, b: ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse | PlainMessage<ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultLoginTextsRequest
 */
export class GetDefaultLoginTextsRequest extends Message<GetDefaultLoginTextsRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetDefaultLoginTextsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultLoginTextsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultLoginTextsRequest {
    return new GetDefaultLoginTextsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultLoginTextsRequest {
    return new GetDefaultLoginTextsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultLoginTextsRequest {
    return new GetDefaultLoginTextsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultLoginTextsRequest | PlainMessage<GetDefaultLoginTextsRequest> | undefined, b: GetDefaultLoginTextsRequest | PlainMessage<GetDefaultLoginTextsRequest> | undefined): boolean {
    return proto3.util.equals(GetDefaultLoginTextsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetDefaultLoginTextsResponse
 */
export class GetDefaultLoginTextsResponse extends Message<GetDefaultLoginTextsResponse> {
  /**
   * @generated from field: zitadel.text.v1.LoginCustomText custom_text = 1;
   */
  customText?: LoginCustomText;

  constructor(data?: PartialMessage<GetDefaultLoginTextsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetDefaultLoginTextsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: LoginCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultLoginTextsResponse {
    return new GetDefaultLoginTextsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultLoginTextsResponse {
    return new GetDefaultLoginTextsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultLoginTextsResponse {
    return new GetDefaultLoginTextsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDefaultLoginTextsResponse | PlainMessage<GetDefaultLoginTextsResponse> | undefined, b: GetDefaultLoginTextsResponse | PlainMessage<GetDefaultLoginTextsResponse> | undefined): boolean {
    return proto3.util.equals(GetDefaultLoginTextsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomLoginTextsRequest
 */
export class GetCustomLoginTextsRequest extends Message<GetCustomLoginTextsRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<GetCustomLoginTextsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomLoginTextsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomLoginTextsRequest {
    return new GetCustomLoginTextsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomLoginTextsRequest {
    return new GetCustomLoginTextsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomLoginTextsRequest {
    return new GetCustomLoginTextsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomLoginTextsRequest | PlainMessage<GetCustomLoginTextsRequest> | undefined, b: GetCustomLoginTextsRequest | PlainMessage<GetCustomLoginTextsRequest> | undefined): boolean {
    return proto3.util.equals(GetCustomLoginTextsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetCustomLoginTextsResponse
 */
export class GetCustomLoginTextsResponse extends Message<GetCustomLoginTextsResponse> {
  /**
   * @generated from field: zitadel.text.v1.LoginCustomText custom_text = 1;
   */
  customText?: LoginCustomText;

  constructor(data?: PartialMessage<GetCustomLoginTextsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetCustomLoginTextsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "custom_text", kind: "message", T: LoginCustomText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCustomLoginTextsResponse {
    return new GetCustomLoginTextsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCustomLoginTextsResponse {
    return new GetCustomLoginTextsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCustomLoginTextsResponse {
    return new GetCustomLoginTextsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCustomLoginTextsResponse | PlainMessage<GetCustomLoginTextsResponse> | undefined, b: GetCustomLoginTextsResponse | PlainMessage<GetCustomLoginTextsResponse> | undefined): boolean {
    return proto3.util.equals(GetCustomLoginTextsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetCustomLoginTextsRequest
 */
export class SetCustomLoginTextsRequest extends Message<SetCustomLoginTextsRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  /**
   * @generated from field: zitadel.text.v1.SelectAccountScreenText select_account_text = 2;
   */
  selectAccountText?: SelectAccountScreenText;

  /**
   * @generated from field: zitadel.text.v1.LoginScreenText login_text = 3;
   */
  loginText?: LoginScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordScreenText password_text = 4;
   */
  passwordText?: PasswordScreenText;

  /**
   * @generated from field: zitadel.text.v1.UsernameChangeScreenText username_change_text = 5;
   */
  usernameChangeText?: UsernameChangeScreenText;

  /**
   * @generated from field: zitadel.text.v1.UsernameChangeDoneScreenText username_change_done_text = 6;
   */
  usernameChangeDoneText?: UsernameChangeDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitPasswordScreenText init_password_text = 7;
   */
  initPasswordText?: InitPasswordScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitPasswordDoneScreenText init_password_done_text = 8;
   */
  initPasswordDoneText?: InitPasswordDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.EmailVerificationScreenText email_verification_text = 9;
   */
  emailVerificationText?: EmailVerificationScreenText;

  /**
   * @generated from field: zitadel.text.v1.EmailVerificationDoneScreenText email_verification_done_text = 10;
   */
  emailVerificationDoneText?: EmailVerificationDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitializeUserScreenText initialize_user_text = 11;
   */
  initializeUserText?: InitializeUserScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitializeUserDoneScreenText initialize_done_text = 12;
   */
  initializeDoneText?: InitializeUserDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitMFAPromptScreenText init_mfa_prompt_text = 13;
   */
  initMfaPromptText?: InitMFAPromptScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitMFAOTPScreenText init_mfa_otp_text = 14;
   */
  initMfaOtpText?: InitMFAOTPScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitMFAU2FScreenText init_mfa_u2f_text = 15;
   */
  initMfaU2fText?: InitMFAU2FScreenText;

  /**
   * @generated from field: zitadel.text.v1.InitMFADoneScreenText init_mfa_done_text = 16;
   */
  initMfaDoneText?: InitMFADoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.MFAProvidersText mfa_providers_text = 17;
   */
  mfaProvidersText?: MFAProvidersText;

  /**
   * @generated from field: zitadel.text.v1.VerifyMFAOTPScreenText verify_mfa_otp_text = 18;
   */
  verifyMfaOtpText?: VerifyMFAOTPScreenText;

  /**
   * @generated from field: zitadel.text.v1.VerifyMFAU2FScreenText verify_mfa_u2f_text = 19;
   */
  verifyMfaU2fText?: VerifyMFAU2FScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordlessScreenText passwordless_text = 20;
   */
  passwordlessText?: PasswordlessScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordChangeScreenText password_change_text = 21;
   */
  passwordChangeText?: PasswordChangeScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordChangeDoneScreenText password_change_done_text = 22;
   */
  passwordChangeDoneText?: PasswordChangeDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordResetDoneScreenText password_reset_done_text = 23;
   */
  passwordResetDoneText?: PasswordResetDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.RegistrationOptionScreenText registration_option_text = 24;
   */
  registrationOptionText?: RegistrationOptionScreenText;

  /**
   * @generated from field: zitadel.text.v1.RegistrationUserScreenText registration_user_text = 25;
   */
  registrationUserText?: RegistrationUserScreenText;

  /**
   * @generated from field: zitadel.text.v1.RegistrationOrgScreenText registration_org_text = 26;
   */
  registrationOrgText?: RegistrationOrgScreenText;

  /**
   * @generated from field: zitadel.text.v1.LinkingUserDoneScreenText linking_user_done_text = 27;
   */
  linkingUserDoneText?: LinkingUserDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.ExternalUserNotFoundScreenText external_user_not_found_text = 28;
   */
  externalUserNotFoundText?: ExternalUserNotFoundScreenText;

  /**
   * @generated from field: zitadel.text.v1.SuccessLoginScreenText success_login_text = 29;
   */
  successLoginText?: SuccessLoginScreenText;

  /**
   * @generated from field: zitadel.text.v1.LogoutDoneScreenText logout_text = 30;
   */
  logoutText?: LogoutDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.FooterText footer_text = 31;
   */
  footerText?: FooterText;

  /**
   * @generated from field: zitadel.text.v1.PasswordlessPromptScreenText passwordless_prompt_text = 32;
   */
  passwordlessPromptText?: PasswordlessPromptScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordlessRegistrationScreenText passwordless_registration_text = 33;
   */
  passwordlessRegistrationText?: PasswordlessRegistrationScreenText;

  /**
   * @generated from field: zitadel.text.v1.PasswordlessRegistrationDoneScreenText passwordless_registration_done_text = 34;
   */
  passwordlessRegistrationDoneText?: PasswordlessRegistrationDoneScreenText;

  /**
   * @generated from field: zitadel.text.v1.ExternalRegistrationUserOverviewScreenText external_registration_user_overview_text = 35;
   */
  externalRegistrationUserOverviewText?: ExternalRegistrationUserOverviewScreenText;

  /**
   * @generated from field: zitadel.text.v1.LinkingUserPromptScreenText linking_user_prompt_text = 36;
   */
  linkingUserPromptText?: LinkingUserPromptScreenText;

  constructor(data?: PartialMessage<SetCustomLoginTextsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetCustomLoginTextsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "select_account_text", kind: "message", T: SelectAccountScreenText },
    { no: 3, name: "login_text", kind: "message", T: LoginScreenText },
    { no: 4, name: "password_text", kind: "message", T: PasswordScreenText },
    { no: 5, name: "username_change_text", kind: "message", T: UsernameChangeScreenText },
    { no: 6, name: "username_change_done_text", kind: "message", T: UsernameChangeDoneScreenText },
    { no: 7, name: "init_password_text", kind: "message", T: InitPasswordScreenText },
    { no: 8, name: "init_password_done_text", kind: "message", T: InitPasswordDoneScreenText },
    { no: 9, name: "email_verification_text", kind: "message", T: EmailVerificationScreenText },
    { no: 10, name: "email_verification_done_text", kind: "message", T: EmailVerificationDoneScreenText },
    { no: 11, name: "initialize_user_text", kind: "message", T: InitializeUserScreenText },
    { no: 12, name: "initialize_done_text", kind: "message", T: InitializeUserDoneScreenText },
    { no: 13, name: "init_mfa_prompt_text", kind: "message", T: InitMFAPromptScreenText },
    { no: 14, name: "init_mfa_otp_text", kind: "message", T: InitMFAOTPScreenText },
    { no: 15, name: "init_mfa_u2f_text", kind: "message", T: InitMFAU2FScreenText },
    { no: 16, name: "init_mfa_done_text", kind: "message", T: InitMFADoneScreenText },
    { no: 17, name: "mfa_providers_text", kind: "message", T: MFAProvidersText },
    { no: 18, name: "verify_mfa_otp_text", kind: "message", T: VerifyMFAOTPScreenText },
    { no: 19, name: "verify_mfa_u2f_text", kind: "message", T: VerifyMFAU2FScreenText },
    { no: 20, name: "passwordless_text", kind: "message", T: PasswordlessScreenText },
    { no: 21, name: "password_change_text", kind: "message", T: PasswordChangeScreenText },
    { no: 22, name: "password_change_done_text", kind: "message", T: PasswordChangeDoneScreenText },
    { no: 23, name: "password_reset_done_text", kind: "message", T: PasswordResetDoneScreenText },
    { no: 24, name: "registration_option_text", kind: "message", T: RegistrationOptionScreenText },
    { no: 25, name: "registration_user_text", kind: "message", T: RegistrationUserScreenText },
    { no: 26, name: "registration_org_text", kind: "message", T: RegistrationOrgScreenText },
    { no: 27, name: "linking_user_done_text", kind: "message", T: LinkingUserDoneScreenText },
    { no: 28, name: "external_user_not_found_text", kind: "message", T: ExternalUserNotFoundScreenText },
    { no: 29, name: "success_login_text", kind: "message", T: SuccessLoginScreenText },
    { no: 30, name: "logout_text", kind: "message", T: LogoutDoneScreenText },
    { no: 31, name: "footer_text", kind: "message", T: FooterText },
    { no: 32, name: "passwordless_prompt_text", kind: "message", T: PasswordlessPromptScreenText },
    { no: 33, name: "passwordless_registration_text", kind: "message", T: PasswordlessRegistrationScreenText },
    { no: 34, name: "passwordless_registration_done_text", kind: "message", T: PasswordlessRegistrationDoneScreenText },
    { no: 35, name: "external_registration_user_overview_text", kind: "message", T: ExternalRegistrationUserOverviewScreenText },
    { no: 36, name: "linking_user_prompt_text", kind: "message", T: LinkingUserPromptScreenText },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomLoginTextsRequest {
    return new SetCustomLoginTextsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomLoginTextsRequest {
    return new SetCustomLoginTextsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomLoginTextsRequest {
    return new SetCustomLoginTextsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomLoginTextsRequest | PlainMessage<SetCustomLoginTextsRequest> | undefined, b: SetCustomLoginTextsRequest | PlainMessage<SetCustomLoginTextsRequest> | undefined): boolean {
    return proto3.util.equals(SetCustomLoginTextsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetCustomLoginTextsResponse
 */
export class SetCustomLoginTextsResponse extends Message<SetCustomLoginTextsResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetCustomLoginTextsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetCustomLoginTextsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetCustomLoginTextsResponse {
    return new SetCustomLoginTextsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetCustomLoginTextsResponse {
    return new SetCustomLoginTextsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetCustomLoginTextsResponse {
    return new SetCustomLoginTextsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetCustomLoginTextsResponse | PlainMessage<SetCustomLoginTextsResponse> | undefined, b: SetCustomLoginTextsResponse | PlainMessage<SetCustomLoginTextsResponse> | undefined): boolean {
    return proto3.util.equals(SetCustomLoginTextsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomLoginTextsToDefaultRequest
 */
export class ResetCustomLoginTextsToDefaultRequest extends Message<ResetCustomLoginTextsToDefaultRequest> {
  /**
   * @generated from field: string language = 1;
   */
  language = "";

  constructor(data?: PartialMessage<ResetCustomLoginTextsToDefaultRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomLoginTextsToDefaultRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomLoginTextsToDefaultRequest {
    return new ResetCustomLoginTextsToDefaultRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomLoginTextsToDefaultRequest {
    return new ResetCustomLoginTextsToDefaultRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomLoginTextsToDefaultRequest {
    return new ResetCustomLoginTextsToDefaultRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomLoginTextsToDefaultRequest | PlainMessage<ResetCustomLoginTextsToDefaultRequest> | undefined, b: ResetCustomLoginTextsToDefaultRequest | PlainMessage<ResetCustomLoginTextsToDefaultRequest> | undefined): boolean {
    return proto3.util.equals(ResetCustomLoginTextsToDefaultRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ResetCustomLoginTextsToDefaultResponse
 */
export class ResetCustomLoginTextsToDefaultResponse extends Message<ResetCustomLoginTextsToDefaultResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResetCustomLoginTextsToDefaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ResetCustomLoginTextsToDefaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetCustomLoginTextsToDefaultResponse {
    return new ResetCustomLoginTextsToDefaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetCustomLoginTextsToDefaultResponse {
    return new ResetCustomLoginTextsToDefaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetCustomLoginTextsToDefaultResponse {
    return new ResetCustomLoginTextsToDefaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetCustomLoginTextsToDefaultResponse | PlainMessage<ResetCustomLoginTextsToDefaultResponse> | undefined, b: ResetCustomLoginTextsToDefaultResponse | PlainMessage<ResetCustomLoginTextsToDefaultResponse> | undefined): boolean {
    return proto3.util.equals(ResetCustomLoginTextsToDefaultResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddIAMMemberRequest
 */
export class AddIAMMemberRequest extends Message<AddIAMMemberRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: repeated string roles = 2;
   */
  roles: string[] = [];

  constructor(data?: PartialMessage<AddIAMMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddIAMMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddIAMMemberRequest {
    return new AddIAMMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddIAMMemberRequest {
    return new AddIAMMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddIAMMemberRequest {
    return new AddIAMMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddIAMMemberRequest | PlainMessage<AddIAMMemberRequest> | undefined, b: AddIAMMemberRequest | PlainMessage<AddIAMMemberRequest> | undefined): boolean {
    return proto3.util.equals(AddIAMMemberRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.AddIAMMemberResponse
 */
export class AddIAMMemberResponse extends Message<AddIAMMemberResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddIAMMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.AddIAMMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddIAMMemberResponse {
    return new AddIAMMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddIAMMemberResponse {
    return new AddIAMMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddIAMMemberResponse {
    return new AddIAMMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddIAMMemberResponse | PlainMessage<AddIAMMemberResponse> | undefined, b: AddIAMMemberResponse | PlainMessage<AddIAMMemberResponse> | undefined): boolean {
    return proto3.util.equals(AddIAMMemberResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateIAMMemberRequest
 */
export class UpdateIAMMemberRequest extends Message<UpdateIAMMemberRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: repeated string roles = 2;
   */
  roles: string[] = [];

  constructor(data?: PartialMessage<UpdateIAMMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateIAMMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateIAMMemberRequest {
    return new UpdateIAMMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateIAMMemberRequest {
    return new UpdateIAMMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateIAMMemberRequest {
    return new UpdateIAMMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateIAMMemberRequest | PlainMessage<UpdateIAMMemberRequest> | undefined, b: UpdateIAMMemberRequest | PlainMessage<UpdateIAMMemberRequest> | undefined): boolean {
    return proto3.util.equals(UpdateIAMMemberRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.UpdateIAMMemberResponse
 */
export class UpdateIAMMemberResponse extends Message<UpdateIAMMemberResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateIAMMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.UpdateIAMMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateIAMMemberResponse {
    return new UpdateIAMMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateIAMMemberResponse {
    return new UpdateIAMMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateIAMMemberResponse {
    return new UpdateIAMMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateIAMMemberResponse | PlainMessage<UpdateIAMMemberResponse> | undefined, b: UpdateIAMMemberResponse | PlainMessage<UpdateIAMMemberResponse> | undefined): boolean {
    return proto3.util.equals(UpdateIAMMemberResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveIAMMemberRequest
 */
export class RemoveIAMMemberRequest extends Message<RemoveIAMMemberRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<RemoveIAMMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveIAMMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveIAMMemberRequest {
    return new RemoveIAMMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveIAMMemberRequest {
    return new RemoveIAMMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveIAMMemberRequest {
    return new RemoveIAMMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveIAMMemberRequest | PlainMessage<RemoveIAMMemberRequest> | undefined, b: RemoveIAMMemberRequest | PlainMessage<RemoveIAMMemberRequest> | undefined): boolean {
    return proto3.util.equals(RemoveIAMMemberRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveIAMMemberResponse
 */
export class RemoveIAMMemberResponse extends Message<RemoveIAMMemberResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveIAMMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveIAMMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveIAMMemberResponse {
    return new RemoveIAMMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveIAMMemberResponse {
    return new RemoveIAMMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveIAMMemberResponse {
    return new RemoveIAMMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveIAMMemberResponse | PlainMessage<RemoveIAMMemberResponse> | undefined, b: RemoveIAMMemberResponse | PlainMessage<RemoveIAMMemberResponse> | undefined): boolean {
    return proto3.util.equals(RemoveIAMMemberResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.ListIAMMemberRolesRequest
 */
export class ListIAMMemberRolesRequest extends Message<ListIAMMemberRolesRequest> {
  constructor(data?: PartialMessage<ListIAMMemberRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListIAMMemberRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIAMMemberRolesRequest {
    return new ListIAMMemberRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIAMMemberRolesRequest {
    return new ListIAMMemberRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIAMMemberRolesRequest {
    return new ListIAMMemberRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListIAMMemberRolesRequest | PlainMessage<ListIAMMemberRolesRequest> | undefined, b: ListIAMMemberRolesRequest | PlainMessage<ListIAMMemberRolesRequest> | undefined): boolean {
    return proto3.util.equals(ListIAMMemberRolesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListIAMMemberRolesResponse
 */
export class ListIAMMemberRolesResponse extends Message<ListIAMMemberRolesResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated string roles = 2;
   */
  roles: string[] = [];

  constructor(data?: PartialMessage<ListIAMMemberRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListIAMMemberRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIAMMemberRolesResponse {
    return new ListIAMMemberRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIAMMemberRolesResponse {
    return new ListIAMMemberRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIAMMemberRolesResponse {
    return new ListIAMMemberRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListIAMMemberRolesResponse | PlainMessage<ListIAMMemberRolesResponse> | undefined, b: ListIAMMemberRolesResponse | PlainMessage<ListIAMMemberRolesResponse> | undefined): boolean {
    return proto3.util.equals(ListIAMMemberRolesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListIAMMembersRequest
 */
export class ListIAMMembersRequest extends Message<ListIAMMembersRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.member.v1.SearchQuery queries = 2;
   */
  queries: SearchQuery[] = [];

  constructor(data?: PartialMessage<ListIAMMembersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListIAMMembersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: SearchQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIAMMembersRequest {
    return new ListIAMMembersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIAMMembersRequest {
    return new ListIAMMembersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIAMMembersRequest {
    return new ListIAMMembersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListIAMMembersRequest | PlainMessage<ListIAMMembersRequest> | undefined, b: ListIAMMembersRequest | PlainMessage<ListIAMMembersRequest> | undefined): boolean {
    return proto3.util.equals(ListIAMMembersRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListIAMMembersResponse
 */
export class ListIAMMembersResponse extends Message<ListIAMMembersResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.member.v1.Member result = 2;
   */
  result: Member[] = [];

  constructor(data?: PartialMessage<ListIAMMembersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListIAMMembersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Member, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIAMMembersResponse {
    return new ListIAMMembersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIAMMembersResponse {
    return new ListIAMMembersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIAMMembersResponse {
    return new ListIAMMembersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListIAMMembersResponse | PlainMessage<ListIAMMembersResponse> | undefined, b: ListIAMMembersResponse | PlainMessage<ListIAMMembersResponse> | undefined): boolean {
    return proto3.util.equals(ListIAMMembersResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.ListViewsRequest
 */
export class ListViewsRequest extends Message<ListViewsRequest> {
  constructor(data?: PartialMessage<ListViewsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListViewsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListViewsRequest {
    return new ListViewsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListViewsRequest {
    return new ListViewsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListViewsRequest {
    return new ListViewsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListViewsRequest | PlainMessage<ListViewsRequest> | undefined, b: ListViewsRequest | PlainMessage<ListViewsRequest> | undefined): boolean {
    return proto3.util.equals(ListViewsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListViewsResponse
 */
export class ListViewsResponse extends Message<ListViewsResponse> {
  /**
   * TODO: list details
   *
   * @generated from field: repeated zitadel.admin.v1.View result = 1;
   */
  result: View[] = [];

  constructor(data?: PartialMessage<ListViewsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListViewsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: View, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListViewsResponse {
    return new ListViewsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListViewsResponse {
    return new ListViewsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListViewsResponse {
    return new ListViewsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListViewsResponse | PlainMessage<ListViewsResponse> | undefined, b: ListViewsResponse | PlainMessage<ListViewsResponse> | undefined): boolean {
    return proto3.util.equals(ListViewsResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.admin.v1.ListFailedEventsRequest
 */
export class ListFailedEventsRequest extends Message<ListFailedEventsRequest> {
  constructor(data?: PartialMessage<ListFailedEventsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListFailedEventsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFailedEventsRequest {
    return new ListFailedEventsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFailedEventsRequest {
    return new ListFailedEventsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFailedEventsRequest {
    return new ListFailedEventsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListFailedEventsRequest | PlainMessage<ListFailedEventsRequest> | undefined, b: ListFailedEventsRequest | PlainMessage<ListFailedEventsRequest> | undefined): boolean {
    return proto3.util.equals(ListFailedEventsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListFailedEventsResponse
 */
export class ListFailedEventsResponse extends Message<ListFailedEventsResponse> {
  /**
   * TODO: list details
   *
   * @generated from field: repeated zitadel.admin.v1.FailedEvent result = 1;
   */
  result: FailedEvent[] = [];

  constructor(data?: PartialMessage<ListFailedEventsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListFailedEventsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: FailedEvent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFailedEventsResponse {
    return new ListFailedEventsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFailedEventsResponse {
    return new ListFailedEventsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFailedEventsResponse {
    return new ListFailedEventsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListFailedEventsResponse | PlainMessage<ListFailedEventsResponse> | undefined, b: ListFailedEventsResponse | PlainMessage<ListFailedEventsResponse> | undefined): boolean {
    return proto3.util.equals(ListFailedEventsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.RemoveFailedEventRequest
 */
export class RemoveFailedEventRequest extends Message<RemoveFailedEventRequest> {
  /**
   * @generated from field: string database = 1;
   */
  database = "";

  /**
   * @generated from field: string view_name = 2;
   */
  viewName = "";

  /**
   * @generated from field: uint64 failed_sequence = 3;
   */
  failedSequence = protoInt64.zero;

  constructor(data?: PartialMessage<RemoveFailedEventRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveFailedEventRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "database", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "view_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "failed_sequence", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveFailedEventRequest {
    return new RemoveFailedEventRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveFailedEventRequest {
    return new RemoveFailedEventRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveFailedEventRequest {
    return new RemoveFailedEventRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveFailedEventRequest | PlainMessage<RemoveFailedEventRequest> | undefined, b: RemoveFailedEventRequest | PlainMessage<RemoveFailedEventRequest> | undefined): boolean {
    return proto3.util.equals(RemoveFailedEventRequest, a, b);
  }
}

/**
 * This is an empty response
 *
 * @generated from message zitadel.admin.v1.RemoveFailedEventResponse
 */
export class RemoveFailedEventResponse extends Message<RemoveFailedEventResponse> {
  constructor(data?: PartialMessage<RemoveFailedEventResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.RemoveFailedEventResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveFailedEventResponse {
    return new RemoveFailedEventResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveFailedEventResponse {
    return new RemoveFailedEventResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveFailedEventResponse {
    return new RemoveFailedEventResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveFailedEventResponse | PlainMessage<RemoveFailedEventResponse> | undefined, b: RemoveFailedEventResponse | PlainMessage<RemoveFailedEventResponse> | undefined): boolean {
    return proto3.util.equals(RemoveFailedEventResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.View
 */
export class View extends Message<View> {
  /**
   * @generated from field: string database = 1;
   */
  database = "";

  /**
   * @generated from field: string view_name = 2;
   */
  viewName = "";

  /**
   * @generated from field: uint64 processed_sequence = 3;
   */
  processedSequence = protoInt64.zero;

  /**
   * The timestamp the event occurred
   *
   * @generated from field: google.protobuf.Timestamp event_timestamp = 4;
   */
  eventTimestamp?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp last_successful_spooler_run = 5;
   */
  lastSuccessfulSpoolerRun?: Timestamp;

  constructor(data?: PartialMessage<View>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.View";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "database", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "view_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "processed_sequence", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "event_timestamp", kind: "message", T: Timestamp },
    { no: 5, name: "last_successful_spooler_run", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): View {
    return new View().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): View {
    return new View().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): View {
    return new View().fromJsonString(jsonString, options);
  }

  static equals(a: View | PlainMessage<View> | undefined, b: View | PlainMessage<View> | undefined): boolean {
    return proto3.util.equals(View, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.FailedEvent
 */
export class FailedEvent extends Message<FailedEvent> {
  /**
   * @generated from field: string database = 1;
   */
  database = "";

  /**
   * @generated from field: string view_name = 2;
   */
  viewName = "";

  /**
   * @generated from field: uint64 failed_sequence = 3;
   */
  failedSequence = protoInt64.zero;

  /**
   * @generated from field: uint64 failure_count = 4;
   */
  failureCount = protoInt64.zero;

  /**
   * @generated from field: string error_message = 5;
   */
  errorMessage = "";

  /**
   * @generated from field: google.protobuf.Timestamp last_failed = 6;
   */
  lastFailed?: Timestamp;

  constructor(data?: PartialMessage<FailedEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.FailedEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "database", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "view_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "failed_sequence", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "failure_count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "error_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "last_failed", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FailedEvent {
    return new FailedEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FailedEvent {
    return new FailedEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FailedEvent {
    return new FailedEvent().fromJsonString(jsonString, options);
  }

  static equals(a: FailedEvent | PlainMessage<FailedEvent> | undefined, b: FailedEvent | PlainMessage<FailedEvent> | undefined): boolean {
    return proto3.util.equals(FailedEvent, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataRequest
 */
export class ImportDataRequest extends Message<ImportDataRequest> {
  /**
   * @generated from oneof zitadel.admin.v1.ImportDataRequest.data
   */
  data: {
    /**
     * @generated from field: zitadel.admin.v1.ImportDataOrg data_orgs = 1;
     */
    value: ImportDataOrg;
    case: "dataOrgs";
  } | {
    /**
     * @generated from field: zitadel.v1.v1.ImportDataOrg data_orgsv1 = 2;
     */
    value: ImportDataOrg$1;
    case: "dataOrgsv1";
  } | {
    /**
     * @generated from field: zitadel.admin.v1.ImportDataRequest.LocalInput data_orgs_local = 3;
     */
    value: ImportDataRequest_LocalInput;
    case: "dataOrgsLocal";
  } | {
    /**
     * @generated from field: zitadel.admin.v1.ImportDataRequest.LocalInput data_orgsv1_local = 4;
     */
    value: ImportDataRequest_LocalInput;
    case: "dataOrgsv1Local";
  } | {
    /**
     * @generated from field: zitadel.admin.v1.ImportDataRequest.S3Input data_orgs_s3 = 5;
     */
    value: ImportDataRequest_S3Input;
    case: "dataOrgsS3";
  } | {
    /**
     * @generated from field: zitadel.admin.v1.ImportDataRequest.S3Input data_orgsv1_s3 = 6;
     */
    value: ImportDataRequest_S3Input;
    case: "dataOrgsv1S3";
  } | {
    /**
     * @generated from field: zitadel.admin.v1.ImportDataRequest.GCSInput data_orgs_gcs = 7;
     */
    value: ImportDataRequest_GCSInput;
    case: "dataOrgsGcs";
  } | {
    /**
     * @generated from field: zitadel.admin.v1.ImportDataRequest.GCSInput data_orgsv1_gcs = 8;
     */
    value: ImportDataRequest_GCSInput;
    case: "dataOrgsv1Gcs";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: string timeout = 9;
   */
  timeout = "";

  constructor(data?: PartialMessage<ImportDataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data_orgs", kind: "message", T: ImportDataOrg, oneof: "data" },
    { no: 2, name: "data_orgsv1", kind: "message", T: ImportDataOrg$1, oneof: "data" },
    { no: 3, name: "data_orgs_local", kind: "message", T: ImportDataRequest_LocalInput, oneof: "data" },
    { no: 4, name: "data_orgsv1_local", kind: "message", T: ImportDataRequest_LocalInput, oneof: "data" },
    { no: 5, name: "data_orgs_s3", kind: "message", T: ImportDataRequest_S3Input, oneof: "data" },
    { no: 6, name: "data_orgsv1_s3", kind: "message", T: ImportDataRequest_S3Input, oneof: "data" },
    { no: 7, name: "data_orgs_gcs", kind: "message", T: ImportDataRequest_GCSInput, oneof: "data" },
    { no: 8, name: "data_orgsv1_gcs", kind: "message", T: ImportDataRequest_GCSInput, oneof: "data" },
    { no: 9, name: "timeout", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataRequest {
    return new ImportDataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataRequest {
    return new ImportDataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataRequest {
    return new ImportDataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataRequest | PlainMessage<ImportDataRequest> | undefined, b: ImportDataRequest | PlainMessage<ImportDataRequest> | undefined): boolean {
    return proto3.util.equals(ImportDataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataRequest.LocalInput
 */
export class ImportDataRequest_LocalInput extends Message<ImportDataRequest_LocalInput> {
  /**
   * @generated from field: string path = 1;
   */
  path = "";

  constructor(data?: PartialMessage<ImportDataRequest_LocalInput>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataRequest.LocalInput";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataRequest_LocalInput {
    return new ImportDataRequest_LocalInput().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataRequest_LocalInput {
    return new ImportDataRequest_LocalInput().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataRequest_LocalInput {
    return new ImportDataRequest_LocalInput().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataRequest_LocalInput | PlainMessage<ImportDataRequest_LocalInput> | undefined, b: ImportDataRequest_LocalInput | PlainMessage<ImportDataRequest_LocalInput> | undefined): boolean {
    return proto3.util.equals(ImportDataRequest_LocalInput, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataRequest.S3Input
 */
export class ImportDataRequest_S3Input extends Message<ImportDataRequest_S3Input> {
  /**
   * @generated from field: string path = 1;
   */
  path = "";

  /**
   * @generated from field: string endpoint = 2;
   */
  endpoint = "";

  /**
   * @generated from field: string access_key_id = 3;
   */
  accessKeyId = "";

  /**
   * @generated from field: string secret_access_key = 4;
   */
  secretAccessKey = "";

  /**
   * @generated from field: bool ssl = 5;
   */
  ssl = false;

  /**
   * @generated from field: string bucket = 6;
   */
  bucket = "";

  constructor(data?: PartialMessage<ImportDataRequest_S3Input>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataRequest.S3Input";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "access_key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "secret_access_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "ssl", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "bucket", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataRequest_S3Input {
    return new ImportDataRequest_S3Input().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataRequest_S3Input {
    return new ImportDataRequest_S3Input().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataRequest_S3Input {
    return new ImportDataRequest_S3Input().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataRequest_S3Input | PlainMessage<ImportDataRequest_S3Input> | undefined, b: ImportDataRequest_S3Input | PlainMessage<ImportDataRequest_S3Input> | undefined): boolean {
    return proto3.util.equals(ImportDataRequest_S3Input, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataRequest.GCSInput
 */
export class ImportDataRequest_GCSInput extends Message<ImportDataRequest_GCSInput> {
  /**
   * @generated from field: string bucket = 1;
   */
  bucket = "";

  /**
   * @generated from field: string serviceaccount_json = 2;
   */
  serviceaccountJson = "";

  /**
   * @generated from field: string path = 3;
   */
  path = "";

  constructor(data?: PartialMessage<ImportDataRequest_GCSInput>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataRequest.GCSInput";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bucket", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "serviceaccount_json", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataRequest_GCSInput {
    return new ImportDataRequest_GCSInput().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataRequest_GCSInput {
    return new ImportDataRequest_GCSInput().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataRequest_GCSInput {
    return new ImportDataRequest_GCSInput().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataRequest_GCSInput | PlainMessage<ImportDataRequest_GCSInput> | undefined, b: ImportDataRequest_GCSInput | PlainMessage<ImportDataRequest_GCSInput> | undefined): boolean {
    return proto3.util.equals(ImportDataRequest_GCSInput, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataOrg
 */
export class ImportDataOrg extends Message<ImportDataOrg> {
  /**
   * @generated from field: repeated zitadel.admin.v1.DataOrg orgs = 1;
   */
  orgs: DataOrg[] = [];

  constructor(data?: PartialMessage<ImportDataOrg>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataOrg";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orgs", kind: "message", T: DataOrg, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataOrg {
    return new ImportDataOrg().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataOrg {
    return new ImportDataOrg().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataOrg {
    return new ImportDataOrg().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataOrg | PlainMessage<ImportDataOrg> | undefined, b: ImportDataOrg | PlainMessage<ImportDataOrg> | undefined): boolean {
    return proto3.util.equals(ImportDataOrg, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.DataOrg
 */
export class DataOrg extends Message<DataOrg> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: zitadel.management.v1.AddOrgRequest org = 3;
   */
  org?: AddOrgRequest;

  /**
   * @generated from field: zitadel.admin.v1.AddCustomDomainPolicyRequest domain_policy = 4;
   */
  domainPolicy?: AddCustomDomainPolicyRequest;

  /**
   * @generated from field: zitadel.management.v1.AddCustomLabelPolicyRequest label_policy = 5;
   */
  labelPolicy?: AddCustomLabelPolicyRequest;

  /**
   * @generated from field: zitadel.management.v1.AddCustomLockoutPolicyRequest lockout_policy = 6;
   */
  lockoutPolicy?: AddCustomLockoutPolicyRequest;

  /**
   * @generated from field: zitadel.management.v1.AddCustomLoginPolicyRequest login_policy = 7;
   */
  loginPolicy?: AddCustomLoginPolicyRequest;

  /**
   * @generated from field: zitadel.management.v1.AddCustomPasswordComplexityPolicyRequest password_complexity_policy = 8;
   */
  passwordComplexityPolicy?: AddCustomPasswordComplexityPolicyRequest;

  /**
   * @generated from field: zitadel.management.v1.AddCustomPrivacyPolicyRequest privacy_policy = 9;
   */
  privacyPolicy?: AddCustomPrivacyPolicyRequest;

  /**
   * @generated from field: repeated zitadel.v1.v1.DataProject projects = 10;
   */
  projects: DataProject[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddProjectRoleRequest project_roles = 11;
   */
  projectRoles: AddProjectRoleRequest[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataAPIApplication api_apps = 12;
   */
  apiApps: DataAPIApplication[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataOIDCApplication oidc_apps = 13;
   */
  oidcApps: DataOIDCApplication[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataHumanUser human_users = 14;
   */
  humanUsers: DataHumanUser[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataMachineUser machine_users = 15;
   */
  machineUsers: DataMachineUser[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetTriggerActionsRequest trigger_actions = 16;
   */
  triggerActions: SetTriggerActionsRequest[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataAction actions = 17;
   */
  actions: DataAction[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataProjectGrant project_grants = 18;
   */
  projectGrants: DataProjectGrant[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddUserGrantRequest user_grants = 19;
   */
  userGrants: AddUserGrantRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddOrgMemberRequest org_members = 20;
   */
  orgMembers: AddOrgMemberRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddProjectMemberRequest project_members = 21;
   */
  projectMembers: AddProjectMemberRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.AddProjectGrantMemberRequest project_grant_members = 22;
   */
  projectGrantMembers: AddProjectGrantMemberRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetUserMetadataRequest user_metadata = 23;
   */
  userMetadata: SetUserMetadataRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomLoginTextsRequest login_texts = 24;
   */
  loginTexts: SetCustomLoginTextsRequest$1[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomInitMessageTextRequest init_messages = 25;
   */
  initMessages: SetCustomInitMessageTextRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomPasswordResetMessageTextRequest password_reset_messages = 26;
   */
  passwordResetMessages: SetCustomPasswordResetMessageTextRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomVerifyEmailMessageTextRequest verify_email_messages = 27;
   */
  verifyEmailMessages: SetCustomVerifyEmailMessageTextRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomVerifyPhoneMessageTextRequest verify_phone_messages = 28;
   */
  verifyPhoneMessages: SetCustomVerifyPhoneMessageTextRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomDomainClaimedMessageTextRequest domain_claimed_messages = 29;
   */
  domainClaimedMessages: SetCustomDomainClaimedMessageTextRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomPasswordlessRegistrationMessageTextRequest passwordless_registration_messages = 30;
   */
  passwordlessRegistrationMessages: SetCustomPasswordlessRegistrationMessageTextRequest[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataOIDCIDP oidc_idps = 31;
   */
  oidcIdps: DataOIDCIDP[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataJWTIDP jwt_idps = 32;
   */
  jwtIdps: DataJWTIDP[] = [];

  /**
   * @generated from field: repeated zitadel.idp.v1.IDPUserLink user_links = 33;
   */
  userLinks: IDPUserLink[] = [];

  /**
   * @generated from field: repeated zitadel.org.v1.Domain domains = 34;
   */
  domains: Domain$1[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataAppKey app_keys = 35;
   */
  appKeys: DataAppKey[] = [];

  /**
   * @generated from field: repeated zitadel.v1.v1.DataMachineKey machine_keys = 36;
   */
  machineKeys: DataMachineKey[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomVerifySMSOTPMessageTextRequest verify_sms_otp_messages = 37;
   */
  verifySmsOtpMessages: SetCustomVerifySMSOTPMessageTextRequest[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetCustomVerifyEmailOTPMessageTextRequest verify_email_otp_messages = 38;
   */
  verifyEmailOtpMessages: SetCustomVerifyEmailOTPMessageTextRequest[] = [];

  constructor(data?: PartialMessage<DataOrg>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.DataOrg";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "org", kind: "message", T: AddOrgRequest },
    { no: 4, name: "domain_policy", kind: "message", T: AddCustomDomainPolicyRequest },
    { no: 5, name: "label_policy", kind: "message", T: AddCustomLabelPolicyRequest },
    { no: 6, name: "lockout_policy", kind: "message", T: AddCustomLockoutPolicyRequest },
    { no: 7, name: "login_policy", kind: "message", T: AddCustomLoginPolicyRequest },
    { no: 8, name: "password_complexity_policy", kind: "message", T: AddCustomPasswordComplexityPolicyRequest },
    { no: 9, name: "privacy_policy", kind: "message", T: AddCustomPrivacyPolicyRequest },
    { no: 10, name: "projects", kind: "message", T: DataProject, repeated: true },
    { no: 11, name: "project_roles", kind: "message", T: AddProjectRoleRequest, repeated: true },
    { no: 12, name: "api_apps", kind: "message", T: DataAPIApplication, repeated: true },
    { no: 13, name: "oidc_apps", kind: "message", T: DataOIDCApplication, repeated: true },
    { no: 14, name: "human_users", kind: "message", T: DataHumanUser, repeated: true },
    { no: 15, name: "machine_users", kind: "message", T: DataMachineUser, repeated: true },
    { no: 16, name: "trigger_actions", kind: "message", T: SetTriggerActionsRequest, repeated: true },
    { no: 17, name: "actions", kind: "message", T: DataAction, repeated: true },
    { no: 18, name: "project_grants", kind: "message", T: DataProjectGrant, repeated: true },
    { no: 19, name: "user_grants", kind: "message", T: AddUserGrantRequest, repeated: true },
    { no: 20, name: "org_members", kind: "message", T: AddOrgMemberRequest, repeated: true },
    { no: 21, name: "project_members", kind: "message", T: AddProjectMemberRequest, repeated: true },
    { no: 22, name: "project_grant_members", kind: "message", T: AddProjectGrantMemberRequest, repeated: true },
    { no: 23, name: "user_metadata", kind: "message", T: SetUserMetadataRequest, repeated: true },
    { no: 24, name: "login_texts", kind: "message", T: SetCustomLoginTextsRequest$1, repeated: true },
    { no: 25, name: "init_messages", kind: "message", T: SetCustomInitMessageTextRequest, repeated: true },
    { no: 26, name: "password_reset_messages", kind: "message", T: SetCustomPasswordResetMessageTextRequest, repeated: true },
    { no: 27, name: "verify_email_messages", kind: "message", T: SetCustomVerifyEmailMessageTextRequest, repeated: true },
    { no: 28, name: "verify_phone_messages", kind: "message", T: SetCustomVerifyPhoneMessageTextRequest, repeated: true },
    { no: 29, name: "domain_claimed_messages", kind: "message", T: SetCustomDomainClaimedMessageTextRequest, repeated: true },
    { no: 30, name: "passwordless_registration_messages", kind: "message", T: SetCustomPasswordlessRegistrationMessageTextRequest, repeated: true },
    { no: 31, name: "oidc_idps", kind: "message", T: DataOIDCIDP, repeated: true },
    { no: 32, name: "jwt_idps", kind: "message", T: DataJWTIDP, repeated: true },
    { no: 33, name: "user_links", kind: "message", T: IDPUserLink, repeated: true },
    { no: 34, name: "domains", kind: "message", T: Domain$1, repeated: true },
    { no: 35, name: "app_keys", kind: "message", T: DataAppKey, repeated: true },
    { no: 36, name: "machine_keys", kind: "message", T: DataMachineKey, repeated: true },
    { no: 37, name: "verify_sms_otp_messages", kind: "message", T: SetCustomVerifySMSOTPMessageTextRequest, repeated: true },
    { no: 38, name: "verify_email_otp_messages", kind: "message", T: SetCustomVerifyEmailOTPMessageTextRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataOrg {
    return new DataOrg().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataOrg {
    return new DataOrg().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataOrg {
    return new DataOrg().fromJsonString(jsonString, options);
  }

  static equals(a: DataOrg | PlainMessage<DataOrg> | undefined, b: DataOrg | PlainMessage<DataOrg> | undefined): boolean {
    return proto3.util.equals(DataOrg, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataResponse
 */
export class ImportDataResponse extends Message<ImportDataResponse> {
  /**
   * @generated from field: repeated zitadel.admin.v1.ImportDataError errors = 1;
   */
  errors: ImportDataError[] = [];

  /**
   * @generated from field: zitadel.admin.v1.ImportDataSuccess success = 2;
   */
  success?: ImportDataSuccess;

  constructor(data?: PartialMessage<ImportDataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "errors", kind: "message", T: ImportDataError, repeated: true },
    { no: 2, name: "success", kind: "message", T: ImportDataSuccess },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataResponse {
    return new ImportDataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataResponse {
    return new ImportDataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataResponse {
    return new ImportDataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataResponse | PlainMessage<ImportDataResponse> | undefined, b: ImportDataResponse | PlainMessage<ImportDataResponse> | undefined): boolean {
    return proto3.util.equals(ImportDataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataError
 */
export class ImportDataError extends Message<ImportDataError> {
  /**
   * @generated from field: string type = 1;
   */
  type = "";

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  /**
   * @generated from field: string message = 3;
   */
  message = "";

  constructor(data?: PartialMessage<ImportDataError>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataError";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataError {
    return new ImportDataError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataError {
    return new ImportDataError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataError {
    return new ImportDataError().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataError | PlainMessage<ImportDataError> | undefined, b: ImportDataError | PlainMessage<ImportDataError> | undefined): boolean {
    return proto3.util.equals(ImportDataError, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataSuccess
 */
export class ImportDataSuccess extends Message<ImportDataSuccess> {
  /**
   * @generated from field: repeated zitadel.admin.v1.ImportDataSuccessOrg orgs = 1;
   */
  orgs: ImportDataSuccessOrg[] = [];

  constructor(data?: PartialMessage<ImportDataSuccess>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataSuccess";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orgs", kind: "message", T: ImportDataSuccessOrg, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataSuccess {
    return new ImportDataSuccess().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataSuccess {
    return new ImportDataSuccess().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataSuccess {
    return new ImportDataSuccess().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataSuccess | PlainMessage<ImportDataSuccess> | undefined, b: ImportDataSuccess | PlainMessage<ImportDataSuccess> | undefined): boolean {
    return proto3.util.equals(ImportDataSuccess, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataSuccessOrg
 */
export class ImportDataSuccessOrg extends Message<ImportDataSuccessOrg> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: repeated string project_ids = 2;
   */
  projectIds: string[] = [];

  /**
   * @generated from field: repeated string project_roles = 3;
   */
  projectRoles: string[] = [];

  /**
   * @generated from field: repeated string oidc_app_ids = 4;
   */
  oidcAppIds: string[] = [];

  /**
   * @generated from field: repeated string api_app_ids = 5;
   */
  apiAppIds: string[] = [];

  /**
   * @generated from field: repeated string human_user_ids = 6;
   */
  humanUserIds: string[] = [];

  /**
   * @generated from field: repeated string machine_user_ids = 7;
   */
  machineUserIds: string[] = [];

  /**
   * @generated from field: repeated string action_ids = 8;
   */
  actionIds: string[] = [];

  /**
   * @generated from field: repeated zitadel.management.v1.SetTriggerActionsRequest trigger_actions = 9;
   */
  triggerActions: SetTriggerActionsRequest[] = [];

  /**
   * @generated from field: repeated zitadel.admin.v1.ImportDataSuccessProjectGrant project_grants = 10;
   */
  projectGrants: ImportDataSuccessProjectGrant[] = [];

  /**
   * @generated from field: repeated zitadel.admin.v1.ImportDataSuccessUserGrant user_grants = 11;
   */
  userGrants: ImportDataSuccessUserGrant[] = [];

  /**
   * @generated from field: repeated string org_members = 12;
   */
  orgMembers: string[] = [];

  /**
   * @generated from field: repeated zitadel.admin.v1.ImportDataSuccessProjectMember project_members = 13;
   */
  projectMembers: ImportDataSuccessProjectMember[] = [];

  /**
   * @generated from field: repeated zitadel.admin.v1.ImportDataSuccessProjectGrantMember project_grant_members = 14;
   */
  projectGrantMembers: ImportDataSuccessProjectGrantMember[] = [];

  /**
   * @generated from field: repeated string oidc_ipds = 15;
   */
  oidcIpds: string[] = [];

  /**
   * @generated from field: repeated string jwt_idps = 16;
   */
  jwtIdps: string[] = [];

  /**
   * @generated from field: repeated string idp_links = 17;
   */
  idpLinks: string[] = [];

  /**
   * @generated from field: repeated zitadel.admin.v1.ImportDataSuccessUserLinks user_links = 18;
   */
  userLinks: ImportDataSuccessUserLinks[] = [];

  /**
   * @generated from field: repeated zitadel.admin.v1.ImportDataSuccessUserMetadata user_metadata = 19;
   */
  userMetadata: ImportDataSuccessUserMetadata[] = [];

  /**
   * @generated from field: repeated string domains = 20;
   */
  domains: string[] = [];

  /**
   * @generated from field: repeated string app_keys = 21;
   */
  appKeys: string[] = [];

  /**
   * @generated from field: repeated string machine_keys = 22;
   */
  machineKeys: string[] = [];

  constructor(data?: PartialMessage<ImportDataSuccessOrg>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataSuccessOrg";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "project_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "project_roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "oidc_app_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "api_app_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "human_user_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "machine_user_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "action_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "trigger_actions", kind: "message", T: SetTriggerActionsRequest, repeated: true },
    { no: 10, name: "project_grants", kind: "message", T: ImportDataSuccessProjectGrant, repeated: true },
    { no: 11, name: "user_grants", kind: "message", T: ImportDataSuccessUserGrant, repeated: true },
    { no: 12, name: "org_members", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 13, name: "project_members", kind: "message", T: ImportDataSuccessProjectMember, repeated: true },
    { no: 14, name: "project_grant_members", kind: "message", T: ImportDataSuccessProjectGrantMember, repeated: true },
    { no: 15, name: "oidc_ipds", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 16, name: "jwt_idps", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 17, name: "idp_links", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 18, name: "user_links", kind: "message", T: ImportDataSuccessUserLinks, repeated: true },
    { no: 19, name: "user_metadata", kind: "message", T: ImportDataSuccessUserMetadata, repeated: true },
    { no: 20, name: "domains", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 21, name: "app_keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 22, name: "machine_keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataSuccessOrg {
    return new ImportDataSuccessOrg().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataSuccessOrg {
    return new ImportDataSuccessOrg().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataSuccessOrg {
    return new ImportDataSuccessOrg().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataSuccessOrg | PlainMessage<ImportDataSuccessOrg> | undefined, b: ImportDataSuccessOrg | PlainMessage<ImportDataSuccessOrg> | undefined): boolean {
    return proto3.util.equals(ImportDataSuccessOrg, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataSuccessProjectGrant
 */
export class ImportDataSuccessProjectGrant extends Message<ImportDataSuccessProjectGrant> {
  /**
   * @generated from field: string grant_id = 1;
   */
  grantId = "";

  /**
   * @generated from field: string project_id = 2;
   */
  projectId = "";

  /**
   * @generated from field: string org_id = 3;
   */
  orgId = "";

  constructor(data?: PartialMessage<ImportDataSuccessProjectGrant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataSuccessProjectGrant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataSuccessProjectGrant {
    return new ImportDataSuccessProjectGrant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataSuccessProjectGrant {
    return new ImportDataSuccessProjectGrant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataSuccessProjectGrant {
    return new ImportDataSuccessProjectGrant().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataSuccessProjectGrant | PlainMessage<ImportDataSuccessProjectGrant> | undefined, b: ImportDataSuccessProjectGrant | PlainMessage<ImportDataSuccessProjectGrant> | undefined): boolean {
    return proto3.util.equals(ImportDataSuccessProjectGrant, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataSuccessUserGrant
 */
export class ImportDataSuccessUserGrant extends Message<ImportDataSuccessUserGrant> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string user_id = 2;
   */
  userId = "";

  constructor(data?: PartialMessage<ImportDataSuccessUserGrant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataSuccessUserGrant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataSuccessUserGrant {
    return new ImportDataSuccessUserGrant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataSuccessUserGrant {
    return new ImportDataSuccessUserGrant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataSuccessUserGrant {
    return new ImportDataSuccessUserGrant().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataSuccessUserGrant | PlainMessage<ImportDataSuccessUserGrant> | undefined, b: ImportDataSuccessUserGrant | PlainMessage<ImportDataSuccessUserGrant> | undefined): boolean {
    return proto3.util.equals(ImportDataSuccessUserGrant, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataSuccessProjectMember
 */
export class ImportDataSuccessProjectMember extends Message<ImportDataSuccessProjectMember> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string user_id = 2;
   */
  userId = "";

  constructor(data?: PartialMessage<ImportDataSuccessProjectMember>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataSuccessProjectMember";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataSuccessProjectMember {
    return new ImportDataSuccessProjectMember().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataSuccessProjectMember {
    return new ImportDataSuccessProjectMember().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataSuccessProjectMember {
    return new ImportDataSuccessProjectMember().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataSuccessProjectMember | PlainMessage<ImportDataSuccessProjectMember> | undefined, b: ImportDataSuccessProjectMember | PlainMessage<ImportDataSuccessProjectMember> | undefined): boolean {
    return proto3.util.equals(ImportDataSuccessProjectMember, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataSuccessProjectGrantMember
 */
export class ImportDataSuccessProjectGrantMember extends Message<ImportDataSuccessProjectGrantMember> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: string grant_id = 2;
   */
  grantId = "";

  /**
   * @generated from field: string user_id = 3;
   */
  userId = "";

  constructor(data?: PartialMessage<ImportDataSuccessProjectGrantMember>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataSuccessProjectGrantMember";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataSuccessProjectGrantMember {
    return new ImportDataSuccessProjectGrantMember().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataSuccessProjectGrantMember {
    return new ImportDataSuccessProjectGrantMember().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataSuccessProjectGrantMember {
    return new ImportDataSuccessProjectGrantMember().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataSuccessProjectGrantMember | PlainMessage<ImportDataSuccessProjectGrantMember> | undefined, b: ImportDataSuccessProjectGrantMember | PlainMessage<ImportDataSuccessProjectGrantMember> | undefined): boolean {
    return proto3.util.equals(ImportDataSuccessProjectGrantMember, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataSuccessUserLinks
 */
export class ImportDataSuccessUserLinks extends Message<ImportDataSuccessUserLinks> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string external_user_id = 2;
   */
  externalUserId = "";

  /**
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  /**
   * @generated from field: string idp_id = 4;
   */
  idpId = "";

  constructor(data?: PartialMessage<ImportDataSuccessUserLinks>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataSuccessUserLinks";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "external_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataSuccessUserLinks {
    return new ImportDataSuccessUserLinks().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataSuccessUserLinks {
    return new ImportDataSuccessUserLinks().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataSuccessUserLinks {
    return new ImportDataSuccessUserLinks().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataSuccessUserLinks | PlainMessage<ImportDataSuccessUserLinks> | undefined, b: ImportDataSuccessUserLinks | PlainMessage<ImportDataSuccessUserLinks> | undefined): boolean {
    return proto3.util.equals(ImportDataSuccessUserLinks, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ImportDataSuccessUserMetadata
 */
export class ImportDataSuccessUserMetadata extends Message<ImportDataSuccessUserMetadata> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string key = 2;
   */
  key = "";

  constructor(data?: PartialMessage<ImportDataSuccessUserMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ImportDataSuccessUserMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDataSuccessUserMetadata {
    return new ImportDataSuccessUserMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDataSuccessUserMetadata {
    return new ImportDataSuccessUserMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDataSuccessUserMetadata {
    return new ImportDataSuccessUserMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDataSuccessUserMetadata | PlainMessage<ImportDataSuccessUserMetadata> | undefined, b: ImportDataSuccessUserMetadata | PlainMessage<ImportDataSuccessUserMetadata> | undefined): boolean {
    return proto3.util.equals(ImportDataSuccessUserMetadata, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ExportDataRequest
 */
export class ExportDataRequest extends Message<ExportDataRequest> {
  /**
   * @generated from field: repeated string org_ids = 1;
   */
  orgIds: string[] = [];

  /**
   * @generated from field: repeated string excluded_org_ids = 2;
   */
  excludedOrgIds: string[] = [];

  /**
   * @generated from field: bool with_passwords = 3;
   */
  withPasswords = false;

  /**
   * @generated from field: bool with_otp = 4;
   */
  withOtp = false;

  /**
   * @generated from field: bool response_output = 5;
   */
  responseOutput = false;

  /**
   * @generated from field: zitadel.admin.v1.ExportDataRequest.LocalOutput local_output = 6;
   */
  localOutput?: ExportDataRequest_LocalOutput;

  /**
   * @generated from field: zitadel.admin.v1.ExportDataRequest.S3Output s3_output = 7;
   */
  s3Output?: ExportDataRequest_S3Output;

  /**
   * @generated from field: zitadel.admin.v1.ExportDataRequest.GCSOutput gcs_output = 8;
   */
  gcsOutput?: ExportDataRequest_GCSOutput;

  /**
   * @generated from field: string timeout = 9;
   */
  timeout = "";

  constructor(data?: PartialMessage<ExportDataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ExportDataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "excluded_org_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "with_passwords", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "with_otp", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "response_output", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "local_output", kind: "message", T: ExportDataRequest_LocalOutput },
    { no: 7, name: "s3_output", kind: "message", T: ExportDataRequest_S3Output },
    { no: 8, name: "gcs_output", kind: "message", T: ExportDataRequest_GCSOutput },
    { no: 9, name: "timeout", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportDataRequest {
    return new ExportDataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportDataRequest {
    return new ExportDataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportDataRequest {
    return new ExportDataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ExportDataRequest | PlainMessage<ExportDataRequest> | undefined, b: ExportDataRequest | PlainMessage<ExportDataRequest> | undefined): boolean {
    return proto3.util.equals(ExportDataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ExportDataRequest.LocalOutput
 */
export class ExportDataRequest_LocalOutput extends Message<ExportDataRequest_LocalOutput> {
  /**
   * @generated from field: string path = 1;
   */
  path = "";

  constructor(data?: PartialMessage<ExportDataRequest_LocalOutput>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ExportDataRequest.LocalOutput";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportDataRequest_LocalOutput {
    return new ExportDataRequest_LocalOutput().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportDataRequest_LocalOutput {
    return new ExportDataRequest_LocalOutput().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportDataRequest_LocalOutput {
    return new ExportDataRequest_LocalOutput().fromJsonString(jsonString, options);
  }

  static equals(a: ExportDataRequest_LocalOutput | PlainMessage<ExportDataRequest_LocalOutput> | undefined, b: ExportDataRequest_LocalOutput | PlainMessage<ExportDataRequest_LocalOutput> | undefined): boolean {
    return proto3.util.equals(ExportDataRequest_LocalOutput, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ExportDataRequest.S3Output
 */
export class ExportDataRequest_S3Output extends Message<ExportDataRequest_S3Output> {
  /**
   * @generated from field: string path = 1;
   */
  path = "";

  /**
   * @generated from field: string endpoint = 2;
   */
  endpoint = "";

  /**
   * @generated from field: string access_key_id = 3;
   */
  accessKeyId = "";

  /**
   * @generated from field: string secret_access_key = 4;
   */
  secretAccessKey = "";

  /**
   * @generated from field: bool ssl = 5;
   */
  ssl = false;

  /**
   * @generated from field: string bucket = 6;
   */
  bucket = "";

  constructor(data?: PartialMessage<ExportDataRequest_S3Output>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ExportDataRequest.S3Output";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "access_key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "secret_access_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "ssl", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "bucket", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportDataRequest_S3Output {
    return new ExportDataRequest_S3Output().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportDataRequest_S3Output {
    return new ExportDataRequest_S3Output().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportDataRequest_S3Output {
    return new ExportDataRequest_S3Output().fromJsonString(jsonString, options);
  }

  static equals(a: ExportDataRequest_S3Output | PlainMessage<ExportDataRequest_S3Output> | undefined, b: ExportDataRequest_S3Output | PlainMessage<ExportDataRequest_S3Output> | undefined): boolean {
    return proto3.util.equals(ExportDataRequest_S3Output, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ExportDataRequest.GCSOutput
 */
export class ExportDataRequest_GCSOutput extends Message<ExportDataRequest_GCSOutput> {
  /**
   * @generated from field: string bucket = 1;
   */
  bucket = "";

  /**
   * @generated from field: string serviceaccount_json = 2;
   */
  serviceaccountJson = "";

  /**
   * @generated from field: string path = 3;
   */
  path = "";

  constructor(data?: PartialMessage<ExportDataRequest_GCSOutput>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ExportDataRequest.GCSOutput";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bucket", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "serviceaccount_json", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportDataRequest_GCSOutput {
    return new ExportDataRequest_GCSOutput().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportDataRequest_GCSOutput {
    return new ExportDataRequest_GCSOutput().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportDataRequest_GCSOutput {
    return new ExportDataRequest_GCSOutput().fromJsonString(jsonString, options);
  }

  static equals(a: ExportDataRequest_GCSOutput | PlainMessage<ExportDataRequest_GCSOutput> | undefined, b: ExportDataRequest_GCSOutput | PlainMessage<ExportDataRequest_GCSOutput> | undefined): boolean {
    return proto3.util.equals(ExportDataRequest_GCSOutput, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ExportDataResponse
 */
export class ExportDataResponse extends Message<ExportDataResponse> {
  /**
   * @generated from field: repeated zitadel.admin.v1.DataOrg orgs = 1;
   */
  orgs: DataOrg[] = [];

  constructor(data?: PartialMessage<ExportDataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ExportDataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orgs", kind: "message", T: DataOrg, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportDataResponse {
    return new ExportDataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportDataResponse {
    return new ExportDataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportDataResponse {
    return new ExportDataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ExportDataResponse | PlainMessage<ExportDataResponse> | undefined, b: ExportDataResponse | PlainMessage<ExportDataResponse> | undefined): boolean {
    return proto3.util.equals(ExportDataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListEventsRequest
 */
export class ListEventsRequest extends Message<ListEventsRequest> {
  /**
   * @generated from field: uint64 sequence = 1;
   */
  sequence = protoInt64.zero;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit = 0;

  /**
   * @generated from field: bool asc = 3;
   */
  asc = false;

  /**
   * @generated from field: string editor_user_id = 4;
   */
  editorUserId = "";

  /**
   * @generated from field: repeated string event_types = 5;
   */
  eventTypes: string[] = [];

  /**
   * @generated from field: string aggregate_id = 6;
   */
  aggregateId = "";

  /**
   * @generated from field: repeated string aggregate_types = 7;
   */
  aggregateTypes: string[] = [];

  /**
   * @generated from field: string resource_owner = 8;
   */
  resourceOwner = "";

  /**
   * @generated from field: google.protobuf.Timestamp creation_date = 9 [deprecated = true];
   * @deprecated
   */
  creationDate?: Timestamp;

  /**
   * @generated from oneof zitadel.admin.v1.ListEventsRequest.creation_date_filter
   */
  creationDateFilter: {
    /**
     * @generated from field: zitadel.admin.v1.ListEventsRequest.creation_date_range range = 10;
     */
    value: ListEventsRequest_creation_date_range;
    case: "range";
  } | {
    /**
     * @generated from field: google.protobuf.Timestamp from = 11;
     */
    value: Timestamp;
    case: "from";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ListEventsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListEventsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sequence", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "limit", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "asc", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "editor_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "event_types", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "aggregate_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "aggregate_types", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "resource_owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "creation_date", kind: "message", T: Timestamp },
    { no: 10, name: "range", kind: "message", T: ListEventsRequest_creation_date_range, oneof: "creation_date_filter" },
    { no: 11, name: "from", kind: "message", T: Timestamp, oneof: "creation_date_filter" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEventsRequest {
    return new ListEventsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEventsRequest {
    return new ListEventsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEventsRequest {
    return new ListEventsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListEventsRequest | PlainMessage<ListEventsRequest> | undefined, b: ListEventsRequest | PlainMessage<ListEventsRequest> | undefined): boolean {
    return proto3.util.equals(ListEventsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListEventsRequest.creation_date_range
 */
export class ListEventsRequest_creation_date_range extends Message<ListEventsRequest_creation_date_range> {
  /**
   * @generated from field: google.protobuf.Timestamp since = 1;
   */
  since?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp until = 2;
   */
  until?: Timestamp;

  constructor(data?: PartialMessage<ListEventsRequest_creation_date_range>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListEventsRequest.creation_date_range";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "since", kind: "message", T: Timestamp },
    { no: 2, name: "until", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEventsRequest_creation_date_range {
    return new ListEventsRequest_creation_date_range().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEventsRequest_creation_date_range {
    return new ListEventsRequest_creation_date_range().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEventsRequest_creation_date_range {
    return new ListEventsRequest_creation_date_range().fromJsonString(jsonString, options);
  }

  static equals(a: ListEventsRequest_creation_date_range | PlainMessage<ListEventsRequest_creation_date_range> | undefined, b: ListEventsRequest_creation_date_range | PlainMessage<ListEventsRequest_creation_date_range> | undefined): boolean {
    return proto3.util.equals(ListEventsRequest_creation_date_range, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListEventsResponse
 */
export class ListEventsResponse extends Message<ListEventsResponse> {
  /**
   * @generated from field: repeated zitadel.event.v1.Event events = 1;
   */
  events: Event[] = [];

  constructor(data?: PartialMessage<ListEventsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListEventsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "events", kind: "message", T: Event, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEventsResponse {
    return new ListEventsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEventsResponse {
    return new ListEventsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEventsResponse {
    return new ListEventsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListEventsResponse | PlainMessage<ListEventsResponse> | undefined, b: ListEventsResponse | PlainMessage<ListEventsResponse> | undefined): boolean {
    return proto3.util.equals(ListEventsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListEventTypesRequest
 */
export class ListEventTypesRequest extends Message<ListEventTypesRequest> {
  constructor(data?: PartialMessage<ListEventTypesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListEventTypesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEventTypesRequest {
    return new ListEventTypesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEventTypesRequest {
    return new ListEventTypesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEventTypesRequest {
    return new ListEventTypesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListEventTypesRequest | PlainMessage<ListEventTypesRequest> | undefined, b: ListEventTypesRequest | PlainMessage<ListEventTypesRequest> | undefined): boolean {
    return proto3.util.equals(ListEventTypesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListEventTypesResponse
 */
export class ListEventTypesResponse extends Message<ListEventTypesResponse> {
  /**
   * @generated from field: repeated zitadel.event.v1.EventType event_types = 1;
   */
  eventTypes: EventType[] = [];

  constructor(data?: PartialMessage<ListEventTypesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListEventTypesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "event_types", kind: "message", T: EventType, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEventTypesResponse {
    return new ListEventTypesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEventTypesResponse {
    return new ListEventTypesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEventTypesResponse {
    return new ListEventTypesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListEventTypesResponse | PlainMessage<ListEventTypesResponse> | undefined, b: ListEventTypesResponse | PlainMessage<ListEventTypesResponse> | undefined): boolean {
    return proto3.util.equals(ListEventTypesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListAggregateTypesRequest
 */
export class ListAggregateTypesRequest extends Message<ListAggregateTypesRequest> {
  constructor(data?: PartialMessage<ListAggregateTypesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListAggregateTypesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAggregateTypesRequest {
    return new ListAggregateTypesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAggregateTypesRequest {
    return new ListAggregateTypesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAggregateTypesRequest {
    return new ListAggregateTypesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAggregateTypesRequest | PlainMessage<ListAggregateTypesRequest> | undefined, b: ListAggregateTypesRequest | PlainMessage<ListAggregateTypesRequest> | undefined): boolean {
    return proto3.util.equals(ListAggregateTypesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListAggregateTypesResponse
 */
export class ListAggregateTypesResponse extends Message<ListAggregateTypesResponse> {
  /**
   * @generated from field: repeated zitadel.event.v1.AggregateType aggregate_types = 1;
   */
  aggregateTypes: AggregateType[] = [];

  constructor(data?: PartialMessage<ListAggregateTypesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListAggregateTypesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "aggregate_types", kind: "message", T: AggregateType, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAggregateTypesResponse {
    return new ListAggregateTypesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAggregateTypesResponse {
    return new ListAggregateTypesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAggregateTypesResponse {
    return new ListAggregateTypesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAggregateTypesResponse | PlainMessage<ListAggregateTypesResponse> | undefined, b: ListAggregateTypesResponse | PlainMessage<ListAggregateTypesResponse> | undefined): boolean {
    return proto3.util.equals(ListAggregateTypesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ActivateFeatureLoginDefaultOrgRequest
 */
export class ActivateFeatureLoginDefaultOrgRequest extends Message<ActivateFeatureLoginDefaultOrgRequest> {
  constructor(data?: PartialMessage<ActivateFeatureLoginDefaultOrgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ActivateFeatureLoginDefaultOrgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivateFeatureLoginDefaultOrgRequest {
    return new ActivateFeatureLoginDefaultOrgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivateFeatureLoginDefaultOrgRequest {
    return new ActivateFeatureLoginDefaultOrgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivateFeatureLoginDefaultOrgRequest {
    return new ActivateFeatureLoginDefaultOrgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ActivateFeatureLoginDefaultOrgRequest | PlainMessage<ActivateFeatureLoginDefaultOrgRequest> | undefined, b: ActivateFeatureLoginDefaultOrgRequest | PlainMessage<ActivateFeatureLoginDefaultOrgRequest> | undefined): boolean {
    return proto3.util.equals(ActivateFeatureLoginDefaultOrgRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ActivateFeatureLoginDefaultOrgResponse
 */
export class ActivateFeatureLoginDefaultOrgResponse extends Message<ActivateFeatureLoginDefaultOrgResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ActivateFeatureLoginDefaultOrgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ActivateFeatureLoginDefaultOrgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivateFeatureLoginDefaultOrgResponse {
    return new ActivateFeatureLoginDefaultOrgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivateFeatureLoginDefaultOrgResponse {
    return new ActivateFeatureLoginDefaultOrgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivateFeatureLoginDefaultOrgResponse {
    return new ActivateFeatureLoginDefaultOrgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ActivateFeatureLoginDefaultOrgResponse | PlainMessage<ActivateFeatureLoginDefaultOrgResponse> | undefined, b: ActivateFeatureLoginDefaultOrgResponse | PlainMessage<ActivateFeatureLoginDefaultOrgResponse> | undefined): boolean {
    return proto3.util.equals(ActivateFeatureLoginDefaultOrgResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListMilestonesRequest
 */
export class ListMilestonesRequest extends Message<ListMilestonesRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.milestone.v1.MilestoneFieldName sorting_column = 2;
   */
  sortingColumn = MilestoneFieldName.UNSPECIFIED;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.milestone.v1.MilestoneQuery queries = 3;
   */
  queries: MilestoneQuery[] = [];

  constructor(data?: PartialMessage<ListMilestonesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListMilestonesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "sorting_column", kind: "enum", T: proto3.getEnumType(MilestoneFieldName) },
    { no: 3, name: "queries", kind: "message", T: MilestoneQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMilestonesRequest {
    return new ListMilestonesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMilestonesRequest {
    return new ListMilestonesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMilestonesRequest {
    return new ListMilestonesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMilestonesRequest | PlainMessage<ListMilestonesRequest> | undefined, b: ListMilestonesRequest | PlainMessage<ListMilestonesRequest> | undefined): boolean {
    return proto3.util.equals(ListMilestonesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.ListMilestonesResponse
 */
export class ListMilestonesResponse extends Message<ListMilestonesResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.milestone.v1.Milestone result = 2;
   */
  result: Milestone[] = [];

  constructor(data?: PartialMessage<ListMilestonesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.ListMilestonesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Milestone, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMilestonesResponse {
    return new ListMilestonesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMilestonesResponse {
    return new ListMilestonesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMilestonesResponse {
    return new ListMilestonesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMilestonesResponse | PlainMessage<ListMilestonesResponse> | undefined, b: ListMilestonesResponse | PlainMessage<ListMilestonesResponse> | undefined): boolean {
    return proto3.util.equals(ListMilestonesResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetRestrictionsRequest
 */
export class SetRestrictionsRequest extends Message<SetRestrictionsRequest> {
  /**
   * @generated from field: optional bool disallow_public_org_registration = 1;
   */
  disallowPublicOrgRegistration?: boolean;

  /**
   * @generated from field: optional zitadel.admin.v1.SelectLanguages allowed_languages = 2;
   */
  allowedLanguages?: SelectLanguages;

  constructor(data?: PartialMessage<SetRestrictionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetRestrictionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "disallow_public_org_registration", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "allowed_languages", kind: "message", T: SelectLanguages, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetRestrictionsRequest {
    return new SetRestrictionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetRestrictionsRequest {
    return new SetRestrictionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetRestrictionsRequest {
    return new SetRestrictionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetRestrictionsRequest | PlainMessage<SetRestrictionsRequest> | undefined, b: SetRestrictionsRequest | PlainMessage<SetRestrictionsRequest> | undefined): boolean {
    return proto3.util.equals(SetRestrictionsRequest, a, b);
  }
}

/**
 * We have to wrap the languages list into a message so we can serialize empty lists.
 *
 * @generated from message zitadel.admin.v1.SelectLanguages
 */
export class SelectLanguages extends Message<SelectLanguages> {
  /**
   * @generated from field: repeated string list = 1;
   */
  list: string[] = [];

  constructor(data?: PartialMessage<SelectLanguages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SelectLanguages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SelectLanguages {
    return new SelectLanguages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SelectLanguages {
    return new SelectLanguages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SelectLanguages {
    return new SelectLanguages().fromJsonString(jsonString, options);
  }

  static equals(a: SelectLanguages | PlainMessage<SelectLanguages> | undefined, b: SelectLanguages | PlainMessage<SelectLanguages> | undefined): boolean {
    return proto3.util.equals(SelectLanguages, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.SetRestrictionsResponse
 */
export class SetRestrictionsResponse extends Message<SetRestrictionsResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetRestrictionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.SetRestrictionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetRestrictionsResponse {
    return new SetRestrictionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetRestrictionsResponse {
    return new SetRestrictionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetRestrictionsResponse {
    return new SetRestrictionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetRestrictionsResponse | PlainMessage<SetRestrictionsResponse> | undefined, b: SetRestrictionsResponse | PlainMessage<SetRestrictionsResponse> | undefined): boolean {
    return proto3.util.equals(SetRestrictionsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetRestrictionsRequest
 */
export class GetRestrictionsRequest extends Message<GetRestrictionsRequest> {
  constructor(data?: PartialMessage<GetRestrictionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetRestrictionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRestrictionsRequest {
    return new GetRestrictionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRestrictionsRequest {
    return new GetRestrictionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRestrictionsRequest {
    return new GetRestrictionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetRestrictionsRequest | PlainMessage<GetRestrictionsRequest> | undefined, b: GetRestrictionsRequest | PlainMessage<GetRestrictionsRequest> | undefined): boolean {
    return proto3.util.equals(GetRestrictionsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.admin.v1.GetRestrictionsResponse
 */
export class GetRestrictionsResponse extends Message<GetRestrictionsResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: bool disallow_public_org_registration = 2;
   */
  disallowPublicOrgRegistration = false;

  /**
   * @generated from field: repeated string allowed_languages = 3;
   */
  allowedLanguages: string[] = [];

  constructor(data?: PartialMessage<GetRestrictionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.admin.v1.GetRestrictionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "disallow_public_org_registration", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "allowed_languages", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRestrictionsResponse {
    return new GetRestrictionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRestrictionsResponse {
    return new GetRestrictionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRestrictionsResponse {
    return new GetRestrictionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetRestrictionsResponse | PlainMessage<GetRestrictionsResponse> | undefined, b: GetRestrictionsResponse | PlainMessage<GetRestrictionsResponse> | undefined): boolean {
    return proto3.util.equals(GetRestrictionsResponse, a, b);
  }
}

