// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/user/v2beta/password.proto (package zitadel.user.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum zitadel.user.v2beta.NotificationType
 */
export enum NotificationType {
  /**
   * @generated from enum value: NOTIFICATION_TYPE_Unspecified = 0;
   */
  Unspecified = 0,

  /**
   * @generated from enum value: NOTIFICATION_TYPE_Email = 1;
   */
  Email = 1,

  /**
   * @generated from enum value: NOTIFICATION_TYPE_SMS = 2;
   */
  SMS = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(NotificationType)
proto3.util.setEnumType(NotificationType, "zitadel.user.v2beta.NotificationType", [
  { no: 0, name: "NOTIFICATION_TYPE_Unspecified" },
  { no: 1, name: "NOTIFICATION_TYPE_Email" },
  { no: 2, name: "NOTIFICATION_TYPE_SMS" },
]);

/**
 * @generated from message zitadel.user.v2beta.Password
 */
export class Password extends Message<Password> {
  /**
   * @generated from field: string password = 1;
   */
  password = "";

  /**
   * @generated from field: bool change_required = 2;
   */
  changeRequired = false;

  constructor(data?: PartialMessage<Password>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.Password";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "change_required", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Password {
    return new Password().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Password {
    return new Password().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Password {
    return new Password().fromJsonString(jsonString, options);
  }

  static equals(a: Password | PlainMessage<Password> | undefined, b: Password | PlainMessage<Password> | undefined): boolean {
    return proto3.util.equals(Password, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.HashedPassword
 */
export class HashedPassword extends Message<HashedPassword> {
  /**
   * @generated from field: string hash = 1;
   */
  hash = "";

  /**
   * @generated from field: bool change_required = 2;
   */
  changeRequired = false;

  constructor(data?: PartialMessage<HashedPassword>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.HashedPassword";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "change_required", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HashedPassword {
    return new HashedPassword().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HashedPassword {
    return new HashedPassword().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HashedPassword {
    return new HashedPassword().fromJsonString(jsonString, options);
  }

  static equals(a: HashedPassword | PlainMessage<HashedPassword> | undefined, b: HashedPassword | PlainMessage<HashedPassword> | undefined): boolean {
    return proto3.util.equals(HashedPassword, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.SendPasswordResetLink
 */
export class SendPasswordResetLink extends Message<SendPasswordResetLink> {
  /**
   * @generated from field: zitadel.user.v2beta.NotificationType notification_type = 1;
   */
  notificationType = NotificationType.Unspecified;

  /**
   * @generated from field: optional string url_template = 2;
   */
  urlTemplate?: string;

  constructor(data?: PartialMessage<SendPasswordResetLink>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.SendPasswordResetLink";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "notification_type", kind: "enum", T: proto3.getEnumType(NotificationType) },
    { no: 2, name: "url_template", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendPasswordResetLink {
    return new SendPasswordResetLink().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendPasswordResetLink {
    return new SendPasswordResetLink().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendPasswordResetLink {
    return new SendPasswordResetLink().fromJsonString(jsonString, options);
  }

  static equals(a: SendPasswordResetLink | PlainMessage<SendPasswordResetLink> | undefined, b: SendPasswordResetLink | PlainMessage<SendPasswordResetLink> | undefined): boolean {
    return proto3.util.equals(SendPasswordResetLink, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.ReturnPasswordResetCode
 */
export class ReturnPasswordResetCode extends Message<ReturnPasswordResetCode> {
  constructor(data?: PartialMessage<ReturnPasswordResetCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.ReturnPasswordResetCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReturnPasswordResetCode {
    return new ReturnPasswordResetCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReturnPasswordResetCode {
    return new ReturnPasswordResetCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReturnPasswordResetCode {
    return new ReturnPasswordResetCode().fromJsonString(jsonString, options);
  }

  static equals(a: ReturnPasswordResetCode | PlainMessage<ReturnPasswordResetCode> | undefined, b: ReturnPasswordResetCode | PlainMessage<ReturnPasswordResetCode> | undefined): boolean {
    return proto3.util.equals(ReturnPasswordResetCode, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.SetPassword
 */
export class SetPassword extends Message<SetPassword> {
  /**
   * @generated from oneof zitadel.user.v2beta.SetPassword.password_type
   */
  passwordType: {
    /**
     * @generated from field: zitadel.user.v2beta.Password password = 1;
     */
    value: Password;
    case: "password";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.HashedPassword hashed_password = 2;
     */
    value: HashedPassword;
    case: "hashedPassword";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from oneof zitadel.user.v2beta.SetPassword.verification
   */
  verification: {
    /**
     * @generated from field: string current_password = 3;
     */
    value: string;
    case: "currentPassword";
  } | {
    /**
     * @generated from field: string verification_code = 4;
     */
    value: string;
    case: "verificationCode";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SetPassword>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.SetPassword";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "password", kind: "message", T: Password, oneof: "password_type" },
    { no: 2, name: "hashed_password", kind: "message", T: HashedPassword, oneof: "password_type" },
    { no: 3, name: "current_password", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "verification" },
    { no: 4, name: "verification_code", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "verification" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPassword {
    return new SetPassword().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPassword {
    return new SetPassword().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPassword {
    return new SetPassword().fromJsonString(jsonString, options);
  }

  static equals(a: SetPassword | PlainMessage<SetPassword> | undefined, b: SetPassword | PlainMessage<SetPassword> | undefined): boolean {
    return proto3.util.equals(SetPassword, a, b);
  }
}

