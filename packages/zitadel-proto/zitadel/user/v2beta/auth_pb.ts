// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/user/v2beta/auth.proto (package zitadel.user.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum zitadel.user.v2beta.PasskeyAuthenticator
 */
export enum PasskeyAuthenticator {
  /**
   * @generated from enum value: PASSKEY_AUTHENTICATOR_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PASSKEY_AUTHENTICATOR_PLATFORM = 1;
   */
  PLATFORM = 1,

  /**
   * @generated from enum value: PASSKEY_AUTHENTICATOR_CROSS_PLATFORM = 2;
   */
  CROSS_PLATFORM = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(PasskeyAuthenticator)
proto3.util.setEnumType(PasskeyAuthenticator, "zitadel.user.v2beta.PasskeyAuthenticator", [
  { no: 0, name: "PASSKEY_AUTHENTICATOR_UNSPECIFIED" },
  { no: 1, name: "PASSKEY_AUTHENTICATOR_PLATFORM" },
  { no: 2, name: "PASSKEY_AUTHENTICATOR_CROSS_PLATFORM" },
]);

/**
 * @generated from message zitadel.user.v2beta.SendPasskeyRegistrationLink
 */
export class SendPasskeyRegistrationLink extends Message<SendPasskeyRegistrationLink> {
  /**
   * @generated from field: optional string url_template = 1;
   */
  urlTemplate?: string;

  constructor(data?: PartialMessage<SendPasskeyRegistrationLink>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.SendPasskeyRegistrationLink";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "url_template", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendPasskeyRegistrationLink {
    return new SendPasskeyRegistrationLink().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendPasskeyRegistrationLink {
    return new SendPasskeyRegistrationLink().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendPasskeyRegistrationLink {
    return new SendPasskeyRegistrationLink().fromJsonString(jsonString, options);
  }

  static equals(a: SendPasskeyRegistrationLink | PlainMessage<SendPasskeyRegistrationLink> | undefined, b: SendPasskeyRegistrationLink | PlainMessage<SendPasskeyRegistrationLink> | undefined): boolean {
    return proto3.util.equals(SendPasskeyRegistrationLink, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.ReturnPasskeyRegistrationCode
 */
export class ReturnPasskeyRegistrationCode extends Message<ReturnPasskeyRegistrationCode> {
  constructor(data?: PartialMessage<ReturnPasskeyRegistrationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.ReturnPasskeyRegistrationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReturnPasskeyRegistrationCode {
    return new ReturnPasskeyRegistrationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReturnPasskeyRegistrationCode {
    return new ReturnPasskeyRegistrationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReturnPasskeyRegistrationCode {
    return new ReturnPasskeyRegistrationCode().fromJsonString(jsonString, options);
  }

  static equals(a: ReturnPasskeyRegistrationCode | PlainMessage<ReturnPasskeyRegistrationCode> | undefined, b: ReturnPasskeyRegistrationCode | PlainMessage<ReturnPasskeyRegistrationCode> | undefined): boolean {
    return proto3.util.equals(ReturnPasskeyRegistrationCode, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.PasskeyRegistrationCode
 */
export class PasskeyRegistrationCode extends Message<PasskeyRegistrationCode> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string code = 2;
   */
  code = "";

  constructor(data?: PartialMessage<PasskeyRegistrationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.PasskeyRegistrationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PasskeyRegistrationCode {
    return new PasskeyRegistrationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PasskeyRegistrationCode {
    return new PasskeyRegistrationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PasskeyRegistrationCode {
    return new PasskeyRegistrationCode().fromJsonString(jsonString, options);
  }

  static equals(a: PasskeyRegistrationCode | PlainMessage<PasskeyRegistrationCode> | undefined, b: PasskeyRegistrationCode | PlainMessage<PasskeyRegistrationCode> | undefined): boolean {
    return proto3.util.equals(PasskeyRegistrationCode, a, b);
  }
}

