// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/settings.proto (package zitadel.settings.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Duration, Message, proto3 } from "@bufbuild/protobuf";
import { ObjectDetails } from "./object_pb.js";

/**
 * @generated from enum zitadel.settings.v1.SMTPConfigState
 */
export enum SMTPConfigState {
  /**
   * @generated from enum value: SMTP_CONFIG_STATE_UNSPECIFIED = 0;
   */
  SMTP_CONFIG_STATE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SMTP_CONFIG_ACTIVE = 1;
   */
  SMTP_CONFIG_ACTIVE = 1,

  /**
   * @generated from enum value: SMTP_CONFIG_INACTIVE = 2;
   */
  SMTP_CONFIG_INACTIVE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SMTPConfigState)
proto3.util.setEnumType(SMTPConfigState, "zitadel.settings.v1.SMTPConfigState", [
  { no: 0, name: "SMTP_CONFIG_STATE_UNSPECIFIED" },
  { no: 1, name: "SMTP_CONFIG_ACTIVE" },
  { no: 2, name: "SMTP_CONFIG_INACTIVE" },
]);

/**
 * @generated from enum zitadel.settings.v1.SecretGeneratorType
 */
export enum SecretGeneratorType {
  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_INIT_CODE = 1;
   */
  INIT_CODE = 1,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_VERIFY_EMAIL_CODE = 2;
   */
  VERIFY_EMAIL_CODE = 2,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_VERIFY_PHONE_CODE = 3;
   */
  VERIFY_PHONE_CODE = 3,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_PASSWORD_RESET_CODE = 4;
   */
  PASSWORD_RESET_CODE = 4,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_PASSWORDLESS_INIT_CODE = 5;
   */
  PASSWORDLESS_INIT_CODE = 5,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_APP_SECRET = 6;
   */
  APP_SECRET = 6,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_OTP_SMS = 7;
   */
  OTP_SMS = 7,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_OTP_EMAIL = 8;
   */
  OTP_EMAIL = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(SecretGeneratorType)
proto3.util.setEnumType(SecretGeneratorType, "zitadel.settings.v1.SecretGeneratorType", [
  { no: 0, name: "SECRET_GENERATOR_TYPE_UNSPECIFIED" },
  { no: 1, name: "SECRET_GENERATOR_TYPE_INIT_CODE" },
  { no: 2, name: "SECRET_GENERATOR_TYPE_VERIFY_EMAIL_CODE" },
  { no: 3, name: "SECRET_GENERATOR_TYPE_VERIFY_PHONE_CODE" },
  { no: 4, name: "SECRET_GENERATOR_TYPE_PASSWORD_RESET_CODE" },
  { no: 5, name: "SECRET_GENERATOR_TYPE_PASSWORDLESS_INIT_CODE" },
  { no: 6, name: "SECRET_GENERATOR_TYPE_APP_SECRET" },
  { no: 7, name: "SECRET_GENERATOR_TYPE_OTP_SMS" },
  { no: 8, name: "SECRET_GENERATOR_TYPE_OTP_EMAIL" },
]);

/**
 * @generated from enum zitadel.settings.v1.SMSProviderConfigState
 */
export enum SMSProviderConfigState {
  /**
   * @generated from enum value: SMS_PROVIDER_CONFIG_STATE_UNSPECIFIED = 0;
   */
  SMS_PROVIDER_CONFIG_STATE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SMS_PROVIDER_CONFIG_ACTIVE = 1;
   */
  SMS_PROVIDER_CONFIG_ACTIVE = 1,

  /**
   * @generated from enum value: SMS_PROVIDER_CONFIG_INACTIVE = 2;
   */
  SMS_PROVIDER_CONFIG_INACTIVE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SMSProviderConfigState)
proto3.util.setEnumType(SMSProviderConfigState, "zitadel.settings.v1.SMSProviderConfigState", [
  { no: 0, name: "SMS_PROVIDER_CONFIG_STATE_UNSPECIFIED" },
  { no: 1, name: "SMS_PROVIDER_CONFIG_ACTIVE" },
  { no: 2, name: "SMS_PROVIDER_CONFIG_INACTIVE" },
]);

/**
 * @generated from message zitadel.settings.v1.SecretGenerator
 */
export class SecretGenerator extends Message<SecretGenerator> {
  /**
   * @generated from field: zitadel.settings.v1.SecretGeneratorType generator_type = 1;
   */
  generatorType = SecretGeneratorType.UNSPECIFIED;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: uint32 length = 3;
   */
  length = 0;

  /**
   * @generated from field: google.protobuf.Duration expiry = 4;
   */
  expiry?: Duration;

  /**
   * @generated from field: bool include_lower_letters = 5;
   */
  includeLowerLetters = false;

  /**
   * @generated from field: bool include_upper_letters = 6;
   */
  includeUpperLetters = false;

  /**
   * @generated from field: bool include_digits = 7;
   */
  includeDigits = false;

  /**
   * @generated from field: bool include_symbols = 8;
   */
  includeSymbols = false;

  constructor(data?: PartialMessage<SecretGenerator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v1.SecretGenerator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "generator_type", kind: "enum", T: proto3.getEnumType(SecretGeneratorType) },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
    { no: 3, name: "length", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "expiry", kind: "message", T: Duration },
    { no: 5, name: "include_lower_letters", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "include_upper_letters", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "include_digits", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "include_symbols", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SecretGenerator {
    return new SecretGenerator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SecretGenerator {
    return new SecretGenerator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SecretGenerator {
    return new SecretGenerator().fromJsonString(jsonString, options);
  }

  static equals(a: SecretGenerator | PlainMessage<SecretGenerator> | undefined, b: SecretGenerator | PlainMessage<SecretGenerator> | undefined): boolean {
    return proto3.util.equals(SecretGenerator, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v1.SecretGeneratorQuery
 */
export class SecretGeneratorQuery extends Message<SecretGeneratorQuery> {
  /**
   * @generated from oneof zitadel.settings.v1.SecretGeneratorQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.settings.v1.SecretGeneratorTypeQuery type_query = 1;
     */
    value: SecretGeneratorTypeQuery;
    case: "typeQuery";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SecretGeneratorQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v1.SecretGeneratorQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type_query", kind: "message", T: SecretGeneratorTypeQuery, oneof: "query" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SecretGeneratorQuery {
    return new SecretGeneratorQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SecretGeneratorQuery {
    return new SecretGeneratorQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SecretGeneratorQuery {
    return new SecretGeneratorQuery().fromJsonString(jsonString, options);
  }

  static equals(a: SecretGeneratorQuery | PlainMessage<SecretGeneratorQuery> | undefined, b: SecretGeneratorQuery | PlainMessage<SecretGeneratorQuery> | undefined): boolean {
    return proto3.util.equals(SecretGeneratorQuery, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v1.SecretGeneratorTypeQuery
 */
export class SecretGeneratorTypeQuery extends Message<SecretGeneratorTypeQuery> {
  /**
   * @generated from field: zitadel.settings.v1.SecretGeneratorType generator_type = 1;
   */
  generatorType = SecretGeneratorType.UNSPECIFIED;

  constructor(data?: PartialMessage<SecretGeneratorTypeQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v1.SecretGeneratorTypeQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "generator_type", kind: "enum", T: proto3.getEnumType(SecretGeneratorType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SecretGeneratorTypeQuery {
    return new SecretGeneratorTypeQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SecretGeneratorTypeQuery {
    return new SecretGeneratorTypeQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SecretGeneratorTypeQuery {
    return new SecretGeneratorTypeQuery().fromJsonString(jsonString, options);
  }

  static equals(a: SecretGeneratorTypeQuery | PlainMessage<SecretGeneratorTypeQuery> | undefined, b: SecretGeneratorTypeQuery | PlainMessage<SecretGeneratorTypeQuery> | undefined): boolean {
    return proto3.util.equals(SecretGeneratorTypeQuery, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v1.SMTPConfig
 */
export class SMTPConfig extends Message<SMTPConfig> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string sender_address = 2;
   */
  senderAddress = "";

  /**
   * @generated from field: string sender_name = 3;
   */
  senderName = "";

  /**
   * @generated from field: bool tls = 4;
   */
  tls = false;

  /**
   * @generated from field: string host = 5;
   */
  host = "";

  /**
   * @generated from field: string user = 6;
   */
  user = "";

  /**
   * @generated from field: string reply_to_address = 7;
   */
  replyToAddress = "";

  /**
   * @generated from field: zitadel.settings.v1.SMTPConfigState state = 8;
   */
  state = SMTPConfigState.SMTP_CONFIG_STATE_UNSPECIFIED;

  /**
   * @generated from field: string description = 9;
   */
  description = "";

  /**
   * @generated from field: string id = 10;
   */
  id = "";

  constructor(data?: PartialMessage<SMTPConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v1.SMTPConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "sender_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "sender_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "tls", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "host", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "reply_to_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "state", kind: "enum", T: proto3.getEnumType(SMTPConfigState) },
    { no: 9, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SMTPConfig {
    return new SMTPConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SMTPConfig {
    return new SMTPConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SMTPConfig {
    return new SMTPConfig().fromJsonString(jsonString, options);
  }

  static equals(a: SMTPConfig | PlainMessage<SMTPConfig> | undefined, b: SMTPConfig | PlainMessage<SMTPConfig> | undefined): boolean {
    return proto3.util.equals(SMTPConfig, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v1.SMSProvider
 */
export class SMSProvider extends Message<SMSProvider> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  /**
   * @generated from field: zitadel.settings.v1.SMSProviderConfigState state = 3;
   */
  state = SMSProviderConfigState.SMS_PROVIDER_CONFIG_STATE_UNSPECIFIED;

  /**
   * @generated from oneof zitadel.settings.v1.SMSProvider.config
   */
  config: {
    /**
     * @generated from field: zitadel.settings.v1.TwilioConfig twilio = 4;
     */
    value: TwilioConfig;
    case: "twilio";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SMSProvider>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v1.SMSProvider";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "state", kind: "enum", T: proto3.getEnumType(SMSProviderConfigState) },
    { no: 4, name: "twilio", kind: "message", T: TwilioConfig, oneof: "config" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SMSProvider {
    return new SMSProvider().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SMSProvider {
    return new SMSProvider().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SMSProvider {
    return new SMSProvider().fromJsonString(jsonString, options);
  }

  static equals(a: SMSProvider | PlainMessage<SMSProvider> | undefined, b: SMSProvider | PlainMessage<SMSProvider> | undefined): boolean {
    return proto3.util.equals(SMSProvider, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v1.TwilioConfig
 */
export class TwilioConfig extends Message<TwilioConfig> {
  /**
   * @generated from field: string sid = 1;
   */
  sid = "";

  /**
   * @generated from field: string sender_number = 2;
   */
  senderNumber = "";

  constructor(data?: PartialMessage<TwilioConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v1.TwilioConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sender_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TwilioConfig {
    return new TwilioConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TwilioConfig {
    return new TwilioConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TwilioConfig {
    return new TwilioConfig().fromJsonString(jsonString, options);
  }

  static equals(a: TwilioConfig | PlainMessage<TwilioConfig> | undefined, b: TwilioConfig | PlainMessage<TwilioConfig> | undefined): boolean {
    return proto3.util.equals(TwilioConfig, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v1.DebugNotificationProvider
 */
export class DebugNotificationProvider extends Message<DebugNotificationProvider> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: bool compact = 2;
   */
  compact = false;

  constructor(data?: PartialMessage<DebugNotificationProvider>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v1.DebugNotificationProvider";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "compact", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DebugNotificationProvider {
    return new DebugNotificationProvider().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DebugNotificationProvider {
    return new DebugNotificationProvider().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DebugNotificationProvider {
    return new DebugNotificationProvider().fromJsonString(jsonString, options);
  }

  static equals(a: DebugNotificationProvider | PlainMessage<DebugNotificationProvider> | undefined, b: DebugNotificationProvider | PlainMessage<DebugNotificationProvider> | undefined): boolean {
    return proto3.util.equals(DebugNotificationProvider, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v1.OIDCSettings
 */
export class OIDCSettings extends Message<OIDCSettings> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: google.protobuf.Duration access_token_lifetime = 2;
   */
  accessTokenLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration id_token_lifetime = 3;
   */
  idTokenLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration refresh_token_idle_expiration = 4;
   */
  refreshTokenIdleExpiration?: Duration;

  /**
   * @generated from field: google.protobuf.Duration refresh_token_expiration = 5;
   */
  refreshTokenExpiration?: Duration;

  constructor(data?: PartialMessage<OIDCSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v1.OIDCSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "access_token_lifetime", kind: "message", T: Duration },
    { no: 3, name: "id_token_lifetime", kind: "message", T: Duration },
    { no: 4, name: "refresh_token_idle_expiration", kind: "message", T: Duration },
    { no: 5, name: "refresh_token_expiration", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OIDCSettings {
    return new OIDCSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OIDCSettings {
    return new OIDCSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OIDCSettings {
    return new OIDCSettings().fromJsonString(jsonString, options);
  }

  static equals(a: OIDCSettings | PlainMessage<OIDCSettings> | undefined, b: OIDCSettings | PlainMessage<OIDCSettings> | undefined): boolean {
    return proto3.util.equals(OIDCSettings, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v1.SecurityPolicy
 */
export class SecurityPolicy extends Message<SecurityPolicy> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * states if iframe embedding is enabled or disabled
   *
   * @generated from field: bool enable_iframe_embedding = 2;
   */
  enableIframeEmbedding = false;

  /**
   * origins allowed loading ZITADEL in an iframe if enable_iframe_embedding is true
   *
   * @generated from field: repeated string allowed_origins = 3;
   */
  allowedOrigins: string[] = [];

  /**
   * allows users to impersonate other users. The impersonator needs the appropriate `*_IMPERSONATOR` roles assigned as well"
   *
   * @generated from field: bool enable_impersonation = 4;
   */
  enableImpersonation = false;

  constructor(data?: PartialMessage<SecurityPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v1.SecurityPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "enable_iframe_embedding", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "allowed_origins", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "enable_impersonation", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SecurityPolicy {
    return new SecurityPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SecurityPolicy {
    return new SecurityPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SecurityPolicy {
    return new SecurityPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: SecurityPolicy | PlainMessage<SecurityPolicy> | undefined, b: SecurityPolicy | PlainMessage<SecurityPolicy> | undefined): boolean {
    return proto3.util.equals(SecurityPolicy, a, b);
  }
}

