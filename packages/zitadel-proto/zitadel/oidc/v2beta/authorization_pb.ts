// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/oidc/v2beta/authorization.proto (package zitadel.oidc.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Duration, Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum zitadel.oidc.v2beta.Prompt
 */
export enum Prompt {
  /**
   * @generated from enum value: PROMPT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PROMPT_NONE = 1;
   */
  NONE = 1,

  /**
   * @generated from enum value: PROMPT_LOGIN = 2;
   */
  LOGIN = 2,

  /**
   * @generated from enum value: PROMPT_CONSENT = 3;
   */
  CONSENT = 3,

  /**
   * @generated from enum value: PROMPT_SELECT_ACCOUNT = 4;
   */
  SELECT_ACCOUNT = 4,

  /**
   * @generated from enum value: PROMPT_CREATE = 5;
   */
  CREATE = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(Prompt)
proto3.util.setEnumType(Prompt, "zitadel.oidc.v2beta.Prompt", [
  { no: 0, name: "PROMPT_UNSPECIFIED" },
  { no: 1, name: "PROMPT_NONE" },
  { no: 2, name: "PROMPT_LOGIN" },
  { no: 3, name: "PROMPT_CONSENT" },
  { no: 4, name: "PROMPT_SELECT_ACCOUNT" },
  { no: 5, name: "PROMPT_CREATE" },
]);

/**
 * @generated from enum zitadel.oidc.v2beta.ErrorReason
 */
export enum ErrorReason {
  /**
   * @generated from enum value: ERROR_REASON_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Error states from https://datatracker.ietf.org/doc/html/rfc6749#section-4.2.2.1
   *
   * @generated from enum value: ERROR_REASON_INVALID_REQUEST = 1;
   */
  INVALID_REQUEST = 1,

  /**
   * @generated from enum value: ERROR_REASON_UNAUTHORIZED_CLIENT = 2;
   */
  UNAUTHORIZED_CLIENT = 2,

  /**
   * @generated from enum value: ERROR_REASON_ACCESS_DENIED = 3;
   */
  ACCESS_DENIED = 3,

  /**
   * @generated from enum value: ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE = 4;
   */
  UNSUPPORTED_RESPONSE_TYPE = 4,

  /**
   * @generated from enum value: ERROR_REASON_INVALID_SCOPE = 5;
   */
  INVALID_SCOPE = 5,

  /**
   * @generated from enum value: ERROR_REASON_SERVER_ERROR = 6;
   */
  SERVER_ERROR = 6,

  /**
   * @generated from enum value: ERROR_REASON_TEMPORARY_UNAVAILABLE = 7;
   */
  TEMPORARY_UNAVAILABLE = 7,

  /**
   * Error states from https://openid.net/specs/openid-connect-core-1_0.html#AuthError
   *
   * @generated from enum value: ERROR_REASON_INTERACTION_REQUIRED = 8;
   */
  INTERACTION_REQUIRED = 8,

  /**
   * @generated from enum value: ERROR_REASON_LOGIN_REQUIRED = 9;
   */
  LOGIN_REQUIRED = 9,

  /**
   * @generated from enum value: ERROR_REASON_ACCOUNT_SELECTION_REQUIRED = 10;
   */
  ACCOUNT_SELECTION_REQUIRED = 10,

  /**
   * @generated from enum value: ERROR_REASON_CONSENT_REQUIRED = 11;
   */
  CONSENT_REQUIRED = 11,

  /**
   * @generated from enum value: ERROR_REASON_INVALID_REQUEST_URI = 12;
   */
  INVALID_REQUEST_URI = 12,

  /**
   * @generated from enum value: ERROR_REASON_INVALID_REQUEST_OBJECT = 13;
   */
  INVALID_REQUEST_OBJECT = 13,

  /**
   * @generated from enum value: ERROR_REASON_REQUEST_NOT_SUPPORTED = 14;
   */
  REQUEST_NOT_SUPPORTED = 14,

  /**
   * @generated from enum value: ERROR_REASON_REQUEST_URI_NOT_SUPPORTED = 15;
   */
  REQUEST_URI_NOT_SUPPORTED = 15,

  /**
   * @generated from enum value: ERROR_REASON_REGISTRATION_NOT_SUPPORTED = 16;
   */
  REGISTRATION_NOT_SUPPORTED = 16,
}
// Retrieve enum metadata with: proto3.getEnumType(ErrorReason)
proto3.util.setEnumType(ErrorReason, "zitadel.oidc.v2beta.ErrorReason", [
  { no: 0, name: "ERROR_REASON_UNSPECIFIED" },
  { no: 1, name: "ERROR_REASON_INVALID_REQUEST" },
  { no: 2, name: "ERROR_REASON_UNAUTHORIZED_CLIENT" },
  { no: 3, name: "ERROR_REASON_ACCESS_DENIED" },
  { no: 4, name: "ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE" },
  { no: 5, name: "ERROR_REASON_INVALID_SCOPE" },
  { no: 6, name: "ERROR_REASON_SERVER_ERROR" },
  { no: 7, name: "ERROR_REASON_TEMPORARY_UNAVAILABLE" },
  { no: 8, name: "ERROR_REASON_INTERACTION_REQUIRED" },
  { no: 9, name: "ERROR_REASON_LOGIN_REQUIRED" },
  { no: 10, name: "ERROR_REASON_ACCOUNT_SELECTION_REQUIRED" },
  { no: 11, name: "ERROR_REASON_CONSENT_REQUIRED" },
  { no: 12, name: "ERROR_REASON_INVALID_REQUEST_URI" },
  { no: 13, name: "ERROR_REASON_INVALID_REQUEST_OBJECT" },
  { no: 14, name: "ERROR_REASON_REQUEST_NOT_SUPPORTED" },
  { no: 15, name: "ERROR_REASON_REQUEST_URI_NOT_SUPPORTED" },
  { no: 16, name: "ERROR_REASON_REGISTRATION_NOT_SUPPORTED" },
]);

/**
 * @generated from message zitadel.oidc.v2beta.AuthRequest
 */
export class AuthRequest extends Message<AuthRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: google.protobuf.Timestamp creation_date = 2;
   */
  creationDate?: Timestamp;

  /**
   * @generated from field: string client_id = 3;
   */
  clientId = "";

  /**
   * @generated from field: repeated string scope = 4;
   */
  scope: string[] = [];

  /**
   * @generated from field: string redirect_uri = 5;
   */
  redirectUri = "";

  /**
   * @generated from field: repeated zitadel.oidc.v2beta.Prompt prompt = 6;
   */
  prompt: Prompt[] = [];

  /**
   * @generated from field: repeated string ui_locales = 7;
   */
  uiLocales: string[] = [];

  /**
   * @generated from field: optional string login_hint = 8;
   */
  loginHint?: string;

  /**
   * @generated from field: optional google.protobuf.Duration max_age = 9;
   */
  maxAge?: Duration;

  /**
   * @generated from field: optional string hint_user_id = 10;
   */
  hintUserId?: string;

  constructor(data?: PartialMessage<AuthRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.oidc.v2beta.AuthRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "creation_date", kind: "message", T: Timestamp },
    { no: 3, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "prompt", kind: "enum", T: proto3.getEnumType(Prompt), repeated: true },
    { no: 7, name: "ui_locales", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "login_hint", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "max_age", kind: "message", T: Duration, opt: true },
    { no: 10, name: "hint_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthRequest {
    return new AuthRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthRequest {
    return new AuthRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthRequest {
    return new AuthRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AuthRequest | PlainMessage<AuthRequest> | undefined, b: AuthRequest | PlainMessage<AuthRequest> | undefined): boolean {
    return proto3.util.equals(AuthRequest, a, b);
  }
}

/**
 * @generated from message zitadel.oidc.v2beta.AuthorizationError
 */
export class AuthorizationError extends Message<AuthorizationError> {
  /**
   * @generated from field: zitadel.oidc.v2beta.ErrorReason error = 1;
   */
  error = ErrorReason.UNSPECIFIED;

  /**
   * @generated from field: optional string error_description = 2;
   */
  errorDescription?: string;

  /**
   * @generated from field: optional string error_uri = 3;
   */
  errorUri?: string;

  constructor(data?: PartialMessage<AuthorizationError>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.oidc.v2beta.AuthorizationError";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "error", kind: "enum", T: proto3.getEnumType(ErrorReason) },
    { no: 2, name: "error_description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "error_uri", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthorizationError {
    return new AuthorizationError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthorizationError {
    return new AuthorizationError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthorizationError {
    return new AuthorizationError().fromJsonString(jsonString, options);
  }

  static equals(a: AuthorizationError | PlainMessage<AuthorizationError> | undefined, b: AuthorizationError | PlainMessage<AuthorizationError> | undefined): boolean {
    return proto3.util.equals(AuthorizationError, a, b);
  }
}

