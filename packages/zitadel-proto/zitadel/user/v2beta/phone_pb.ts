// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/user/v2beta/phone.proto (package zitadel.user.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message zitadel.user.v2beta.SetHumanPhone
 */
export class SetHumanPhone extends Message<SetHumanPhone> {
  /**
   * @generated from field: string phone = 1;
   */
  phone = "";

  /**
   * @generated from oneof zitadel.user.v2beta.SetHumanPhone.verification
   */
  verification: {
    /**
     * @generated from field: zitadel.user.v2beta.SendPhoneVerificationCode send_code = 2;
     */
    value: SendPhoneVerificationCode;
    case: "sendCode";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.ReturnPhoneVerificationCode return_code = 3;
     */
    value: ReturnPhoneVerificationCode;
    case: "returnCode";
  } | {
    /**
     * @generated from field: bool is_verified = 4;
     */
    value: boolean;
    case: "isVerified";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SetHumanPhone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.SetHumanPhone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "send_code", kind: "message", T: SendPhoneVerificationCode, oneof: "verification" },
    { no: 3, name: "return_code", kind: "message", T: ReturnPhoneVerificationCode, oneof: "verification" },
    { no: 4, name: "is_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "verification" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetHumanPhone {
    return new SetHumanPhone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetHumanPhone {
    return new SetHumanPhone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetHumanPhone {
    return new SetHumanPhone().fromJsonString(jsonString, options);
  }

  static equals(a: SetHumanPhone | PlainMessage<SetHumanPhone> | undefined, b: SetHumanPhone | PlainMessage<SetHumanPhone> | undefined): boolean {
    return proto3.util.equals(SetHumanPhone, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.HumanPhone
 */
export class HumanPhone extends Message<HumanPhone> {
  /**
   * @generated from field: string phone = 1;
   */
  phone = "";

  /**
   * @generated from field: bool is_verified = 2;
   */
  isVerified = false;

  constructor(data?: PartialMessage<HumanPhone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.HumanPhone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "is_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanPhone {
    return new HumanPhone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanPhone {
    return new HumanPhone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanPhone {
    return new HumanPhone().fromJsonString(jsonString, options);
  }

  static equals(a: HumanPhone | PlainMessage<HumanPhone> | undefined, b: HumanPhone | PlainMessage<HumanPhone> | undefined): boolean {
    return proto3.util.equals(HumanPhone, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.SendPhoneVerificationCode
 */
export class SendPhoneVerificationCode extends Message<SendPhoneVerificationCode> {
  constructor(data?: PartialMessage<SendPhoneVerificationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.SendPhoneVerificationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendPhoneVerificationCode {
    return new SendPhoneVerificationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendPhoneVerificationCode {
    return new SendPhoneVerificationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendPhoneVerificationCode {
    return new SendPhoneVerificationCode().fromJsonString(jsonString, options);
  }

  static equals(a: SendPhoneVerificationCode | PlainMessage<SendPhoneVerificationCode> | undefined, b: SendPhoneVerificationCode | PlainMessage<SendPhoneVerificationCode> | undefined): boolean {
    return proto3.util.equals(SendPhoneVerificationCode, a, b);
  }
}

/**
 * @generated from message zitadel.user.v2beta.ReturnPhoneVerificationCode
 */
export class ReturnPhoneVerificationCode extends Message<ReturnPhoneVerificationCode> {
  constructor(data?: PartialMessage<ReturnPhoneVerificationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.user.v2beta.ReturnPhoneVerificationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReturnPhoneVerificationCode {
    return new ReturnPhoneVerificationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReturnPhoneVerificationCode {
    return new ReturnPhoneVerificationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReturnPhoneVerificationCode {
    return new ReturnPhoneVerificationCode().fromJsonString(jsonString, options);
  }

  static equals(a: ReturnPhoneVerificationCode | PlainMessage<ReturnPhoneVerificationCode> | undefined, b: ReturnPhoneVerificationCode | PlainMessage<ReturnPhoneVerificationCode> | undefined): boolean {
    return proto3.util.equals(ReturnPhoneVerificationCode, a, b);
  }
}

