// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/settings/v2beta/settings_service.proto (package zitadel.settings.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Details, ListDetails, RequestContext } from "../../object/v2beta/object_pb.js";
import { IdentityProvider, LoginSettings } from "./login_settings_pb.js";
import { PasswordComplexitySettings, PasswordExpirySettings } from "./password_settings_pb.js";
import { BrandingSettings } from "./branding_settings_pb.js";
import { DomainSettings } from "./domain_settings_pb.js";
import { LegalAndSupportSettings } from "./legal_settings_pb.js";
import { LockoutSettings } from "./lockout_settings_pb.js";
import { EmbeddedIframeSettings, SecuritySettings } from "./security_settings_pb.js";

/**
 * @generated from message zitadel.settings.v2beta.GetLoginSettingsRequest
 */
export class GetLoginSettingsRequest extends Message<GetLoginSettingsRequest> {
  /**
   * @generated from field: zitadel.object.v2beta.RequestContext ctx = 1;
   */
  ctx?: RequestContext;

  constructor(data?: PartialMessage<GetLoginSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetLoginSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ctx", kind: "message", T: RequestContext },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLoginSettingsRequest {
    return new GetLoginSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLoginSettingsRequest {
    return new GetLoginSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLoginSettingsRequest {
    return new GetLoginSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetLoginSettingsRequest | PlainMessage<GetLoginSettingsRequest> | undefined, b: GetLoginSettingsRequest | PlainMessage<GetLoginSettingsRequest> | undefined): boolean {
    return proto3.util.equals(GetLoginSettingsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetLoginSettingsResponse
 */
export class GetLoginSettingsResponse extends Message<GetLoginSettingsResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.settings.v2beta.LoginSettings settings = 2;
   */
  settings?: LoginSettings;

  constructor(data?: PartialMessage<GetLoginSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetLoginSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "settings", kind: "message", T: LoginSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLoginSettingsResponse {
    return new GetLoginSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLoginSettingsResponse {
    return new GetLoginSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLoginSettingsResponse {
    return new GetLoginSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetLoginSettingsResponse | PlainMessage<GetLoginSettingsResponse> | undefined, b: GetLoginSettingsResponse | PlainMessage<GetLoginSettingsResponse> | undefined): boolean {
    return proto3.util.equals(GetLoginSettingsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetPasswordComplexitySettingsRequest
 */
export class GetPasswordComplexitySettingsRequest extends Message<GetPasswordComplexitySettingsRequest> {
  /**
   * @generated from field: zitadel.object.v2beta.RequestContext ctx = 1;
   */
  ctx?: RequestContext;

  constructor(data?: PartialMessage<GetPasswordComplexitySettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetPasswordComplexitySettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ctx", kind: "message", T: RequestContext },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPasswordComplexitySettingsRequest {
    return new GetPasswordComplexitySettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPasswordComplexitySettingsRequest {
    return new GetPasswordComplexitySettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPasswordComplexitySettingsRequest {
    return new GetPasswordComplexitySettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPasswordComplexitySettingsRequest | PlainMessage<GetPasswordComplexitySettingsRequest> | undefined, b: GetPasswordComplexitySettingsRequest | PlainMessage<GetPasswordComplexitySettingsRequest> | undefined): boolean {
    return proto3.util.equals(GetPasswordComplexitySettingsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetPasswordComplexitySettingsResponse
 */
export class GetPasswordComplexitySettingsResponse extends Message<GetPasswordComplexitySettingsResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.settings.v2beta.PasswordComplexitySettings settings = 2;
   */
  settings?: PasswordComplexitySettings;

  constructor(data?: PartialMessage<GetPasswordComplexitySettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetPasswordComplexitySettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "settings", kind: "message", T: PasswordComplexitySettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPasswordComplexitySettingsResponse {
    return new GetPasswordComplexitySettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPasswordComplexitySettingsResponse {
    return new GetPasswordComplexitySettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPasswordComplexitySettingsResponse {
    return new GetPasswordComplexitySettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPasswordComplexitySettingsResponse | PlainMessage<GetPasswordComplexitySettingsResponse> | undefined, b: GetPasswordComplexitySettingsResponse | PlainMessage<GetPasswordComplexitySettingsResponse> | undefined): boolean {
    return proto3.util.equals(GetPasswordComplexitySettingsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetPasswordExpirySettingsRequest
 */
export class GetPasswordExpirySettingsRequest extends Message<GetPasswordExpirySettingsRequest> {
  /**
   * @generated from field: zitadel.object.v2beta.RequestContext ctx = 1;
   */
  ctx?: RequestContext;

  constructor(data?: PartialMessage<GetPasswordExpirySettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetPasswordExpirySettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ctx", kind: "message", T: RequestContext },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPasswordExpirySettingsRequest {
    return new GetPasswordExpirySettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPasswordExpirySettingsRequest {
    return new GetPasswordExpirySettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPasswordExpirySettingsRequest {
    return new GetPasswordExpirySettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPasswordExpirySettingsRequest | PlainMessage<GetPasswordExpirySettingsRequest> | undefined, b: GetPasswordExpirySettingsRequest | PlainMessage<GetPasswordExpirySettingsRequest> | undefined): boolean {
    return proto3.util.equals(GetPasswordExpirySettingsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetPasswordExpirySettingsResponse
 */
export class GetPasswordExpirySettingsResponse extends Message<GetPasswordExpirySettingsResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.settings.v2beta.PasswordExpirySettings settings = 2;
   */
  settings?: PasswordExpirySettings;

  constructor(data?: PartialMessage<GetPasswordExpirySettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetPasswordExpirySettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "settings", kind: "message", T: PasswordExpirySettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPasswordExpirySettingsResponse {
    return new GetPasswordExpirySettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPasswordExpirySettingsResponse {
    return new GetPasswordExpirySettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPasswordExpirySettingsResponse {
    return new GetPasswordExpirySettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPasswordExpirySettingsResponse | PlainMessage<GetPasswordExpirySettingsResponse> | undefined, b: GetPasswordExpirySettingsResponse | PlainMessage<GetPasswordExpirySettingsResponse> | undefined): boolean {
    return proto3.util.equals(GetPasswordExpirySettingsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetBrandingSettingsRequest
 */
export class GetBrandingSettingsRequest extends Message<GetBrandingSettingsRequest> {
  /**
   * @generated from field: zitadel.object.v2beta.RequestContext ctx = 1;
   */
  ctx?: RequestContext;

  constructor(data?: PartialMessage<GetBrandingSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetBrandingSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ctx", kind: "message", T: RequestContext },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBrandingSettingsRequest {
    return new GetBrandingSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBrandingSettingsRequest {
    return new GetBrandingSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBrandingSettingsRequest {
    return new GetBrandingSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetBrandingSettingsRequest | PlainMessage<GetBrandingSettingsRequest> | undefined, b: GetBrandingSettingsRequest | PlainMessage<GetBrandingSettingsRequest> | undefined): boolean {
    return proto3.util.equals(GetBrandingSettingsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetBrandingSettingsResponse
 */
export class GetBrandingSettingsResponse extends Message<GetBrandingSettingsResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.settings.v2beta.BrandingSettings settings = 2;
   */
  settings?: BrandingSettings;

  constructor(data?: PartialMessage<GetBrandingSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetBrandingSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "settings", kind: "message", T: BrandingSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBrandingSettingsResponse {
    return new GetBrandingSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBrandingSettingsResponse {
    return new GetBrandingSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBrandingSettingsResponse {
    return new GetBrandingSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetBrandingSettingsResponse | PlainMessage<GetBrandingSettingsResponse> | undefined, b: GetBrandingSettingsResponse | PlainMessage<GetBrandingSettingsResponse> | undefined): boolean {
    return proto3.util.equals(GetBrandingSettingsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetDomainSettingsRequest
 */
export class GetDomainSettingsRequest extends Message<GetDomainSettingsRequest> {
  /**
   * @generated from field: zitadel.object.v2beta.RequestContext ctx = 1;
   */
  ctx?: RequestContext;

  constructor(data?: PartialMessage<GetDomainSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetDomainSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ctx", kind: "message", T: RequestContext },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDomainSettingsRequest {
    return new GetDomainSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDomainSettingsRequest {
    return new GetDomainSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDomainSettingsRequest {
    return new GetDomainSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDomainSettingsRequest | PlainMessage<GetDomainSettingsRequest> | undefined, b: GetDomainSettingsRequest | PlainMessage<GetDomainSettingsRequest> | undefined): boolean {
    return proto3.util.equals(GetDomainSettingsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetDomainSettingsResponse
 */
export class GetDomainSettingsResponse extends Message<GetDomainSettingsResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.settings.v2beta.DomainSettings settings = 2;
   */
  settings?: DomainSettings;

  constructor(data?: PartialMessage<GetDomainSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetDomainSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "settings", kind: "message", T: DomainSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDomainSettingsResponse {
    return new GetDomainSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDomainSettingsResponse {
    return new GetDomainSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDomainSettingsResponse {
    return new GetDomainSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDomainSettingsResponse | PlainMessage<GetDomainSettingsResponse> | undefined, b: GetDomainSettingsResponse | PlainMessage<GetDomainSettingsResponse> | undefined): boolean {
    return proto3.util.equals(GetDomainSettingsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetLegalAndSupportSettingsRequest
 */
export class GetLegalAndSupportSettingsRequest extends Message<GetLegalAndSupportSettingsRequest> {
  /**
   * @generated from field: zitadel.object.v2beta.RequestContext ctx = 1;
   */
  ctx?: RequestContext;

  constructor(data?: PartialMessage<GetLegalAndSupportSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetLegalAndSupportSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ctx", kind: "message", T: RequestContext },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLegalAndSupportSettingsRequest {
    return new GetLegalAndSupportSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLegalAndSupportSettingsRequest {
    return new GetLegalAndSupportSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLegalAndSupportSettingsRequest {
    return new GetLegalAndSupportSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetLegalAndSupportSettingsRequest | PlainMessage<GetLegalAndSupportSettingsRequest> | undefined, b: GetLegalAndSupportSettingsRequest | PlainMessage<GetLegalAndSupportSettingsRequest> | undefined): boolean {
    return proto3.util.equals(GetLegalAndSupportSettingsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetLegalAndSupportSettingsResponse
 */
export class GetLegalAndSupportSettingsResponse extends Message<GetLegalAndSupportSettingsResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.settings.v2beta.LegalAndSupportSettings settings = 2;
   */
  settings?: LegalAndSupportSettings;

  constructor(data?: PartialMessage<GetLegalAndSupportSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetLegalAndSupportSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "settings", kind: "message", T: LegalAndSupportSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLegalAndSupportSettingsResponse {
    return new GetLegalAndSupportSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLegalAndSupportSettingsResponse {
    return new GetLegalAndSupportSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLegalAndSupportSettingsResponse {
    return new GetLegalAndSupportSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetLegalAndSupportSettingsResponse | PlainMessage<GetLegalAndSupportSettingsResponse> | undefined, b: GetLegalAndSupportSettingsResponse | PlainMessage<GetLegalAndSupportSettingsResponse> | undefined): boolean {
    return proto3.util.equals(GetLegalAndSupportSettingsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetLockoutSettingsRequest
 */
export class GetLockoutSettingsRequest extends Message<GetLockoutSettingsRequest> {
  /**
   * @generated from field: zitadel.object.v2beta.RequestContext ctx = 1;
   */
  ctx?: RequestContext;

  constructor(data?: PartialMessage<GetLockoutSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetLockoutSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ctx", kind: "message", T: RequestContext },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLockoutSettingsRequest {
    return new GetLockoutSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLockoutSettingsRequest {
    return new GetLockoutSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLockoutSettingsRequest {
    return new GetLockoutSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetLockoutSettingsRequest | PlainMessage<GetLockoutSettingsRequest> | undefined, b: GetLockoutSettingsRequest | PlainMessage<GetLockoutSettingsRequest> | undefined): boolean {
    return proto3.util.equals(GetLockoutSettingsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetLockoutSettingsResponse
 */
export class GetLockoutSettingsResponse extends Message<GetLockoutSettingsResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.settings.v2beta.LockoutSettings settings = 2;
   */
  settings?: LockoutSettings;

  constructor(data?: PartialMessage<GetLockoutSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetLockoutSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "settings", kind: "message", T: LockoutSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLockoutSettingsResponse {
    return new GetLockoutSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLockoutSettingsResponse {
    return new GetLockoutSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLockoutSettingsResponse {
    return new GetLockoutSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetLockoutSettingsResponse | PlainMessage<GetLockoutSettingsResponse> | undefined, b: GetLockoutSettingsResponse | PlainMessage<GetLockoutSettingsResponse> | undefined): boolean {
    return proto3.util.equals(GetLockoutSettingsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetActiveIdentityProvidersRequest
 */
export class GetActiveIdentityProvidersRequest extends Message<GetActiveIdentityProvidersRequest> {
  /**
   * @generated from field: zitadel.object.v2beta.RequestContext ctx = 1;
   */
  ctx?: RequestContext;

  constructor(data?: PartialMessage<GetActiveIdentityProvidersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetActiveIdentityProvidersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ctx", kind: "message", T: RequestContext },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetActiveIdentityProvidersRequest {
    return new GetActiveIdentityProvidersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetActiveIdentityProvidersRequest {
    return new GetActiveIdentityProvidersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetActiveIdentityProvidersRequest {
    return new GetActiveIdentityProvidersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetActiveIdentityProvidersRequest | PlainMessage<GetActiveIdentityProvidersRequest> | undefined, b: GetActiveIdentityProvidersRequest | PlainMessage<GetActiveIdentityProvidersRequest> | undefined): boolean {
    return proto3.util.equals(GetActiveIdentityProvidersRequest, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetActiveIdentityProvidersResponse
 */
export class GetActiveIdentityProvidersResponse extends Message<GetActiveIdentityProvidersResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.settings.v2beta.IdentityProvider identity_providers = 2;
   */
  identityProviders: IdentityProvider[] = [];

  constructor(data?: PartialMessage<GetActiveIdentityProvidersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetActiveIdentityProvidersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "identity_providers", kind: "message", T: IdentityProvider, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetActiveIdentityProvidersResponse {
    return new GetActiveIdentityProvidersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetActiveIdentityProvidersResponse {
    return new GetActiveIdentityProvidersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetActiveIdentityProvidersResponse {
    return new GetActiveIdentityProvidersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetActiveIdentityProvidersResponse | PlainMessage<GetActiveIdentityProvidersResponse> | undefined, b: GetActiveIdentityProvidersResponse | PlainMessage<GetActiveIdentityProvidersResponse> | undefined): boolean {
    return proto3.util.equals(GetActiveIdentityProvidersResponse, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetGeneralSettingsRequest
 */
export class GetGeneralSettingsRequest extends Message<GetGeneralSettingsRequest> {
  constructor(data?: PartialMessage<GetGeneralSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetGeneralSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetGeneralSettingsRequest {
    return new GetGeneralSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetGeneralSettingsRequest {
    return new GetGeneralSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetGeneralSettingsRequest {
    return new GetGeneralSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetGeneralSettingsRequest | PlainMessage<GetGeneralSettingsRequest> | undefined, b: GetGeneralSettingsRequest | PlainMessage<GetGeneralSettingsRequest> | undefined): boolean {
    return proto3.util.equals(GetGeneralSettingsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetGeneralSettingsResponse
 */
export class GetGeneralSettingsResponse extends Message<GetGeneralSettingsResponse> {
  /**
   * @generated from field: string default_org_id = 1;
   */
  defaultOrgId = "";

  /**
   * @generated from field: string default_language = 2;
   */
  defaultLanguage = "";

  /**
   * @generated from field: repeated string supported_languages = 3;
   */
  supportedLanguages: string[] = [];

  constructor(data?: PartialMessage<GetGeneralSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetGeneralSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "default_org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "default_language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "supported_languages", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetGeneralSettingsResponse {
    return new GetGeneralSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetGeneralSettingsResponse {
    return new GetGeneralSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetGeneralSettingsResponse {
    return new GetGeneralSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetGeneralSettingsResponse | PlainMessage<GetGeneralSettingsResponse> | undefined, b: GetGeneralSettingsResponse | PlainMessage<GetGeneralSettingsResponse> | undefined): boolean {
    return proto3.util.equals(GetGeneralSettingsResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.settings.v2beta.GetSecuritySettingsRequest
 */
export class GetSecuritySettingsRequest extends Message<GetSecuritySettingsRequest> {
  constructor(data?: PartialMessage<GetSecuritySettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetSecuritySettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSecuritySettingsRequest {
    return new GetSecuritySettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSecuritySettingsRequest {
    return new GetSecuritySettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSecuritySettingsRequest {
    return new GetSecuritySettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSecuritySettingsRequest | PlainMessage<GetSecuritySettingsRequest> | undefined, b: GetSecuritySettingsRequest | PlainMessage<GetSecuritySettingsRequest> | undefined): boolean {
    return proto3.util.equals(GetSecuritySettingsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.GetSecuritySettingsResponse
 */
export class GetSecuritySettingsResponse extends Message<GetSecuritySettingsResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.settings.v2beta.SecuritySettings settings = 2;
   */
  settings?: SecuritySettings;

  constructor(data?: PartialMessage<GetSecuritySettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.GetSecuritySettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
    { no: 2, name: "settings", kind: "message", T: SecuritySettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSecuritySettingsResponse {
    return new GetSecuritySettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSecuritySettingsResponse {
    return new GetSecuritySettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSecuritySettingsResponse {
    return new GetSecuritySettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSecuritySettingsResponse | PlainMessage<GetSecuritySettingsResponse> | undefined, b: GetSecuritySettingsResponse | PlainMessage<GetSecuritySettingsResponse> | undefined): boolean {
    return proto3.util.equals(GetSecuritySettingsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.SetSecuritySettingsRequest
 */
export class SetSecuritySettingsRequest extends Message<SetSecuritySettingsRequest> {
  /**
   * @generated from field: zitadel.settings.v2beta.EmbeddedIframeSettings embedded_iframe = 1;
   */
  embeddedIframe?: EmbeddedIframeSettings;

  /**
   * @generated from field: bool enable_impersonation = 2;
   */
  enableImpersonation = false;

  constructor(data?: PartialMessage<SetSecuritySettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.SetSecuritySettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "embedded_iframe", kind: "message", T: EmbeddedIframeSettings },
    { no: 2, name: "enable_impersonation", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetSecuritySettingsRequest {
    return new SetSecuritySettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetSecuritySettingsRequest {
    return new SetSecuritySettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetSecuritySettingsRequest {
    return new SetSecuritySettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetSecuritySettingsRequest | PlainMessage<SetSecuritySettingsRequest> | undefined, b: SetSecuritySettingsRequest | PlainMessage<SetSecuritySettingsRequest> | undefined): boolean {
    return proto3.util.equals(SetSecuritySettingsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.SetSecuritySettingsResponse
 */
export class SetSecuritySettingsResponse extends Message<SetSecuritySettingsResponse> {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  constructor(data?: PartialMessage<SetSecuritySettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.SetSecuritySettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Details },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetSecuritySettingsResponse {
    return new SetSecuritySettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetSecuritySettingsResponse {
    return new SetSecuritySettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetSecuritySettingsResponse {
    return new SetSecuritySettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetSecuritySettingsResponse | PlainMessage<SetSecuritySettingsResponse> | undefined, b: SetSecuritySettingsResponse | PlainMessage<SetSecuritySettingsResponse> | undefined): boolean {
    return proto3.util.equals(SetSecuritySettingsResponse, a, b);
  }
}

