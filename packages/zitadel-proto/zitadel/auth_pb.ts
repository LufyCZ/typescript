// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/auth.proto (package zitadel.auth.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Duration, Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { AuthFactor, Email, Gender, Membership, MembershipQuery, Phone, Profile, RefreshToken, Session, Type, User, WebAuthNKey, WebAuthNToken, WebAuthNVerification } from "./user_pb.js";
import { ListDetails, ListQuery, ObjectDetails } from "./object_pb.js";
import { Change, ChangeQuery } from "./change_pb.js";
import { Metadata, MetadataQuery } from "./metadata_pb.js";
import { LabelPolicy, LoginPolicy, PasswordComplexityPolicy, PrivacyPolicy } from "./policy_pb.js";
import { IDPUserLink } from "./idp_pb.js";
import { Org, OrgFieldName, OrgQuery } from "./org_pb.js";

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.HealthzRequest
 */
export class HealthzRequest extends Message<HealthzRequest> {
  constructor(data?: PartialMessage<HealthzRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.HealthzRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HealthzRequest {
    return new HealthzRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HealthzRequest {
    return new HealthzRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HealthzRequest {
    return new HealthzRequest().fromJsonString(jsonString, options);
  }

  static equals(a: HealthzRequest | PlainMessage<HealthzRequest> | undefined, b: HealthzRequest | PlainMessage<HealthzRequest> | undefined): boolean {
    return proto3.util.equals(HealthzRequest, a, b);
  }
}

/**
 * This is an empty response
 *
 * @generated from message zitadel.auth.v1.HealthzResponse
 */
export class HealthzResponse extends Message<HealthzResponse> {
  constructor(data?: PartialMessage<HealthzResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.HealthzResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HealthzResponse {
    return new HealthzResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HealthzResponse {
    return new HealthzResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HealthzResponse {
    return new HealthzResponse().fromJsonString(jsonString, options);
  }

  static equals(a: HealthzResponse | PlainMessage<HealthzResponse> | undefined, b: HealthzResponse | PlainMessage<HealthzResponse> | undefined): boolean {
    return proto3.util.equals(HealthzResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.GetSupportedLanguagesRequest
 */
export class GetSupportedLanguagesRequest extends Message<GetSupportedLanguagesRequest> {
  constructor(data?: PartialMessage<GetSupportedLanguagesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetSupportedLanguagesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSupportedLanguagesRequest {
    return new GetSupportedLanguagesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSupportedLanguagesRequest {
    return new GetSupportedLanguagesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSupportedLanguagesRequest {
    return new GetSupportedLanguagesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSupportedLanguagesRequest | PlainMessage<GetSupportedLanguagesRequest> | undefined, b: GetSupportedLanguagesRequest | PlainMessage<GetSupportedLanguagesRequest> | undefined): boolean {
    return proto3.util.equals(GetSupportedLanguagesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.GetSupportedLanguagesResponse
 */
export class GetSupportedLanguagesResponse extends Message<GetSupportedLanguagesResponse> {
  /**
   * @generated from field: repeated string languages = 1;
   */
  languages: string[] = [];

  constructor(data?: PartialMessage<GetSupportedLanguagesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetSupportedLanguagesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "languages", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSupportedLanguagesResponse {
    return new GetSupportedLanguagesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSupportedLanguagesResponse {
    return new GetSupportedLanguagesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSupportedLanguagesResponse {
    return new GetSupportedLanguagesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSupportedLanguagesResponse | PlainMessage<GetSupportedLanguagesResponse> | undefined, b: GetSupportedLanguagesResponse | PlainMessage<GetSupportedLanguagesResponse> | undefined): boolean {
    return proto3.util.equals(GetSupportedLanguagesResponse, a, b);
  }
}

/**
 * This is an empty request
 * the request parameters are read from the token-header
 *
 * @generated from message zitadel.auth.v1.GetMyUserRequest
 */
export class GetMyUserRequest extends Message<GetMyUserRequest> {
  constructor(data?: PartialMessage<GetMyUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyUserRequest {
    return new GetMyUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyUserRequest {
    return new GetMyUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyUserRequest {
    return new GetMyUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyUserRequest | PlainMessage<GetMyUserRequest> | undefined, b: GetMyUserRequest | PlainMessage<GetMyUserRequest> | undefined): boolean {
    return proto3.util.equals(GetMyUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.GetMyUserResponse
 */
export class GetMyUserResponse extends Message<GetMyUserResponse> {
  /**
   * @generated from field: zitadel.user.v1.User user = 1;
   */
  user?: User;

  /**
   * @generated from field: google.protobuf.Timestamp last_login = 2;
   */
  lastLogin?: Timestamp;

  constructor(data?: PartialMessage<GetMyUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
    { no: 2, name: "last_login", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyUserResponse {
    return new GetMyUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyUserResponse {
    return new GetMyUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyUserResponse {
    return new GetMyUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyUserResponse | PlainMessage<GetMyUserResponse> | undefined, b: GetMyUserResponse | PlainMessage<GetMyUserResponse> | undefined): boolean {
    return proto3.util.equals(GetMyUserResponse, a, b);
  }
}

/**
 * This is an empty request
 * the request parameters are read from the token-header
 *
 * @generated from message zitadel.auth.v1.RemoveMyUserRequest
 */
export class RemoveMyUserRequest extends Message<RemoveMyUserRequest> {
  constructor(data?: PartialMessage<RemoveMyUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyUserRequest {
    return new RemoveMyUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyUserRequest {
    return new RemoveMyUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyUserRequest {
    return new RemoveMyUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyUserRequest | PlainMessage<RemoveMyUserRequest> | undefined, b: RemoveMyUserRequest | PlainMessage<RemoveMyUserRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMyUserRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyUserResponse
 */
export class RemoveMyUserResponse extends Message<RemoveMyUserResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMyUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyUserResponse {
    return new RemoveMyUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyUserResponse {
    return new RemoveMyUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyUserResponse {
    return new RemoveMyUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyUserResponse | PlainMessage<RemoveMyUserResponse> | undefined, b: RemoveMyUserResponse | PlainMessage<RemoveMyUserResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMyUserResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyUserChangesRequest
 */
export class ListMyUserChangesRequest extends Message<ListMyUserChangesRequest> {
  /**
   * @generated from field: zitadel.change.v1.ChangeQuery query = 1;
   */
  query?: ChangeQuery;

  constructor(data?: PartialMessage<ListMyUserChangesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyUserChangesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ChangeQuery },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyUserChangesRequest {
    return new ListMyUserChangesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyUserChangesRequest {
    return new ListMyUserChangesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyUserChangesRequest {
    return new ListMyUserChangesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyUserChangesRequest | PlainMessage<ListMyUserChangesRequest> | undefined, b: ListMyUserChangesRequest | PlainMessage<ListMyUserChangesRequest> | undefined): boolean {
    return proto3.util.equals(ListMyUserChangesRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyUserChangesResponse
 */
export class ListMyUserChangesResponse extends Message<ListMyUserChangesResponse> {
  /**
   * zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary info)
   *
   * @generated from field: repeated zitadel.change.v1.Change result = 2;
   */
  result: Change[] = [];

  constructor(data?: PartialMessage<ListMyUserChangesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyUserChangesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "result", kind: "message", T: Change, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyUserChangesResponse {
    return new ListMyUserChangesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyUserChangesResponse {
    return new ListMyUserChangesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyUserChangesResponse {
    return new ListMyUserChangesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyUserChangesResponse | PlainMessage<ListMyUserChangesResponse> | undefined, b: ListMyUserChangesResponse | PlainMessage<ListMyUserChangesResponse> | undefined): boolean {
    return proto3.util.equals(ListMyUserChangesResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.ListMyUserSessionsRequest
 */
export class ListMyUserSessionsRequest extends Message<ListMyUserSessionsRequest> {
  constructor(data?: PartialMessage<ListMyUserSessionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyUserSessionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyUserSessionsRequest {
    return new ListMyUserSessionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyUserSessionsRequest {
    return new ListMyUserSessionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyUserSessionsRequest {
    return new ListMyUserSessionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyUserSessionsRequest | PlainMessage<ListMyUserSessionsRequest> | undefined, b: ListMyUserSessionsRequest | PlainMessage<ListMyUserSessionsRequest> | undefined): boolean {
    return proto3.util.equals(ListMyUserSessionsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyUserSessionsResponse
 */
export class ListMyUserSessionsResponse extends Message<ListMyUserSessionsResponse> {
  /**
   * @generated from field: repeated zitadel.user.v1.Session result = 1;
   */
  result: Session[] = [];

  constructor(data?: PartialMessage<ListMyUserSessionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyUserSessionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: Session, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyUserSessionsResponse {
    return new ListMyUserSessionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyUserSessionsResponse {
    return new ListMyUserSessionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyUserSessionsResponse {
    return new ListMyUserSessionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyUserSessionsResponse | PlainMessage<ListMyUserSessionsResponse> | undefined, b: ListMyUserSessionsResponse | PlainMessage<ListMyUserSessionsResponse> | undefined): boolean {
    return proto3.util.equals(ListMyUserSessionsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyMetadataRequest
 */
export class ListMyMetadataRequest extends Message<ListMyMetadataRequest> {
  /**
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * @generated from field: repeated zitadel.metadata.v1.MetadataQuery queries = 2;
   */
  queries: MetadataQuery[] = [];

  constructor(data?: PartialMessage<ListMyMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: MetadataQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyMetadataRequest {
    return new ListMyMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyMetadataRequest {
    return new ListMyMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyMetadataRequest {
    return new ListMyMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyMetadataRequest | PlainMessage<ListMyMetadataRequest> | undefined, b: ListMyMetadataRequest | PlainMessage<ListMyMetadataRequest> | undefined): boolean {
    return proto3.util.equals(ListMyMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyMetadataResponse
 */
export class ListMyMetadataResponse extends Message<ListMyMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.metadata.v1.Metadata result = 2;
   */
  result: Metadata[] = [];

  constructor(data?: PartialMessage<ListMyMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Metadata, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyMetadataResponse {
    return new ListMyMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyMetadataResponse {
    return new ListMyMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyMetadataResponse {
    return new ListMyMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyMetadataResponse | PlainMessage<ListMyMetadataResponse> | undefined, b: ListMyMetadataResponse | PlainMessage<ListMyMetadataResponse> | undefined): boolean {
    return proto3.util.equals(ListMyMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.GetMyMetadataRequest
 */
export class GetMyMetadataRequest extends Message<GetMyMetadataRequest> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  constructor(data?: PartialMessage<GetMyMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyMetadataRequest {
    return new GetMyMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyMetadataRequest {
    return new GetMyMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyMetadataRequest {
    return new GetMyMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyMetadataRequest | PlainMessage<GetMyMetadataRequest> | undefined, b: GetMyMetadataRequest | PlainMessage<GetMyMetadataRequest> | undefined): boolean {
    return proto3.util.equals(GetMyMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.GetMyMetadataResponse
 */
export class GetMyMetadataResponse extends Message<GetMyMetadataResponse> {
  /**
   * @generated from field: zitadel.metadata.v1.Metadata metadata = 1;
   */
  metadata?: Metadata;

  constructor(data?: PartialMessage<GetMyMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: Metadata },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyMetadataResponse {
    return new GetMyMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyMetadataResponse {
    return new GetMyMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyMetadataResponse {
    return new GetMyMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyMetadataResponse | PlainMessage<GetMyMetadataResponse> | undefined, b: GetMyMetadataResponse | PlainMessage<GetMyMetadataResponse> | undefined): boolean {
    return proto3.util.equals(GetMyMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.SetMyMetadataRequest
 */
export class SetMyMetadataRequest extends Message<SetMyMetadataRequest> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: bytes value = 2;
   */
  value = new Uint8Array(0);

  constructor(data?: PartialMessage<SetMyMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.SetMyMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetMyMetadataRequest {
    return new SetMyMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetMyMetadataRequest {
    return new SetMyMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetMyMetadataRequest {
    return new SetMyMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetMyMetadataRequest | PlainMessage<SetMyMetadataRequest> | undefined, b: SetMyMetadataRequest | PlainMessage<SetMyMetadataRequest> | undefined): boolean {
    return proto3.util.equals(SetMyMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.SetMyMetadataResponse
 */
export class SetMyMetadataResponse extends Message<SetMyMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetMyMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.SetMyMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetMyMetadataResponse {
    return new SetMyMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetMyMetadataResponse {
    return new SetMyMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetMyMetadataResponse {
    return new SetMyMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetMyMetadataResponse | PlainMessage<SetMyMetadataResponse> | undefined, b: SetMyMetadataResponse | PlainMessage<SetMyMetadataResponse> | undefined): boolean {
    return proto3.util.equals(SetMyMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.BulkSetMyMetadataRequest
 */
export class BulkSetMyMetadataRequest extends Message<BulkSetMyMetadataRequest> {
  /**
   * @generated from field: repeated zitadel.auth.v1.BulkSetMyMetadataRequest.Metadata metadata = 1;
   */
  metadata: BulkSetMyMetadataRequest_Metadata[] = [];

  constructor(data?: PartialMessage<BulkSetMyMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.BulkSetMyMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: BulkSetMyMetadataRequest_Metadata, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkSetMyMetadataRequest {
    return new BulkSetMyMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkSetMyMetadataRequest {
    return new BulkSetMyMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkSetMyMetadataRequest {
    return new BulkSetMyMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BulkSetMyMetadataRequest | PlainMessage<BulkSetMyMetadataRequest> | undefined, b: BulkSetMyMetadataRequest | PlainMessage<BulkSetMyMetadataRequest> | undefined): boolean {
    return proto3.util.equals(BulkSetMyMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.BulkSetMyMetadataRequest.Metadata
 */
export class BulkSetMyMetadataRequest_Metadata extends Message<BulkSetMyMetadataRequest_Metadata> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: bytes value = 2;
   */
  value = new Uint8Array(0);

  constructor(data?: PartialMessage<BulkSetMyMetadataRequest_Metadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.BulkSetMyMetadataRequest.Metadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkSetMyMetadataRequest_Metadata {
    return new BulkSetMyMetadataRequest_Metadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkSetMyMetadataRequest_Metadata {
    return new BulkSetMyMetadataRequest_Metadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkSetMyMetadataRequest_Metadata {
    return new BulkSetMyMetadataRequest_Metadata().fromJsonString(jsonString, options);
  }

  static equals(a: BulkSetMyMetadataRequest_Metadata | PlainMessage<BulkSetMyMetadataRequest_Metadata> | undefined, b: BulkSetMyMetadataRequest_Metadata | PlainMessage<BulkSetMyMetadataRequest_Metadata> | undefined): boolean {
    return proto3.util.equals(BulkSetMyMetadataRequest_Metadata, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.BulkSetMyMetadataResponse
 */
export class BulkSetMyMetadataResponse extends Message<BulkSetMyMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<BulkSetMyMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.BulkSetMyMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkSetMyMetadataResponse {
    return new BulkSetMyMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkSetMyMetadataResponse {
    return new BulkSetMyMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkSetMyMetadataResponse {
    return new BulkSetMyMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BulkSetMyMetadataResponse | PlainMessage<BulkSetMyMetadataResponse> | undefined, b: BulkSetMyMetadataResponse | PlainMessage<BulkSetMyMetadataResponse> | undefined): boolean {
    return proto3.util.equals(BulkSetMyMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyMetadataRequest
 */
export class RemoveMyMetadataRequest extends Message<RemoveMyMetadataRequest> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  constructor(data?: PartialMessage<RemoveMyMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyMetadataRequest {
    return new RemoveMyMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyMetadataRequest {
    return new RemoveMyMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyMetadataRequest {
    return new RemoveMyMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyMetadataRequest | PlainMessage<RemoveMyMetadataRequest> | undefined, b: RemoveMyMetadataRequest | PlainMessage<RemoveMyMetadataRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMyMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyMetadataResponse
 */
export class RemoveMyMetadataResponse extends Message<RemoveMyMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMyMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyMetadataResponse {
    return new RemoveMyMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyMetadataResponse {
    return new RemoveMyMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyMetadataResponse {
    return new RemoveMyMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyMetadataResponse | PlainMessage<RemoveMyMetadataResponse> | undefined, b: RemoveMyMetadataResponse | PlainMessage<RemoveMyMetadataResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMyMetadataResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.BulkRemoveMyMetadataRequest
 */
export class BulkRemoveMyMetadataRequest extends Message<BulkRemoveMyMetadataRequest> {
  /**
   * @generated from field: repeated string keys = 1;
   */
  keys: string[] = [];

  constructor(data?: PartialMessage<BulkRemoveMyMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.BulkRemoveMyMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkRemoveMyMetadataRequest {
    return new BulkRemoveMyMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkRemoveMyMetadataRequest {
    return new BulkRemoveMyMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkRemoveMyMetadataRequest {
    return new BulkRemoveMyMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BulkRemoveMyMetadataRequest | PlainMessage<BulkRemoveMyMetadataRequest> | undefined, b: BulkRemoveMyMetadataRequest | PlainMessage<BulkRemoveMyMetadataRequest> | undefined): boolean {
    return proto3.util.equals(BulkRemoveMyMetadataRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.BulkRemoveMyMetadataResponse
 */
export class BulkRemoveMyMetadataResponse extends Message<BulkRemoveMyMetadataResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<BulkRemoveMyMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.BulkRemoveMyMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkRemoveMyMetadataResponse {
    return new BulkRemoveMyMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkRemoveMyMetadataResponse {
    return new BulkRemoveMyMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkRemoveMyMetadataResponse {
    return new BulkRemoveMyMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BulkRemoveMyMetadataResponse | PlainMessage<BulkRemoveMyMetadataResponse> | undefined, b: BulkRemoveMyMetadataResponse | PlainMessage<BulkRemoveMyMetadataResponse> | undefined): boolean {
    return proto3.util.equals(BulkRemoveMyMetadataResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.ListMyRefreshTokensRequest
 */
export class ListMyRefreshTokensRequest extends Message<ListMyRefreshTokensRequest> {
  constructor(data?: PartialMessage<ListMyRefreshTokensRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyRefreshTokensRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyRefreshTokensRequest {
    return new ListMyRefreshTokensRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyRefreshTokensRequest {
    return new ListMyRefreshTokensRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyRefreshTokensRequest {
    return new ListMyRefreshTokensRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyRefreshTokensRequest | PlainMessage<ListMyRefreshTokensRequest> | undefined, b: ListMyRefreshTokensRequest | PlainMessage<ListMyRefreshTokensRequest> | undefined): boolean {
    return proto3.util.equals(ListMyRefreshTokensRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyRefreshTokensResponse
 */
export class ListMyRefreshTokensResponse extends Message<ListMyRefreshTokensResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.user.v1.RefreshToken result = 2;
   */
  result: RefreshToken[] = [];

  constructor(data?: PartialMessage<ListMyRefreshTokensResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyRefreshTokensResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: RefreshToken, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyRefreshTokensResponse {
    return new ListMyRefreshTokensResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyRefreshTokensResponse {
    return new ListMyRefreshTokensResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyRefreshTokensResponse {
    return new ListMyRefreshTokensResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyRefreshTokensResponse | PlainMessage<ListMyRefreshTokensResponse> | undefined, b: ListMyRefreshTokensResponse | PlainMessage<ListMyRefreshTokensResponse> | undefined): boolean {
    return proto3.util.equals(ListMyRefreshTokensResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RevokeMyRefreshTokenRequest
 */
export class RevokeMyRefreshTokenRequest extends Message<RevokeMyRefreshTokenRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<RevokeMyRefreshTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RevokeMyRefreshTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeMyRefreshTokenRequest {
    return new RevokeMyRefreshTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeMyRefreshTokenRequest {
    return new RevokeMyRefreshTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeMyRefreshTokenRequest {
    return new RevokeMyRefreshTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RevokeMyRefreshTokenRequest | PlainMessage<RevokeMyRefreshTokenRequest> | undefined, b: RevokeMyRefreshTokenRequest | PlainMessage<RevokeMyRefreshTokenRequest> | undefined): boolean {
    return proto3.util.equals(RevokeMyRefreshTokenRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RevokeMyRefreshTokenResponse
 */
export class RevokeMyRefreshTokenResponse extends Message<RevokeMyRefreshTokenResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RevokeMyRefreshTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RevokeMyRefreshTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeMyRefreshTokenResponse {
    return new RevokeMyRefreshTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeMyRefreshTokenResponse {
    return new RevokeMyRefreshTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeMyRefreshTokenResponse {
    return new RevokeMyRefreshTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RevokeMyRefreshTokenResponse | PlainMessage<RevokeMyRefreshTokenResponse> | undefined, b: RevokeMyRefreshTokenResponse | PlainMessage<RevokeMyRefreshTokenResponse> | undefined): boolean {
    return proto3.util.equals(RevokeMyRefreshTokenResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.RevokeAllMyRefreshTokensRequest
 */
export class RevokeAllMyRefreshTokensRequest extends Message<RevokeAllMyRefreshTokensRequest> {
  constructor(data?: PartialMessage<RevokeAllMyRefreshTokensRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RevokeAllMyRefreshTokensRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeAllMyRefreshTokensRequest {
    return new RevokeAllMyRefreshTokensRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeAllMyRefreshTokensRequest {
    return new RevokeAllMyRefreshTokensRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeAllMyRefreshTokensRequest {
    return new RevokeAllMyRefreshTokensRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RevokeAllMyRefreshTokensRequest | PlainMessage<RevokeAllMyRefreshTokensRequest> | undefined, b: RevokeAllMyRefreshTokensRequest | PlainMessage<RevokeAllMyRefreshTokensRequest> | undefined): boolean {
    return proto3.util.equals(RevokeAllMyRefreshTokensRequest, a, b);
  }
}

/**
 * This is an empty response
 *
 * @generated from message zitadel.auth.v1.RevokeAllMyRefreshTokensResponse
 */
export class RevokeAllMyRefreshTokensResponse extends Message<RevokeAllMyRefreshTokensResponse> {
  constructor(data?: PartialMessage<RevokeAllMyRefreshTokensResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RevokeAllMyRefreshTokensResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeAllMyRefreshTokensResponse {
    return new RevokeAllMyRefreshTokensResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeAllMyRefreshTokensResponse {
    return new RevokeAllMyRefreshTokensResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeAllMyRefreshTokensResponse {
    return new RevokeAllMyRefreshTokensResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RevokeAllMyRefreshTokensResponse | PlainMessage<RevokeAllMyRefreshTokensResponse> | undefined, b: RevokeAllMyRefreshTokensResponse | PlainMessage<RevokeAllMyRefreshTokensResponse> | undefined): boolean {
    return proto3.util.equals(RevokeAllMyRefreshTokensResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.UpdateMyUserNameRequest
 */
export class UpdateMyUserNameRequest extends Message<UpdateMyUserNameRequest> {
  /**
   * @generated from field: string user_name = 1;
   */
  userName = "";

  constructor(data?: PartialMessage<UpdateMyUserNameRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.UpdateMyUserNameRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMyUserNameRequest {
    return new UpdateMyUserNameRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMyUserNameRequest {
    return new UpdateMyUserNameRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMyUserNameRequest {
    return new UpdateMyUserNameRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMyUserNameRequest | PlainMessage<UpdateMyUserNameRequest> | undefined, b: UpdateMyUserNameRequest | PlainMessage<UpdateMyUserNameRequest> | undefined): boolean {
    return proto3.util.equals(UpdateMyUserNameRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.UpdateMyUserNameResponse
 */
export class UpdateMyUserNameResponse extends Message<UpdateMyUserNameResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateMyUserNameResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.UpdateMyUserNameResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMyUserNameResponse {
    return new UpdateMyUserNameResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMyUserNameResponse {
    return new UpdateMyUserNameResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMyUserNameResponse {
    return new UpdateMyUserNameResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMyUserNameResponse | PlainMessage<UpdateMyUserNameResponse> | undefined, b: UpdateMyUserNameResponse | PlainMessage<UpdateMyUserNameResponse> | undefined): boolean {
    return proto3.util.equals(UpdateMyUserNameResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.GetMyPasswordComplexityPolicyRequest
 */
export class GetMyPasswordComplexityPolicyRequest extends Message<GetMyPasswordComplexityPolicyRequest> {
  constructor(data?: PartialMessage<GetMyPasswordComplexityPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyPasswordComplexityPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyPasswordComplexityPolicyRequest {
    return new GetMyPasswordComplexityPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyPasswordComplexityPolicyRequest {
    return new GetMyPasswordComplexityPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyPasswordComplexityPolicyRequest {
    return new GetMyPasswordComplexityPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyPasswordComplexityPolicyRequest | PlainMessage<GetMyPasswordComplexityPolicyRequest> | undefined, b: GetMyPasswordComplexityPolicyRequest | PlainMessage<GetMyPasswordComplexityPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetMyPasswordComplexityPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.GetMyPasswordComplexityPolicyResponse
 */
export class GetMyPasswordComplexityPolicyResponse extends Message<GetMyPasswordComplexityPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.PasswordComplexityPolicy policy = 1;
   */
  policy?: PasswordComplexityPolicy;

  constructor(data?: PartialMessage<GetMyPasswordComplexityPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyPasswordComplexityPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: PasswordComplexityPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyPasswordComplexityPolicyResponse {
    return new GetMyPasswordComplexityPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyPasswordComplexityPolicyResponse {
    return new GetMyPasswordComplexityPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyPasswordComplexityPolicyResponse {
    return new GetMyPasswordComplexityPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyPasswordComplexityPolicyResponse | PlainMessage<GetMyPasswordComplexityPolicyResponse> | undefined, b: GetMyPasswordComplexityPolicyResponse | PlainMessage<GetMyPasswordComplexityPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetMyPasswordComplexityPolicyResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.UpdateMyPasswordRequest
 */
export class UpdateMyPasswordRequest extends Message<UpdateMyPasswordRequest> {
  /**
   * @generated from field: string old_password = 1;
   */
  oldPassword = "";

  /**
   * @generated from field: string new_password = 2;
   */
  newPassword = "";

  constructor(data?: PartialMessage<UpdateMyPasswordRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.UpdateMyPasswordRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "old_password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "new_password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMyPasswordRequest {
    return new UpdateMyPasswordRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMyPasswordRequest {
    return new UpdateMyPasswordRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMyPasswordRequest {
    return new UpdateMyPasswordRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMyPasswordRequest | PlainMessage<UpdateMyPasswordRequest> | undefined, b: UpdateMyPasswordRequest | PlainMessage<UpdateMyPasswordRequest> | undefined): boolean {
    return proto3.util.equals(UpdateMyPasswordRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.UpdateMyPasswordResponse
 */
export class UpdateMyPasswordResponse extends Message<UpdateMyPasswordResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateMyPasswordResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.UpdateMyPasswordResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMyPasswordResponse {
    return new UpdateMyPasswordResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMyPasswordResponse {
    return new UpdateMyPasswordResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMyPasswordResponse {
    return new UpdateMyPasswordResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMyPasswordResponse | PlainMessage<UpdateMyPasswordResponse> | undefined, b: UpdateMyPasswordResponse | PlainMessage<UpdateMyPasswordResponse> | undefined): boolean {
    return proto3.util.equals(UpdateMyPasswordResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.GetMyProfileRequest
 */
export class GetMyProfileRequest extends Message<GetMyProfileRequest> {
  constructor(data?: PartialMessage<GetMyProfileRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyProfileRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyProfileRequest {
    return new GetMyProfileRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyProfileRequest {
    return new GetMyProfileRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyProfileRequest {
    return new GetMyProfileRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyProfileRequest | PlainMessage<GetMyProfileRequest> | undefined, b: GetMyProfileRequest | PlainMessage<GetMyProfileRequest> | undefined): boolean {
    return proto3.util.equals(GetMyProfileRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.GetMyProfileResponse
 */
export class GetMyProfileResponse extends Message<GetMyProfileResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.user.v1.Profile profile = 2;
   */
  profile?: Profile;

  constructor(data?: PartialMessage<GetMyProfileResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyProfileResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "profile", kind: "message", T: Profile },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyProfileResponse {
    return new GetMyProfileResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyProfileResponse {
    return new GetMyProfileResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyProfileResponse {
    return new GetMyProfileResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyProfileResponse | PlainMessage<GetMyProfileResponse> | undefined, b: GetMyProfileResponse | PlainMessage<GetMyProfileResponse> | undefined): boolean {
    return proto3.util.equals(GetMyProfileResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.UpdateMyProfileRequest
 */
export class UpdateMyProfileRequest extends Message<UpdateMyProfileRequest> {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName = "";

  /**
   * @generated from field: string last_name = 2;
   */
  lastName = "";

  /**
   * @generated from field: string nick_name = 3;
   */
  nickName = "";

  /**
   * @generated from field: string display_name = 4;
   */
  displayName = "";

  /**
   * @generated from field: string preferred_language = 5;
   */
  preferredLanguage = "";

  /**
   * @generated from field: zitadel.user.v1.Gender gender = 6;
   */
  gender = Gender.UNSPECIFIED;

  constructor(data?: PartialMessage<UpdateMyProfileRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.UpdateMyProfileRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "nick_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "preferred_language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "gender", kind: "enum", T: proto3.getEnumType(Gender) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMyProfileRequest {
    return new UpdateMyProfileRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMyProfileRequest {
    return new UpdateMyProfileRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMyProfileRequest {
    return new UpdateMyProfileRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMyProfileRequest | PlainMessage<UpdateMyProfileRequest> | undefined, b: UpdateMyProfileRequest | PlainMessage<UpdateMyProfileRequest> | undefined): boolean {
    return proto3.util.equals(UpdateMyProfileRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.UpdateMyProfileResponse
 */
export class UpdateMyProfileResponse extends Message<UpdateMyProfileResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<UpdateMyProfileResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.UpdateMyProfileResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMyProfileResponse {
    return new UpdateMyProfileResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMyProfileResponse {
    return new UpdateMyProfileResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMyProfileResponse {
    return new UpdateMyProfileResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMyProfileResponse | PlainMessage<UpdateMyProfileResponse> | undefined, b: UpdateMyProfileResponse | PlainMessage<UpdateMyProfileResponse> | undefined): boolean {
    return proto3.util.equals(UpdateMyProfileResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.GetMyEmailRequest
 */
export class GetMyEmailRequest extends Message<GetMyEmailRequest> {
  constructor(data?: PartialMessage<GetMyEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyEmailRequest {
    return new GetMyEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyEmailRequest {
    return new GetMyEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyEmailRequest {
    return new GetMyEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyEmailRequest | PlainMessage<GetMyEmailRequest> | undefined, b: GetMyEmailRequest | PlainMessage<GetMyEmailRequest> | undefined): boolean {
    return proto3.util.equals(GetMyEmailRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.GetMyEmailResponse
 */
export class GetMyEmailResponse extends Message<GetMyEmailResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.user.v1.Email email = 2;
   */
  email?: Email;

  constructor(data?: PartialMessage<GetMyEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "email", kind: "message", T: Email },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyEmailResponse {
    return new GetMyEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyEmailResponse {
    return new GetMyEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyEmailResponse {
    return new GetMyEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyEmailResponse | PlainMessage<GetMyEmailResponse> | undefined, b: GetMyEmailResponse | PlainMessage<GetMyEmailResponse> | undefined): boolean {
    return proto3.util.equals(GetMyEmailResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.SetMyEmailRequest
 */
export class SetMyEmailRequest extends Message<SetMyEmailRequest> {
  /**
   * @generated from field: string email = 1;
   */
  email = "";

  constructor(data?: PartialMessage<SetMyEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.SetMyEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetMyEmailRequest {
    return new SetMyEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetMyEmailRequest {
    return new SetMyEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetMyEmailRequest {
    return new SetMyEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetMyEmailRequest | PlainMessage<SetMyEmailRequest> | undefined, b: SetMyEmailRequest | PlainMessage<SetMyEmailRequest> | undefined): boolean {
    return proto3.util.equals(SetMyEmailRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.SetMyEmailResponse
 */
export class SetMyEmailResponse extends Message<SetMyEmailResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetMyEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.SetMyEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetMyEmailResponse {
    return new SetMyEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetMyEmailResponse {
    return new SetMyEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetMyEmailResponse {
    return new SetMyEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetMyEmailResponse | PlainMessage<SetMyEmailResponse> | undefined, b: SetMyEmailResponse | PlainMessage<SetMyEmailResponse> | undefined): boolean {
    return proto3.util.equals(SetMyEmailResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.VerifyMyEmailRequest
 */
export class VerifyMyEmailRequest extends Message<VerifyMyEmailRequest> {
  /**
   * @generated from field: string code = 1;
   */
  code = "";

  constructor(data?: PartialMessage<VerifyMyEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.VerifyMyEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyMyEmailRequest {
    return new VerifyMyEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyMyEmailRequest {
    return new VerifyMyEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyMyEmailRequest {
    return new VerifyMyEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyMyEmailRequest | PlainMessage<VerifyMyEmailRequest> | undefined, b: VerifyMyEmailRequest | PlainMessage<VerifyMyEmailRequest> | undefined): boolean {
    return proto3.util.equals(VerifyMyEmailRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.VerifyMyEmailResponse
 */
export class VerifyMyEmailResponse extends Message<VerifyMyEmailResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<VerifyMyEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.VerifyMyEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyMyEmailResponse {
    return new VerifyMyEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyMyEmailResponse {
    return new VerifyMyEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyMyEmailResponse {
    return new VerifyMyEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyMyEmailResponse | PlainMessage<VerifyMyEmailResponse> | undefined, b: VerifyMyEmailResponse | PlainMessage<VerifyMyEmailResponse> | undefined): boolean {
    return proto3.util.equals(VerifyMyEmailResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.ResendMyEmailVerificationRequest
 */
export class ResendMyEmailVerificationRequest extends Message<ResendMyEmailVerificationRequest> {
  constructor(data?: PartialMessage<ResendMyEmailVerificationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ResendMyEmailVerificationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendMyEmailVerificationRequest {
    return new ResendMyEmailVerificationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendMyEmailVerificationRequest {
    return new ResendMyEmailVerificationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendMyEmailVerificationRequest {
    return new ResendMyEmailVerificationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResendMyEmailVerificationRequest | PlainMessage<ResendMyEmailVerificationRequest> | undefined, b: ResendMyEmailVerificationRequest | PlainMessage<ResendMyEmailVerificationRequest> | undefined): boolean {
    return proto3.util.equals(ResendMyEmailVerificationRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ResendMyEmailVerificationResponse
 */
export class ResendMyEmailVerificationResponse extends Message<ResendMyEmailVerificationResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResendMyEmailVerificationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ResendMyEmailVerificationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendMyEmailVerificationResponse {
    return new ResendMyEmailVerificationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendMyEmailVerificationResponse {
    return new ResendMyEmailVerificationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendMyEmailVerificationResponse {
    return new ResendMyEmailVerificationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResendMyEmailVerificationResponse | PlainMessage<ResendMyEmailVerificationResponse> | undefined, b: ResendMyEmailVerificationResponse | PlainMessage<ResendMyEmailVerificationResponse> | undefined): boolean {
    return proto3.util.equals(ResendMyEmailVerificationResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.GetMyPhoneRequest
 */
export class GetMyPhoneRequest extends Message<GetMyPhoneRequest> {
  constructor(data?: PartialMessage<GetMyPhoneRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyPhoneRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyPhoneRequest {
    return new GetMyPhoneRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyPhoneRequest {
    return new GetMyPhoneRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyPhoneRequest {
    return new GetMyPhoneRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyPhoneRequest | PlainMessage<GetMyPhoneRequest> | undefined, b: GetMyPhoneRequest | PlainMessage<GetMyPhoneRequest> | undefined): boolean {
    return proto3.util.equals(GetMyPhoneRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.GetMyPhoneResponse
 */
export class GetMyPhoneResponse extends Message<GetMyPhoneResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.user.v1.Phone phone = 2;
   */
  phone?: Phone;

  constructor(data?: PartialMessage<GetMyPhoneResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyPhoneResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "phone", kind: "message", T: Phone },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyPhoneResponse {
    return new GetMyPhoneResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyPhoneResponse {
    return new GetMyPhoneResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyPhoneResponse {
    return new GetMyPhoneResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyPhoneResponse | PlainMessage<GetMyPhoneResponse> | undefined, b: GetMyPhoneResponse | PlainMessage<GetMyPhoneResponse> | undefined): boolean {
    return proto3.util.equals(GetMyPhoneResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.SetMyPhoneRequest
 */
export class SetMyPhoneRequest extends Message<SetMyPhoneRequest> {
  /**
   * @generated from field: string phone = 1;
   */
  phone = "";

  constructor(data?: PartialMessage<SetMyPhoneRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.SetMyPhoneRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetMyPhoneRequest {
    return new SetMyPhoneRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetMyPhoneRequest {
    return new SetMyPhoneRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetMyPhoneRequest {
    return new SetMyPhoneRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetMyPhoneRequest | PlainMessage<SetMyPhoneRequest> | undefined, b: SetMyPhoneRequest | PlainMessage<SetMyPhoneRequest> | undefined): boolean {
    return proto3.util.equals(SetMyPhoneRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.SetMyPhoneResponse
 */
export class SetMyPhoneResponse extends Message<SetMyPhoneResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SetMyPhoneResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.SetMyPhoneResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetMyPhoneResponse {
    return new SetMyPhoneResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetMyPhoneResponse {
    return new SetMyPhoneResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetMyPhoneResponse {
    return new SetMyPhoneResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetMyPhoneResponse | PlainMessage<SetMyPhoneResponse> | undefined, b: SetMyPhoneResponse | PlainMessage<SetMyPhoneResponse> | undefined): boolean {
    return proto3.util.equals(SetMyPhoneResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.VerifyMyPhoneRequest
 */
export class VerifyMyPhoneRequest extends Message<VerifyMyPhoneRequest> {
  /**
   * @generated from field: string code = 1;
   */
  code = "";

  constructor(data?: PartialMessage<VerifyMyPhoneRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.VerifyMyPhoneRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyMyPhoneRequest {
    return new VerifyMyPhoneRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyMyPhoneRequest {
    return new VerifyMyPhoneRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyMyPhoneRequest {
    return new VerifyMyPhoneRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyMyPhoneRequest | PlainMessage<VerifyMyPhoneRequest> | undefined, b: VerifyMyPhoneRequest | PlainMessage<VerifyMyPhoneRequest> | undefined): boolean {
    return proto3.util.equals(VerifyMyPhoneRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.VerifyMyPhoneResponse
 */
export class VerifyMyPhoneResponse extends Message<VerifyMyPhoneResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<VerifyMyPhoneResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.VerifyMyPhoneResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyMyPhoneResponse {
    return new VerifyMyPhoneResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyMyPhoneResponse {
    return new VerifyMyPhoneResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyMyPhoneResponse {
    return new VerifyMyPhoneResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyMyPhoneResponse | PlainMessage<VerifyMyPhoneResponse> | undefined, b: VerifyMyPhoneResponse | PlainMessage<VerifyMyPhoneResponse> | undefined): boolean {
    return proto3.util.equals(VerifyMyPhoneResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.ResendMyPhoneVerificationRequest
 */
export class ResendMyPhoneVerificationRequest extends Message<ResendMyPhoneVerificationRequest> {
  constructor(data?: PartialMessage<ResendMyPhoneVerificationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ResendMyPhoneVerificationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendMyPhoneVerificationRequest {
    return new ResendMyPhoneVerificationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendMyPhoneVerificationRequest {
    return new ResendMyPhoneVerificationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendMyPhoneVerificationRequest {
    return new ResendMyPhoneVerificationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResendMyPhoneVerificationRequest | PlainMessage<ResendMyPhoneVerificationRequest> | undefined, b: ResendMyPhoneVerificationRequest | PlainMessage<ResendMyPhoneVerificationRequest> | undefined): boolean {
    return proto3.util.equals(ResendMyPhoneVerificationRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ResendMyPhoneVerificationResponse
 */
export class ResendMyPhoneVerificationResponse extends Message<ResendMyPhoneVerificationResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<ResendMyPhoneVerificationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ResendMyPhoneVerificationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResendMyPhoneVerificationResponse {
    return new ResendMyPhoneVerificationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResendMyPhoneVerificationResponse {
    return new ResendMyPhoneVerificationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResendMyPhoneVerificationResponse {
    return new ResendMyPhoneVerificationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResendMyPhoneVerificationResponse | PlainMessage<ResendMyPhoneVerificationResponse> | undefined, b: ResendMyPhoneVerificationResponse | PlainMessage<ResendMyPhoneVerificationResponse> | undefined): boolean {
    return proto3.util.equals(ResendMyPhoneVerificationResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.RemoveMyPhoneRequest
 */
export class RemoveMyPhoneRequest extends Message<RemoveMyPhoneRequest> {
  constructor(data?: PartialMessage<RemoveMyPhoneRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyPhoneRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyPhoneRequest {
    return new RemoveMyPhoneRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyPhoneRequest {
    return new RemoveMyPhoneRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyPhoneRequest {
    return new RemoveMyPhoneRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyPhoneRequest | PlainMessage<RemoveMyPhoneRequest> | undefined, b: RemoveMyPhoneRequest | PlainMessage<RemoveMyPhoneRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMyPhoneRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyPhoneResponse
 */
export class RemoveMyPhoneResponse extends Message<RemoveMyPhoneResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMyPhoneResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyPhoneResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyPhoneResponse {
    return new RemoveMyPhoneResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyPhoneResponse {
    return new RemoveMyPhoneResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyPhoneResponse {
    return new RemoveMyPhoneResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyPhoneResponse | PlainMessage<RemoveMyPhoneResponse> | undefined, b: RemoveMyPhoneResponse | PlainMessage<RemoveMyPhoneResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMyPhoneResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.RemoveMyAvatarRequest
 */
export class RemoveMyAvatarRequest extends Message<RemoveMyAvatarRequest> {
  constructor(data?: PartialMessage<RemoveMyAvatarRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyAvatarRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyAvatarRequest {
    return new RemoveMyAvatarRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyAvatarRequest {
    return new RemoveMyAvatarRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyAvatarRequest {
    return new RemoveMyAvatarRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyAvatarRequest | PlainMessage<RemoveMyAvatarRequest> | undefined, b: RemoveMyAvatarRequest | PlainMessage<RemoveMyAvatarRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMyAvatarRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyAvatarResponse
 */
export class RemoveMyAvatarResponse extends Message<RemoveMyAvatarResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMyAvatarResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyAvatarResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyAvatarResponse {
    return new RemoveMyAvatarResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyAvatarResponse {
    return new RemoveMyAvatarResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyAvatarResponse {
    return new RemoveMyAvatarResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyAvatarResponse | PlainMessage<RemoveMyAvatarResponse> | undefined, b: RemoveMyAvatarResponse | PlainMessage<RemoveMyAvatarResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMyAvatarResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyLinkedIDPsRequest
 */
export class ListMyLinkedIDPsRequest extends Message<ListMyLinkedIDPsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  constructor(data?: PartialMessage<ListMyLinkedIDPsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyLinkedIDPsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyLinkedIDPsRequest {
    return new ListMyLinkedIDPsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyLinkedIDPsRequest {
    return new ListMyLinkedIDPsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyLinkedIDPsRequest {
    return new ListMyLinkedIDPsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyLinkedIDPsRequest | PlainMessage<ListMyLinkedIDPsRequest> | undefined, b: ListMyLinkedIDPsRequest | PlainMessage<ListMyLinkedIDPsRequest> | undefined): boolean {
    return proto3.util.equals(ListMyLinkedIDPsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyLinkedIDPsResponse
 */
export class ListMyLinkedIDPsResponse extends Message<ListMyLinkedIDPsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.idp.v1.IDPUserLink result = 2;
   */
  result: IDPUserLink[] = [];

  constructor(data?: PartialMessage<ListMyLinkedIDPsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyLinkedIDPsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: IDPUserLink, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyLinkedIDPsResponse {
    return new ListMyLinkedIDPsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyLinkedIDPsResponse {
    return new ListMyLinkedIDPsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyLinkedIDPsResponse {
    return new ListMyLinkedIDPsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyLinkedIDPsResponse | PlainMessage<ListMyLinkedIDPsResponse> | undefined, b: ListMyLinkedIDPsResponse | PlainMessage<ListMyLinkedIDPsResponse> | undefined): boolean {
    return proto3.util.equals(ListMyLinkedIDPsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyLinkedIDPRequest
 */
export class RemoveMyLinkedIDPRequest extends Message<RemoveMyLinkedIDPRequest> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId = "";

  /**
   * @generated from field: string linked_user_id = 2;
   */
  linkedUserId = "";

  constructor(data?: PartialMessage<RemoveMyLinkedIDPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyLinkedIDPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "linked_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyLinkedIDPRequest {
    return new RemoveMyLinkedIDPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyLinkedIDPRequest {
    return new RemoveMyLinkedIDPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyLinkedIDPRequest {
    return new RemoveMyLinkedIDPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyLinkedIDPRequest | PlainMessage<RemoveMyLinkedIDPRequest> | undefined, b: RemoveMyLinkedIDPRequest | PlainMessage<RemoveMyLinkedIDPRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMyLinkedIDPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyLinkedIDPResponse
 */
export class RemoveMyLinkedIDPResponse extends Message<RemoveMyLinkedIDPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMyLinkedIDPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyLinkedIDPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyLinkedIDPResponse {
    return new RemoveMyLinkedIDPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyLinkedIDPResponse {
    return new RemoveMyLinkedIDPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyLinkedIDPResponse {
    return new RemoveMyLinkedIDPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyLinkedIDPResponse | PlainMessage<RemoveMyLinkedIDPResponse> | undefined, b: RemoveMyLinkedIDPResponse | PlainMessage<RemoveMyLinkedIDPResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMyLinkedIDPResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.ListMyAuthFactorsRequest
 */
export class ListMyAuthFactorsRequest extends Message<ListMyAuthFactorsRequest> {
  constructor(data?: PartialMessage<ListMyAuthFactorsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyAuthFactorsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyAuthFactorsRequest {
    return new ListMyAuthFactorsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyAuthFactorsRequest {
    return new ListMyAuthFactorsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyAuthFactorsRequest {
    return new ListMyAuthFactorsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyAuthFactorsRequest | PlainMessage<ListMyAuthFactorsRequest> | undefined, b: ListMyAuthFactorsRequest | PlainMessage<ListMyAuthFactorsRequest> | undefined): boolean {
    return proto3.util.equals(ListMyAuthFactorsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyAuthFactorsResponse
 */
export class ListMyAuthFactorsResponse extends Message<ListMyAuthFactorsResponse> {
  /**
   * @generated from field: repeated zitadel.user.v1.AuthFactor result = 1;
   */
  result: AuthFactor[] = [];

  constructor(data?: PartialMessage<ListMyAuthFactorsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyAuthFactorsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: AuthFactor, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyAuthFactorsResponse {
    return new ListMyAuthFactorsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyAuthFactorsResponse {
    return new ListMyAuthFactorsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyAuthFactorsResponse {
    return new ListMyAuthFactorsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyAuthFactorsResponse | PlainMessage<ListMyAuthFactorsResponse> | undefined, b: ListMyAuthFactorsResponse | PlainMessage<ListMyAuthFactorsResponse> | undefined): boolean {
    return proto3.util.equals(ListMyAuthFactorsResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.AddMyAuthFactorU2FRequest
 */
export class AddMyAuthFactorU2FRequest extends Message<AddMyAuthFactorU2FRequest> {
  constructor(data?: PartialMessage<AddMyAuthFactorU2FRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.AddMyAuthFactorU2FRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMyAuthFactorU2FRequest {
    return new AddMyAuthFactorU2FRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMyAuthFactorU2FRequest {
    return new AddMyAuthFactorU2FRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMyAuthFactorU2FRequest {
    return new AddMyAuthFactorU2FRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddMyAuthFactorU2FRequest | PlainMessage<AddMyAuthFactorU2FRequest> | undefined, b: AddMyAuthFactorU2FRequest | PlainMessage<AddMyAuthFactorU2FRequest> | undefined): boolean {
    return proto3.util.equals(AddMyAuthFactorU2FRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.AddMyAuthFactorU2FResponse
 */
export class AddMyAuthFactorU2FResponse extends Message<AddMyAuthFactorU2FResponse> {
  /**
   * @generated from field: zitadel.user.v1.WebAuthNKey key = 1;
   */
  key?: WebAuthNKey;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddMyAuthFactorU2FResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.AddMyAuthFactorU2FResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "message", T: WebAuthNKey },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMyAuthFactorU2FResponse {
    return new AddMyAuthFactorU2FResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMyAuthFactorU2FResponse {
    return new AddMyAuthFactorU2FResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMyAuthFactorU2FResponse {
    return new AddMyAuthFactorU2FResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddMyAuthFactorU2FResponse | PlainMessage<AddMyAuthFactorU2FResponse> | undefined, b: AddMyAuthFactorU2FResponse | PlainMessage<AddMyAuthFactorU2FResponse> | undefined): boolean {
    return proto3.util.equals(AddMyAuthFactorU2FResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.AddMyAuthFactorOTPRequest
 */
export class AddMyAuthFactorOTPRequest extends Message<AddMyAuthFactorOTPRequest> {
  constructor(data?: PartialMessage<AddMyAuthFactorOTPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.AddMyAuthFactorOTPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMyAuthFactorOTPRequest {
    return new AddMyAuthFactorOTPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMyAuthFactorOTPRequest {
    return new AddMyAuthFactorOTPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMyAuthFactorOTPRequest {
    return new AddMyAuthFactorOTPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddMyAuthFactorOTPRequest | PlainMessage<AddMyAuthFactorOTPRequest> | undefined, b: AddMyAuthFactorOTPRequest | PlainMessage<AddMyAuthFactorOTPRequest> | undefined): boolean {
    return proto3.util.equals(AddMyAuthFactorOTPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.AddMyAuthFactorOTPResponse
 */
export class AddMyAuthFactorOTPResponse extends Message<AddMyAuthFactorOTPResponse> {
  /**
   * @generated from field: string url = 1;
   */
  url = "";

  /**
   * @generated from field: string secret = 2;
   */
  secret = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 3;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddMyAuthFactorOTPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.AddMyAuthFactorOTPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMyAuthFactorOTPResponse {
    return new AddMyAuthFactorOTPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMyAuthFactorOTPResponse {
    return new AddMyAuthFactorOTPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMyAuthFactorOTPResponse {
    return new AddMyAuthFactorOTPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddMyAuthFactorOTPResponse | PlainMessage<AddMyAuthFactorOTPResponse> | undefined, b: AddMyAuthFactorOTPResponse | PlainMessage<AddMyAuthFactorOTPResponse> | undefined): boolean {
    return proto3.util.equals(AddMyAuthFactorOTPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.VerifyMyAuthFactorOTPRequest
 */
export class VerifyMyAuthFactorOTPRequest extends Message<VerifyMyAuthFactorOTPRequest> {
  /**
   * @generated from field: string code = 1;
   */
  code = "";

  constructor(data?: PartialMessage<VerifyMyAuthFactorOTPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.VerifyMyAuthFactorOTPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyMyAuthFactorOTPRequest {
    return new VerifyMyAuthFactorOTPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyMyAuthFactorOTPRequest {
    return new VerifyMyAuthFactorOTPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyMyAuthFactorOTPRequest {
    return new VerifyMyAuthFactorOTPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyMyAuthFactorOTPRequest | PlainMessage<VerifyMyAuthFactorOTPRequest> | undefined, b: VerifyMyAuthFactorOTPRequest | PlainMessage<VerifyMyAuthFactorOTPRequest> | undefined): boolean {
    return proto3.util.equals(VerifyMyAuthFactorOTPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.VerifyMyAuthFactorOTPResponse
 */
export class VerifyMyAuthFactorOTPResponse extends Message<VerifyMyAuthFactorOTPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<VerifyMyAuthFactorOTPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.VerifyMyAuthFactorOTPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyMyAuthFactorOTPResponse {
    return new VerifyMyAuthFactorOTPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyMyAuthFactorOTPResponse {
    return new VerifyMyAuthFactorOTPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyMyAuthFactorOTPResponse {
    return new VerifyMyAuthFactorOTPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyMyAuthFactorOTPResponse | PlainMessage<VerifyMyAuthFactorOTPResponse> | undefined, b: VerifyMyAuthFactorOTPResponse | PlainMessage<VerifyMyAuthFactorOTPResponse> | undefined): boolean {
    return proto3.util.equals(VerifyMyAuthFactorOTPResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.VerifyMyAuthFactorU2FRequest
 */
export class VerifyMyAuthFactorU2FRequest extends Message<VerifyMyAuthFactorU2FRequest> {
  /**
   * @generated from field: zitadel.user.v1.WebAuthNVerification verification = 1;
   */
  verification?: WebAuthNVerification;

  constructor(data?: PartialMessage<VerifyMyAuthFactorU2FRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.VerifyMyAuthFactorU2FRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "verification", kind: "message", T: WebAuthNVerification },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyMyAuthFactorU2FRequest {
    return new VerifyMyAuthFactorU2FRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyMyAuthFactorU2FRequest {
    return new VerifyMyAuthFactorU2FRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyMyAuthFactorU2FRequest {
    return new VerifyMyAuthFactorU2FRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyMyAuthFactorU2FRequest | PlainMessage<VerifyMyAuthFactorU2FRequest> | undefined, b: VerifyMyAuthFactorU2FRequest | PlainMessage<VerifyMyAuthFactorU2FRequest> | undefined): boolean {
    return proto3.util.equals(VerifyMyAuthFactorU2FRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.VerifyMyAuthFactorU2FResponse
 */
export class VerifyMyAuthFactorU2FResponse extends Message<VerifyMyAuthFactorU2FResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<VerifyMyAuthFactorU2FResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.VerifyMyAuthFactorU2FResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyMyAuthFactorU2FResponse {
    return new VerifyMyAuthFactorU2FResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyMyAuthFactorU2FResponse {
    return new VerifyMyAuthFactorU2FResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyMyAuthFactorU2FResponse {
    return new VerifyMyAuthFactorU2FResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyMyAuthFactorU2FResponse | PlainMessage<VerifyMyAuthFactorU2FResponse> | undefined, b: VerifyMyAuthFactorU2FResponse | PlainMessage<VerifyMyAuthFactorU2FResponse> | undefined): boolean {
    return proto3.util.equals(VerifyMyAuthFactorU2FResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.RemoveMyAuthFactorOTPRequest
 */
export class RemoveMyAuthFactorOTPRequest extends Message<RemoveMyAuthFactorOTPRequest> {
  constructor(data?: PartialMessage<RemoveMyAuthFactorOTPRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyAuthFactorOTPRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyAuthFactorOTPRequest {
    return new RemoveMyAuthFactorOTPRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorOTPRequest {
    return new RemoveMyAuthFactorOTPRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorOTPRequest {
    return new RemoveMyAuthFactorOTPRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyAuthFactorOTPRequest | PlainMessage<RemoveMyAuthFactorOTPRequest> | undefined, b: RemoveMyAuthFactorOTPRequest | PlainMessage<RemoveMyAuthFactorOTPRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMyAuthFactorOTPRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyAuthFactorOTPResponse
 */
export class RemoveMyAuthFactorOTPResponse extends Message<RemoveMyAuthFactorOTPResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMyAuthFactorOTPResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyAuthFactorOTPResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyAuthFactorOTPResponse {
    return new RemoveMyAuthFactorOTPResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorOTPResponse {
    return new RemoveMyAuthFactorOTPResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorOTPResponse {
    return new RemoveMyAuthFactorOTPResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyAuthFactorOTPResponse | PlainMessage<RemoveMyAuthFactorOTPResponse> | undefined, b: RemoveMyAuthFactorOTPResponse | PlainMessage<RemoveMyAuthFactorOTPResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMyAuthFactorOTPResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.AddMyAuthFactorOTPSMSRequest
 */
export class AddMyAuthFactorOTPSMSRequest extends Message<AddMyAuthFactorOTPSMSRequest> {
  constructor(data?: PartialMessage<AddMyAuthFactorOTPSMSRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.AddMyAuthFactorOTPSMSRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMyAuthFactorOTPSMSRequest {
    return new AddMyAuthFactorOTPSMSRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMyAuthFactorOTPSMSRequest {
    return new AddMyAuthFactorOTPSMSRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMyAuthFactorOTPSMSRequest {
    return new AddMyAuthFactorOTPSMSRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddMyAuthFactorOTPSMSRequest | PlainMessage<AddMyAuthFactorOTPSMSRequest> | undefined, b: AddMyAuthFactorOTPSMSRequest | PlainMessage<AddMyAuthFactorOTPSMSRequest> | undefined): boolean {
    return proto3.util.equals(AddMyAuthFactorOTPSMSRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.AddMyAuthFactorOTPSMSResponse
 */
export class AddMyAuthFactorOTPSMSResponse extends Message<AddMyAuthFactorOTPSMSResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddMyAuthFactorOTPSMSResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.AddMyAuthFactorOTPSMSResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMyAuthFactorOTPSMSResponse {
    return new AddMyAuthFactorOTPSMSResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMyAuthFactorOTPSMSResponse {
    return new AddMyAuthFactorOTPSMSResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMyAuthFactorOTPSMSResponse {
    return new AddMyAuthFactorOTPSMSResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddMyAuthFactorOTPSMSResponse | PlainMessage<AddMyAuthFactorOTPSMSResponse> | undefined, b: AddMyAuthFactorOTPSMSResponse | PlainMessage<AddMyAuthFactorOTPSMSResponse> | undefined): boolean {
    return proto3.util.equals(AddMyAuthFactorOTPSMSResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.RemoveMyAuthFactorOTPSMSRequest
 */
export class RemoveMyAuthFactorOTPSMSRequest extends Message<RemoveMyAuthFactorOTPSMSRequest> {
  constructor(data?: PartialMessage<RemoveMyAuthFactorOTPSMSRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyAuthFactorOTPSMSRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyAuthFactorOTPSMSRequest {
    return new RemoveMyAuthFactorOTPSMSRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorOTPSMSRequest {
    return new RemoveMyAuthFactorOTPSMSRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorOTPSMSRequest {
    return new RemoveMyAuthFactorOTPSMSRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyAuthFactorOTPSMSRequest | PlainMessage<RemoveMyAuthFactorOTPSMSRequest> | undefined, b: RemoveMyAuthFactorOTPSMSRequest | PlainMessage<RemoveMyAuthFactorOTPSMSRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMyAuthFactorOTPSMSRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyAuthFactorOTPSMSResponse
 */
export class RemoveMyAuthFactorOTPSMSResponse extends Message<RemoveMyAuthFactorOTPSMSResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMyAuthFactorOTPSMSResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyAuthFactorOTPSMSResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyAuthFactorOTPSMSResponse {
    return new RemoveMyAuthFactorOTPSMSResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorOTPSMSResponse {
    return new RemoveMyAuthFactorOTPSMSResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorOTPSMSResponse {
    return new RemoveMyAuthFactorOTPSMSResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyAuthFactorOTPSMSResponse | PlainMessage<RemoveMyAuthFactorOTPSMSResponse> | undefined, b: RemoveMyAuthFactorOTPSMSResponse | PlainMessage<RemoveMyAuthFactorOTPSMSResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMyAuthFactorOTPSMSResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.AddMyAuthFactorOTPEmailRequest
 */
export class AddMyAuthFactorOTPEmailRequest extends Message<AddMyAuthFactorOTPEmailRequest> {
  constructor(data?: PartialMessage<AddMyAuthFactorOTPEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.AddMyAuthFactorOTPEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMyAuthFactorOTPEmailRequest {
    return new AddMyAuthFactorOTPEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMyAuthFactorOTPEmailRequest {
    return new AddMyAuthFactorOTPEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMyAuthFactorOTPEmailRequest {
    return new AddMyAuthFactorOTPEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddMyAuthFactorOTPEmailRequest | PlainMessage<AddMyAuthFactorOTPEmailRequest> | undefined, b: AddMyAuthFactorOTPEmailRequest | PlainMessage<AddMyAuthFactorOTPEmailRequest> | undefined): boolean {
    return proto3.util.equals(AddMyAuthFactorOTPEmailRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.AddMyAuthFactorOTPEmailResponse
 */
export class AddMyAuthFactorOTPEmailResponse extends Message<AddMyAuthFactorOTPEmailResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddMyAuthFactorOTPEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.AddMyAuthFactorOTPEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMyAuthFactorOTPEmailResponse {
    return new AddMyAuthFactorOTPEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMyAuthFactorOTPEmailResponse {
    return new AddMyAuthFactorOTPEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMyAuthFactorOTPEmailResponse {
    return new AddMyAuthFactorOTPEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddMyAuthFactorOTPEmailResponse | PlainMessage<AddMyAuthFactorOTPEmailResponse> | undefined, b: AddMyAuthFactorOTPEmailResponse | PlainMessage<AddMyAuthFactorOTPEmailResponse> | undefined): boolean {
    return proto3.util.equals(AddMyAuthFactorOTPEmailResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.RemoveMyAuthFactorOTPEmailRequest
 */
export class RemoveMyAuthFactorOTPEmailRequest extends Message<RemoveMyAuthFactorOTPEmailRequest> {
  constructor(data?: PartialMessage<RemoveMyAuthFactorOTPEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyAuthFactorOTPEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyAuthFactorOTPEmailRequest {
    return new RemoveMyAuthFactorOTPEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorOTPEmailRequest {
    return new RemoveMyAuthFactorOTPEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorOTPEmailRequest {
    return new RemoveMyAuthFactorOTPEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyAuthFactorOTPEmailRequest | PlainMessage<RemoveMyAuthFactorOTPEmailRequest> | undefined, b: RemoveMyAuthFactorOTPEmailRequest | PlainMessage<RemoveMyAuthFactorOTPEmailRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMyAuthFactorOTPEmailRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyAuthFactorOTPEmailResponse
 */
export class RemoveMyAuthFactorOTPEmailResponse extends Message<RemoveMyAuthFactorOTPEmailResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMyAuthFactorOTPEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyAuthFactorOTPEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyAuthFactorOTPEmailResponse {
    return new RemoveMyAuthFactorOTPEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorOTPEmailResponse {
    return new RemoveMyAuthFactorOTPEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorOTPEmailResponse {
    return new RemoveMyAuthFactorOTPEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyAuthFactorOTPEmailResponse | PlainMessage<RemoveMyAuthFactorOTPEmailResponse> | undefined, b: RemoveMyAuthFactorOTPEmailResponse | PlainMessage<RemoveMyAuthFactorOTPEmailResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMyAuthFactorOTPEmailResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyAuthFactorU2FRequest
 */
export class RemoveMyAuthFactorU2FRequest extends Message<RemoveMyAuthFactorU2FRequest> {
  /**
   * @generated from field: string token_id = 1;
   */
  tokenId = "";

  constructor(data?: PartialMessage<RemoveMyAuthFactorU2FRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyAuthFactorU2FRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyAuthFactorU2FRequest {
    return new RemoveMyAuthFactorU2FRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorU2FRequest {
    return new RemoveMyAuthFactorU2FRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorU2FRequest {
    return new RemoveMyAuthFactorU2FRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyAuthFactorU2FRequest | PlainMessage<RemoveMyAuthFactorU2FRequest> | undefined, b: RemoveMyAuthFactorU2FRequest | PlainMessage<RemoveMyAuthFactorU2FRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMyAuthFactorU2FRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyAuthFactorU2FResponse
 */
export class RemoveMyAuthFactorU2FResponse extends Message<RemoveMyAuthFactorU2FResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMyAuthFactorU2FResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyAuthFactorU2FResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyAuthFactorU2FResponse {
    return new RemoveMyAuthFactorU2FResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorU2FResponse {
    return new RemoveMyAuthFactorU2FResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyAuthFactorU2FResponse {
    return new RemoveMyAuthFactorU2FResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyAuthFactorU2FResponse | PlainMessage<RemoveMyAuthFactorU2FResponse> | undefined, b: RemoveMyAuthFactorU2FResponse | PlainMessage<RemoveMyAuthFactorU2FResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMyAuthFactorU2FResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.ListMyPasswordlessRequest
 */
export class ListMyPasswordlessRequest extends Message<ListMyPasswordlessRequest> {
  constructor(data?: PartialMessage<ListMyPasswordlessRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyPasswordlessRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyPasswordlessRequest {
    return new ListMyPasswordlessRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyPasswordlessRequest {
    return new ListMyPasswordlessRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyPasswordlessRequest {
    return new ListMyPasswordlessRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyPasswordlessRequest | PlainMessage<ListMyPasswordlessRequest> | undefined, b: ListMyPasswordlessRequest | PlainMessage<ListMyPasswordlessRequest> | undefined): boolean {
    return proto3.util.equals(ListMyPasswordlessRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyPasswordlessResponse
 */
export class ListMyPasswordlessResponse extends Message<ListMyPasswordlessResponse> {
  /**
   * @generated from field: repeated zitadel.user.v1.WebAuthNToken result = 1;
   */
  result: WebAuthNToken[] = [];

  constructor(data?: PartialMessage<ListMyPasswordlessResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyPasswordlessResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: WebAuthNToken, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyPasswordlessResponse {
    return new ListMyPasswordlessResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyPasswordlessResponse {
    return new ListMyPasswordlessResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyPasswordlessResponse {
    return new ListMyPasswordlessResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyPasswordlessResponse | PlainMessage<ListMyPasswordlessResponse> | undefined, b: ListMyPasswordlessResponse | PlainMessage<ListMyPasswordlessResponse> | undefined): boolean {
    return proto3.util.equals(ListMyPasswordlessResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.AddMyPasswordlessRequest
 */
export class AddMyPasswordlessRequest extends Message<AddMyPasswordlessRequest> {
  constructor(data?: PartialMessage<AddMyPasswordlessRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.AddMyPasswordlessRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMyPasswordlessRequest {
    return new AddMyPasswordlessRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMyPasswordlessRequest {
    return new AddMyPasswordlessRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMyPasswordlessRequest {
    return new AddMyPasswordlessRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddMyPasswordlessRequest | PlainMessage<AddMyPasswordlessRequest> | undefined, b: AddMyPasswordlessRequest | PlainMessage<AddMyPasswordlessRequest> | undefined): boolean {
    return proto3.util.equals(AddMyPasswordlessRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.AddMyPasswordlessResponse
 */
export class AddMyPasswordlessResponse extends Message<AddMyPasswordlessResponse> {
  /**
   * @generated from field: zitadel.user.v1.WebAuthNKey key = 1;
   */
  key?: WebAuthNKey;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<AddMyPasswordlessResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.AddMyPasswordlessResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "message", T: WebAuthNKey },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMyPasswordlessResponse {
    return new AddMyPasswordlessResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMyPasswordlessResponse {
    return new AddMyPasswordlessResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMyPasswordlessResponse {
    return new AddMyPasswordlessResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddMyPasswordlessResponse | PlainMessage<AddMyPasswordlessResponse> | undefined, b: AddMyPasswordlessResponse | PlainMessage<AddMyPasswordlessResponse> | undefined): boolean {
    return proto3.util.equals(AddMyPasswordlessResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.AddMyPasswordlessLinkRequest
 */
export class AddMyPasswordlessLinkRequest extends Message<AddMyPasswordlessLinkRequest> {
  constructor(data?: PartialMessage<AddMyPasswordlessLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.AddMyPasswordlessLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMyPasswordlessLinkRequest {
    return new AddMyPasswordlessLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMyPasswordlessLinkRequest {
    return new AddMyPasswordlessLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMyPasswordlessLinkRequest {
    return new AddMyPasswordlessLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddMyPasswordlessLinkRequest | PlainMessage<AddMyPasswordlessLinkRequest> | undefined, b: AddMyPasswordlessLinkRequest | PlainMessage<AddMyPasswordlessLinkRequest> | undefined): boolean {
    return proto3.util.equals(AddMyPasswordlessLinkRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.AddMyPasswordlessLinkResponse
 */
export class AddMyPasswordlessLinkResponse extends Message<AddMyPasswordlessLinkResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string link = 2;
   */
  link = "";

  /**
   * @generated from field: google.protobuf.Duration expiration = 3;
   */
  expiration?: Duration;

  constructor(data?: PartialMessage<AddMyPasswordlessLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.AddMyPasswordlessLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
    { no: 2, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "expiration", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMyPasswordlessLinkResponse {
    return new AddMyPasswordlessLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMyPasswordlessLinkResponse {
    return new AddMyPasswordlessLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMyPasswordlessLinkResponse {
    return new AddMyPasswordlessLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddMyPasswordlessLinkResponse | PlainMessage<AddMyPasswordlessLinkResponse> | undefined, b: AddMyPasswordlessLinkResponse | PlainMessage<AddMyPasswordlessLinkResponse> | undefined): boolean {
    return proto3.util.equals(AddMyPasswordlessLinkResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.SendMyPasswordlessLinkRequest
 */
export class SendMyPasswordlessLinkRequest extends Message<SendMyPasswordlessLinkRequest> {
  constructor(data?: PartialMessage<SendMyPasswordlessLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.SendMyPasswordlessLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendMyPasswordlessLinkRequest {
    return new SendMyPasswordlessLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendMyPasswordlessLinkRequest {
    return new SendMyPasswordlessLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendMyPasswordlessLinkRequest {
    return new SendMyPasswordlessLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendMyPasswordlessLinkRequest | PlainMessage<SendMyPasswordlessLinkRequest> | undefined, b: SendMyPasswordlessLinkRequest | PlainMessage<SendMyPasswordlessLinkRequest> | undefined): boolean {
    return proto3.util.equals(SendMyPasswordlessLinkRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.SendMyPasswordlessLinkResponse
 */
export class SendMyPasswordlessLinkResponse extends Message<SendMyPasswordlessLinkResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<SendMyPasswordlessLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.SendMyPasswordlessLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendMyPasswordlessLinkResponse {
    return new SendMyPasswordlessLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendMyPasswordlessLinkResponse {
    return new SendMyPasswordlessLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendMyPasswordlessLinkResponse {
    return new SendMyPasswordlessLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendMyPasswordlessLinkResponse | PlainMessage<SendMyPasswordlessLinkResponse> | undefined, b: SendMyPasswordlessLinkResponse | PlainMessage<SendMyPasswordlessLinkResponse> | undefined): boolean {
    return proto3.util.equals(SendMyPasswordlessLinkResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.VerifyMyPasswordlessRequest
 */
export class VerifyMyPasswordlessRequest extends Message<VerifyMyPasswordlessRequest> {
  /**
   * @generated from field: zitadel.user.v1.WebAuthNVerification verification = 1;
   */
  verification?: WebAuthNVerification;

  constructor(data?: PartialMessage<VerifyMyPasswordlessRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.VerifyMyPasswordlessRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "verification", kind: "message", T: WebAuthNVerification },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyMyPasswordlessRequest {
    return new VerifyMyPasswordlessRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyMyPasswordlessRequest {
    return new VerifyMyPasswordlessRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyMyPasswordlessRequest {
    return new VerifyMyPasswordlessRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyMyPasswordlessRequest | PlainMessage<VerifyMyPasswordlessRequest> | undefined, b: VerifyMyPasswordlessRequest | PlainMessage<VerifyMyPasswordlessRequest> | undefined): boolean {
    return proto3.util.equals(VerifyMyPasswordlessRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.VerifyMyPasswordlessResponse
 */
export class VerifyMyPasswordlessResponse extends Message<VerifyMyPasswordlessResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<VerifyMyPasswordlessResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.VerifyMyPasswordlessResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyMyPasswordlessResponse {
    return new VerifyMyPasswordlessResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyMyPasswordlessResponse {
    return new VerifyMyPasswordlessResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyMyPasswordlessResponse {
    return new VerifyMyPasswordlessResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyMyPasswordlessResponse | PlainMessage<VerifyMyPasswordlessResponse> | undefined, b: VerifyMyPasswordlessResponse | PlainMessage<VerifyMyPasswordlessResponse> | undefined): boolean {
    return proto3.util.equals(VerifyMyPasswordlessResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyPasswordlessRequest
 */
export class RemoveMyPasswordlessRequest extends Message<RemoveMyPasswordlessRequest> {
  /**
   * @generated from field: string token_id = 1;
   */
  tokenId = "";

  constructor(data?: PartialMessage<RemoveMyPasswordlessRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyPasswordlessRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyPasswordlessRequest {
    return new RemoveMyPasswordlessRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyPasswordlessRequest {
    return new RemoveMyPasswordlessRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyPasswordlessRequest {
    return new RemoveMyPasswordlessRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyPasswordlessRequest | PlainMessage<RemoveMyPasswordlessRequest> | undefined, b: RemoveMyPasswordlessRequest | PlainMessage<RemoveMyPasswordlessRequest> | undefined): boolean {
    return proto3.util.equals(RemoveMyPasswordlessRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.RemoveMyPasswordlessResponse
 */
export class RemoveMyPasswordlessResponse extends Message<RemoveMyPasswordlessResponse> {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  constructor(data?: PartialMessage<RemoveMyPasswordlessResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.RemoveMyPasswordlessResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ObjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMyPasswordlessResponse {
    return new RemoveMyPasswordlessResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMyPasswordlessResponse {
    return new RemoveMyPasswordlessResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMyPasswordlessResponse {
    return new RemoveMyPasswordlessResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveMyPasswordlessResponse | PlainMessage<RemoveMyPasswordlessResponse> | undefined, b: RemoveMyPasswordlessResponse | PlainMessage<RemoveMyPasswordlessResponse> | undefined): boolean {
    return proto3.util.equals(RemoveMyPasswordlessResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyUserGrantsRequest
 */
export class ListMyUserGrantsRequest extends Message<ListMyUserGrantsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  constructor(data?: PartialMessage<ListMyUserGrantsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyUserGrantsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyUserGrantsRequest {
    return new ListMyUserGrantsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyUserGrantsRequest {
    return new ListMyUserGrantsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyUserGrantsRequest {
    return new ListMyUserGrantsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyUserGrantsRequest | PlainMessage<ListMyUserGrantsRequest> | undefined, b: ListMyUserGrantsRequest | PlainMessage<ListMyUserGrantsRequest> | undefined): boolean {
    return proto3.util.equals(ListMyUserGrantsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyUserGrantsResponse
 */
export class ListMyUserGrantsResponse extends Message<ListMyUserGrantsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.auth.v1.UserGrant result = 2;
   */
  result: UserGrant[] = [];

  constructor(data?: PartialMessage<ListMyUserGrantsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyUserGrantsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: UserGrant, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyUserGrantsResponse {
    return new ListMyUserGrantsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyUserGrantsResponse {
    return new ListMyUserGrantsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyUserGrantsResponse {
    return new ListMyUserGrantsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyUserGrantsResponse | PlainMessage<ListMyUserGrantsResponse> | undefined, b: ListMyUserGrantsResponse | PlainMessage<ListMyUserGrantsResponse> | undefined): boolean {
    return proto3.util.equals(ListMyUserGrantsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.UserGrant
 */
export class UserGrant extends Message<UserGrant> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: string project_id = 2;
   */
  projectId = "";

  /**
   * @generated from field: string user_id = 3;
   */
  userId = "";

  /**
   * Deprecated: user role_keys
   *
   * @generated from field: repeated string roles = 4;
   */
  roles: string[] = [];

  /**
   * @generated from field: string org_name = 5;
   */
  orgName = "";

  /**
   * @generated from field: string grant_id = 6;
   */
  grantId = "";

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 7;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string org_domain = 8;
   */
  orgDomain = "";

  /**
   * @generated from field: string project_name = 9;
   */
  projectName = "";

  /**
   * @generated from field: string project_grant_id = 10;
   */
  projectGrantId = "";

  /**
   * @generated from field: repeated string role_keys = 11;
   */
  roleKeys: string[] = [];

  /**
   * @generated from field: zitadel.user.v1.Type user_type = 12;
   */
  userType = Type.UNSPECIFIED;

  constructor(data?: PartialMessage<UserGrant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.UserGrant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "org_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "details", kind: "message", T: ObjectDetails },
    { no: 8, name: "org_domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "project_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "project_grant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "role_keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 12, name: "user_type", kind: "enum", T: proto3.getEnumType(Type) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrant {
    return new UserGrant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrant {
    return new UserGrant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrant {
    return new UserGrant().fromJsonString(jsonString, options);
  }

  static equals(a: UserGrant | PlainMessage<UserGrant> | undefined, b: UserGrant | PlainMessage<UserGrant> | undefined): boolean {
    return proto3.util.equals(UserGrant, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyProjectOrgsRequest
 */
export class ListMyProjectOrgsRequest extends Message<ListMyProjectOrgsRequest> {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.org.v1.OrgQuery queries = 2;
   */
  queries: OrgQuery[] = [];

  /**
   * States by which field the results are sorted.
   *
   * @generated from field: zitadel.org.v1.OrgFieldName sorting_column = 3;
   */
  sortingColumn = OrgFieldName.UNSPECIFIED;

  constructor(data?: PartialMessage<ListMyProjectOrgsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyProjectOrgsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: OrgQuery, repeated: true },
    { no: 3, name: "sorting_column", kind: "enum", T: proto3.getEnumType(OrgFieldName) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyProjectOrgsRequest {
    return new ListMyProjectOrgsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyProjectOrgsRequest {
    return new ListMyProjectOrgsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyProjectOrgsRequest {
    return new ListMyProjectOrgsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyProjectOrgsRequest | PlainMessage<ListMyProjectOrgsRequest> | undefined, b: ListMyProjectOrgsRequest | PlainMessage<ListMyProjectOrgsRequest> | undefined): boolean {
    return proto3.util.equals(ListMyProjectOrgsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyProjectOrgsResponse
 */
export class ListMyProjectOrgsResponse extends Message<ListMyProjectOrgsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.org.v1.Org result = 2;
   */
  result: Org[] = [];

  constructor(data?: PartialMessage<ListMyProjectOrgsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyProjectOrgsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Org, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyProjectOrgsResponse {
    return new ListMyProjectOrgsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyProjectOrgsResponse {
    return new ListMyProjectOrgsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyProjectOrgsResponse {
    return new ListMyProjectOrgsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyProjectOrgsResponse | PlainMessage<ListMyProjectOrgsResponse> | undefined, b: ListMyProjectOrgsResponse | PlainMessage<ListMyProjectOrgsResponse> | undefined): boolean {
    return proto3.util.equals(ListMyProjectOrgsResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.ListMyZitadelPermissionsRequest
 */
export class ListMyZitadelPermissionsRequest extends Message<ListMyZitadelPermissionsRequest> {
  constructor(data?: PartialMessage<ListMyZitadelPermissionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyZitadelPermissionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyZitadelPermissionsRequest {
    return new ListMyZitadelPermissionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyZitadelPermissionsRequest {
    return new ListMyZitadelPermissionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyZitadelPermissionsRequest {
    return new ListMyZitadelPermissionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyZitadelPermissionsRequest | PlainMessage<ListMyZitadelPermissionsRequest> | undefined, b: ListMyZitadelPermissionsRequest | PlainMessage<ListMyZitadelPermissionsRequest> | undefined): boolean {
    return proto3.util.equals(ListMyZitadelPermissionsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyZitadelPermissionsResponse
 */
export class ListMyZitadelPermissionsResponse extends Message<ListMyZitadelPermissionsResponse> {
  /**
   * @generated from field: repeated string result = 1;
   */
  result: string[] = [];

  constructor(data?: PartialMessage<ListMyZitadelPermissionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyZitadelPermissionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyZitadelPermissionsResponse {
    return new ListMyZitadelPermissionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyZitadelPermissionsResponse {
    return new ListMyZitadelPermissionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyZitadelPermissionsResponse {
    return new ListMyZitadelPermissionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyZitadelPermissionsResponse | PlainMessage<ListMyZitadelPermissionsResponse> | undefined, b: ListMyZitadelPermissionsResponse | PlainMessage<ListMyZitadelPermissionsResponse> | undefined): boolean {
    return proto3.util.equals(ListMyZitadelPermissionsResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.ListMyProjectPermissionsRequest
 */
export class ListMyProjectPermissionsRequest extends Message<ListMyProjectPermissionsRequest> {
  constructor(data?: PartialMessage<ListMyProjectPermissionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyProjectPermissionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyProjectPermissionsRequest {
    return new ListMyProjectPermissionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyProjectPermissionsRequest {
    return new ListMyProjectPermissionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyProjectPermissionsRequest {
    return new ListMyProjectPermissionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyProjectPermissionsRequest | PlainMessage<ListMyProjectPermissionsRequest> | undefined, b: ListMyProjectPermissionsRequest | PlainMessage<ListMyProjectPermissionsRequest> | undefined): boolean {
    return proto3.util.equals(ListMyProjectPermissionsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyProjectPermissionsResponse
 */
export class ListMyProjectPermissionsResponse extends Message<ListMyProjectPermissionsResponse> {
  /**
   * @generated from field: repeated string result = 1;
   */
  result: string[] = [];

  constructor(data?: PartialMessage<ListMyProjectPermissionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyProjectPermissionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyProjectPermissionsResponse {
    return new ListMyProjectPermissionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyProjectPermissionsResponse {
    return new ListMyProjectPermissionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyProjectPermissionsResponse {
    return new ListMyProjectPermissionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyProjectPermissionsResponse | PlainMessage<ListMyProjectPermissionsResponse> | undefined, b: ListMyProjectPermissionsResponse | PlainMessage<ListMyProjectPermissionsResponse> | undefined): boolean {
    return proto3.util.equals(ListMyProjectPermissionsResponse, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyMembershipsRequest
 */
export class ListMyMembershipsRequest extends Message<ListMyMembershipsRequest> {
  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.v1.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.user.v1.MembershipQuery queries = 2;
   */
  queries: MembershipQuery[] = [];

  constructor(data?: PartialMessage<ListMyMembershipsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyMembershipsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: ListQuery },
    { no: 2, name: "queries", kind: "message", T: MembershipQuery, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyMembershipsRequest {
    return new ListMyMembershipsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyMembershipsRequest {
    return new ListMyMembershipsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyMembershipsRequest {
    return new ListMyMembershipsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyMembershipsRequest | PlainMessage<ListMyMembershipsRequest> | undefined, b: ListMyMembershipsRequest | PlainMessage<ListMyMembershipsRequest> | undefined): boolean {
    return proto3.util.equals(ListMyMembershipsRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.ListMyMembershipsResponse
 */
export class ListMyMembershipsResponse extends Message<ListMyMembershipsResponse> {
  /**
   * @generated from field: zitadel.v1.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.user.v1.Membership result = 2;
   */
  result: Membership[] = [];

  constructor(data?: PartialMessage<ListMyMembershipsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.ListMyMembershipsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: ListDetails },
    { no: 2, name: "result", kind: "message", T: Membership, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMyMembershipsResponse {
    return new ListMyMembershipsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMyMembershipsResponse {
    return new ListMyMembershipsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMyMembershipsResponse {
    return new ListMyMembershipsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMyMembershipsResponse | PlainMessage<ListMyMembershipsResponse> | undefined, b: ListMyMembershipsResponse | PlainMessage<ListMyMembershipsResponse> | undefined): boolean {
    return proto3.util.equals(ListMyMembershipsResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.GetMyLabelPolicyRequest
 */
export class GetMyLabelPolicyRequest extends Message<GetMyLabelPolicyRequest> {
  constructor(data?: PartialMessage<GetMyLabelPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyLabelPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyLabelPolicyRequest {
    return new GetMyLabelPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyLabelPolicyRequest {
    return new GetMyLabelPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyLabelPolicyRequest {
    return new GetMyLabelPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyLabelPolicyRequest | PlainMessage<GetMyLabelPolicyRequest> | undefined, b: GetMyLabelPolicyRequest | PlainMessage<GetMyLabelPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetMyLabelPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.GetMyLabelPolicyResponse
 */
export class GetMyLabelPolicyResponse extends Message<GetMyLabelPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.LabelPolicy policy = 1;
   */
  policy?: LabelPolicy;

  constructor(data?: PartialMessage<GetMyLabelPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyLabelPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: LabelPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyLabelPolicyResponse {
    return new GetMyLabelPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyLabelPolicyResponse {
    return new GetMyLabelPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyLabelPolicyResponse {
    return new GetMyLabelPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyLabelPolicyResponse | PlainMessage<GetMyLabelPolicyResponse> | undefined, b: GetMyLabelPolicyResponse | PlainMessage<GetMyLabelPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetMyLabelPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.GetMyPrivacyPolicyRequest
 */
export class GetMyPrivacyPolicyRequest extends Message<GetMyPrivacyPolicyRequest> {
  constructor(data?: PartialMessage<GetMyPrivacyPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyPrivacyPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyPrivacyPolicyRequest {
    return new GetMyPrivacyPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyPrivacyPolicyRequest {
    return new GetMyPrivacyPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyPrivacyPolicyRequest {
    return new GetMyPrivacyPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyPrivacyPolicyRequest | PlainMessage<GetMyPrivacyPolicyRequest> | undefined, b: GetMyPrivacyPolicyRequest | PlainMessage<GetMyPrivacyPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetMyPrivacyPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.GetMyPrivacyPolicyResponse
 */
export class GetMyPrivacyPolicyResponse extends Message<GetMyPrivacyPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.PrivacyPolicy policy = 1;
   */
  policy?: PrivacyPolicy;

  constructor(data?: PartialMessage<GetMyPrivacyPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyPrivacyPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: PrivacyPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyPrivacyPolicyResponse {
    return new GetMyPrivacyPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyPrivacyPolicyResponse {
    return new GetMyPrivacyPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyPrivacyPolicyResponse {
    return new GetMyPrivacyPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyPrivacyPolicyResponse | PlainMessage<GetMyPrivacyPolicyResponse> | undefined, b: GetMyPrivacyPolicyResponse | PlainMessage<GetMyPrivacyPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetMyPrivacyPolicyResponse, a, b);
  }
}

/**
 * This is an empty request
 *
 * @generated from message zitadel.auth.v1.GetMyLoginPolicyRequest
 */
export class GetMyLoginPolicyRequest extends Message<GetMyLoginPolicyRequest> {
  constructor(data?: PartialMessage<GetMyLoginPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyLoginPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyLoginPolicyRequest {
    return new GetMyLoginPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyLoginPolicyRequest {
    return new GetMyLoginPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyLoginPolicyRequest {
    return new GetMyLoginPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyLoginPolicyRequest | PlainMessage<GetMyLoginPolicyRequest> | undefined, b: GetMyLoginPolicyRequest | PlainMessage<GetMyLoginPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetMyLoginPolicyRequest, a, b);
  }
}

/**
 * @generated from message zitadel.auth.v1.GetMyLoginPolicyResponse
 */
export class GetMyLoginPolicyResponse extends Message<GetMyLoginPolicyResponse> {
  /**
   * @generated from field: zitadel.policy.v1.LoginPolicy policy = 1;
   */
  policy?: LoginPolicy;

  constructor(data?: PartialMessage<GetMyLoginPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.auth.v1.GetMyLoginPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: LoginPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyLoginPolicyResponse {
    return new GetMyLoginPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyLoginPolicyResponse {
    return new GetMyLoginPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyLoginPolicyResponse {
    return new GetMyLoginPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyLoginPolicyResponse | PlainMessage<GetMyLoginPolicyResponse> | undefined, b: GetMyLoginPolicyResponse | PlainMessage<GetMyLoginPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetMyLoginPolicyResponse, a, b);
  }
}

