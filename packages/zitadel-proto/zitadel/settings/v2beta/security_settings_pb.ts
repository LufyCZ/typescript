// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file zitadel/settings/v2beta/security_settings.proto (package zitadel.settings.v2beta, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message zitadel.settings.v2beta.SecuritySettings
 */
export class SecuritySettings extends Message<SecuritySettings> {
  /**
   * @generated from field: zitadel.settings.v2beta.EmbeddedIframeSettings embedded_iframe = 1;
   */
  embeddedIframe?: EmbeddedIframeSettings;

  /**
   * @generated from field: bool enable_impersonation = 2;
   */
  enableImpersonation = false;

  constructor(data?: PartialMessage<SecuritySettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.SecuritySettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "embedded_iframe", kind: "message", T: EmbeddedIframeSettings },
    { no: 2, name: "enable_impersonation", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SecuritySettings {
    return new SecuritySettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SecuritySettings {
    return new SecuritySettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SecuritySettings {
    return new SecuritySettings().fromJsonString(jsonString, options);
  }

  static equals(a: SecuritySettings | PlainMessage<SecuritySettings> | undefined, b: SecuritySettings | PlainMessage<SecuritySettings> | undefined): boolean {
    return proto3.util.equals(SecuritySettings, a, b);
  }
}

/**
 * @generated from message zitadel.settings.v2beta.EmbeddedIframeSettings
 */
export class EmbeddedIframeSettings extends Message<EmbeddedIframeSettings> {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled = false;

  /**
   * @generated from field: repeated string allowed_origins = 2;
   */
  allowedOrigins: string[] = [];

  constructor(data?: PartialMessage<EmbeddedIframeSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zitadel.settings.v2beta.EmbeddedIframeSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "allowed_origins", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmbeddedIframeSettings {
    return new EmbeddedIframeSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmbeddedIframeSettings {
    return new EmbeddedIframeSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmbeddedIframeSettings {
    return new EmbeddedIframeSettings().fromJsonString(jsonString, options);
  }

  static equals(a: EmbeddedIframeSettings | PlainMessage<EmbeddedIframeSettings> | undefined, b: EmbeddedIframeSettings | PlainMessage<EmbeddedIframeSettings> | undefined): boolean {
    return proto3.util.equals(EmbeddedIframeSettings, a, b);
  }
}

