// @generated by protoc-gen-es v1.9.0
// @generated from file zitadel/action/v3alpha/target.proto (package zitadel.action.v3alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Duration, proto3 } from "@bufbuild/protobuf";
import { Details } from "../../object/v2beta/object_pb.js";

/**
 * Wait for response but response body is ignored, status is checked, call is sent as post.
 *
 * @generated from message zitadel.action.v3alpha.SetRESTWebhook
 */
export const SetRESTWebhook = /*@__PURE__*/ proto3.makeMessageType(
  "zitadel.action.v3alpha.SetRESTWebhook",
  () => [
    { no: 1, name: "interrupt_on_error", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * Wait for response and response body is used, status is checked, call is sent as post.
 *
 * @generated from message zitadel.action.v3alpha.SetRESTCall
 */
export const SetRESTCall = /*@__PURE__*/ proto3.makeMessageType(
  "zitadel.action.v3alpha.SetRESTCall",
  () => [
    { no: 1, name: "interrupt_on_error", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * Call is executed in parallel to others, ZITADEL does not wait until the call is finished. The state is ignored, call is sent as post.
 *
 * @generated from message zitadel.action.v3alpha.SetRESTAsync
 */
export const SetRESTAsync = /*@__PURE__*/ proto3.makeMessageType(
  "zitadel.action.v3alpha.SetRESTAsync",
  [],
);

/**
 * @generated from message zitadel.action.v3alpha.Target
 */
export const Target = /*@__PURE__*/ proto3.makeMessageType(
  "zitadel.action.v3alpha.Target",
  () => [
    { no: 1, name: "target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: Details },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "rest_webhook", kind: "message", T: SetRESTWebhook, oneof: "target_type" },
    { no: 5, name: "rest_call", kind: "message", T: SetRESTCall, oneof: "target_type" },
    { no: 6, name: "rest_async", kind: "message", T: SetRESTAsync, oneof: "target_type" },
    { no: 7, name: "timeout", kind: "message", T: Duration },
    { no: 8, name: "endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

