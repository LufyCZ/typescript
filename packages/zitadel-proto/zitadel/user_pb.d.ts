// @generated by protoc-gen-es v1.10.0
// @generated from file zitadel/user.proto (package zitadel.user.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ObjectDetails, TextQueryMethod } from "./object_pb.js";

/**
 * @generated from enum zitadel.user.v1.UserState
 */
export declare enum UserState {
  /**
   * @generated from enum value: USER_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: USER_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: USER_STATE_DELETED = 3;
   */
  DELETED = 3,

  /**
   * @generated from enum value: USER_STATE_LOCKED = 4;
   */
  LOCKED = 4,

  /**
   * @generated from enum value: USER_STATE_SUSPEND = 5;
   */
  SUSPEND = 5,

  /**
   * @generated from enum value: USER_STATE_INITIAL = 6;
   */
  INITIAL = 6,
}

/**
 * @generated from enum zitadel.user.v1.Gender
 */
export declare enum Gender {
  /**
   * @generated from enum value: GENDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: GENDER_FEMALE = 1;
   */
  FEMALE = 1,

  /**
   * @generated from enum value: GENDER_MALE = 2;
   */
  MALE = 2,

  /**
   * @generated from enum value: GENDER_DIVERSE = 3;
   */
  DIVERSE = 3,
}

/**
 * @generated from enum zitadel.user.v1.AccessTokenType
 */
export declare enum AccessTokenType {
  /**
   * @generated from enum value: ACCESS_TOKEN_TYPE_BEARER = 0;
   */
  BEARER = 0,

  /**
   * @generated from enum value: ACCESS_TOKEN_TYPE_JWT = 1;
   */
  JWT = 1,
}

/**
 * @generated from enum zitadel.user.v1.Type
 */
export declare enum Type {
  /**
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TYPE_HUMAN = 1;
   */
  HUMAN = 1,

  /**
   * @generated from enum value: TYPE_MACHINE = 2;
   */
  MACHINE = 2,
}

/**
 * @generated from enum zitadel.user.v1.UserFieldName
 */
export declare enum UserFieldName {
  /**
   * @generated from enum value: USER_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_FIELD_NAME_USER_NAME = 1;
   */
  USER_NAME = 1,

  /**
   * @generated from enum value: USER_FIELD_NAME_FIRST_NAME = 2;
   */
  FIRST_NAME = 2,

  /**
   * @generated from enum value: USER_FIELD_NAME_LAST_NAME = 3;
   */
  LAST_NAME = 3,

  /**
   * @generated from enum value: USER_FIELD_NAME_NICK_NAME = 4;
   */
  NICK_NAME = 4,

  /**
   * @generated from enum value: USER_FIELD_NAME_DISPLAY_NAME = 5;
   */
  DISPLAY_NAME = 5,

  /**
   * @generated from enum value: USER_FIELD_NAME_EMAIL = 6;
   */
  EMAIL = 6,

  /**
   * @generated from enum value: USER_FIELD_NAME_STATE = 7;
   */
  STATE = 7,

  /**
   * @generated from enum value: USER_FIELD_NAME_TYPE = 8;
   */
  TYPE = 8,

  /**
   * @generated from enum value: USER_FIELD_NAME_CREATION_DATE = 9;
   */
  CREATION_DATE = 9,
}

/**
 * @generated from enum zitadel.user.v1.AuthFactorState
 */
export declare enum AuthFactorState {
  /**
   * @generated from enum value: AUTH_FACTOR_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: AUTH_FACTOR_STATE_NOT_READY = 1;
   */
  NOT_READY = 1,

  /**
   * @generated from enum value: AUTH_FACTOR_STATE_READY = 2;
   */
  READY = 2,

  /**
   * @generated from enum value: AUTH_FACTOR_STATE_REMOVED = 3;
   */
  REMOVED = 3,
}

/**
 * @generated from enum zitadel.user.v1.SessionState
 */
export declare enum SessionState {
  /**
   * @generated from enum value: SESSION_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SESSION_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: SESSION_STATE_TERMINATED = 2;
   */
  TERMINATED = 2,
}

/**
 * @generated from enum zitadel.user.v1.UserGrantState
 */
export declare enum UserGrantState {
  /**
   * @generated from enum value: USER_GRANT_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_GRANT_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: USER_GRANT_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,
}

/**
 * @generated from message zitadel.user.v1.User
 */
export declare class User extends Message<User> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.user.v1.UserState state = 3;
   */
  state: UserState;

  /**
   * @generated from field: string user_name = 4;
   */
  userName: string;

  /**
   * @generated from field: repeated string login_names = 5;
   */
  loginNames: string[];

  /**
   * @generated from field: string preferred_login_name = 6;
   */
  preferredLoginName: string;

  /**
   * @generated from oneof zitadel.user.v1.User.type
   */
  type: {
    /**
     * @generated from field: zitadel.user.v1.Human human = 7;
     */
    value: Human;
    case: "human";
  } | {
    /**
     * @generated from field: zitadel.user.v1.Machine machine = 8;
     */
    value: Machine;
    case: "machine";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<User>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.User";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User;

  static equals(a: User | PlainMessage<User> | undefined, b: User | PlainMessage<User> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.Human
 */
export declare class Human extends Message<Human> {
  /**
   * @generated from field: zitadel.user.v1.Profile profile = 1;
   */
  profile?: Profile;

  /**
   * @generated from field: zitadel.user.v1.Email email = 2;
   */
  email?: Email;

  /**
   * @generated from field: zitadel.user.v1.Phone phone = 3;
   */
  phone?: Phone;

  /**
   * The time the user last changed their password.
   *
   * @generated from field: google.protobuf.Timestamp password_changed = 4;
   */
  passwordChanged?: Timestamp;

  constructor(data?: PartialMessage<Human>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.Human";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Human;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Human;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Human;

  static equals(a: Human | PlainMessage<Human> | undefined, b: Human | PlainMessage<Human> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.Machine
 */
export declare class Machine extends Message<Machine> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: bool has_secret = 3;
   */
  hasSecret: boolean;

  /**
   * @generated from field: zitadel.user.v1.AccessTokenType access_token_type = 4;
   */
  accessTokenType: AccessTokenType;

  constructor(data?: PartialMessage<Machine>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.Machine";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Machine;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Machine;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Machine;

  static equals(a: Machine | PlainMessage<Machine> | undefined, b: Machine | PlainMessage<Machine> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.Profile
 */
export declare class Profile extends Message<Profile> {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 2;
   */
  lastName: string;

  /**
   * @generated from field: string nick_name = 3;
   */
  nickName: string;

  /**
   * @generated from field: string display_name = 4;
   */
  displayName: string;

  /**
   * @generated from field: string preferred_language = 5;
   */
  preferredLanguage: string;

  /**
   * @generated from field: zitadel.user.v1.Gender gender = 6;
   */
  gender: Gender;

  /**
   * @generated from field: string avatar_url = 7;
   */
  avatarUrl: string;

  constructor(data?: PartialMessage<Profile>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.Profile";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Profile;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Profile;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Profile;

  static equals(a: Profile | PlainMessage<Profile> | undefined, b: Profile | PlainMessage<Profile> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.Email
 */
export declare class Email extends Message<Email> {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: bool is_email_verified = 2;
   */
  isEmailVerified: boolean;

  constructor(data?: PartialMessage<Email>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.Email";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Email;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Email;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Email;

  static equals(a: Email | PlainMessage<Email> | undefined, b: Email | PlainMessage<Email> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.Phone
 */
export declare class Phone extends Message<Phone> {
  /**
   * @generated from field: string phone = 1;
   */
  phone: string;

  /**
   * @generated from field: bool is_phone_verified = 2;
   */
  isPhoneVerified: boolean;

  constructor(data?: PartialMessage<Phone>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.Phone";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Phone;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Phone;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Phone;

  static equals(a: Phone | PlainMessage<Phone> | undefined, b: Phone | PlainMessage<Phone> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.SearchQuery
 */
export declare class SearchQuery extends Message<SearchQuery> {
  /**
   * @generated from oneof zitadel.user.v1.SearchQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.user.v1.UserNameQuery user_name_query = 1;
     */
    value: UserNameQuery;
    case: "userNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.FirstNameQuery first_name_query = 2;
     */
    value: FirstNameQuery;
    case: "firstNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.LastNameQuery last_name_query = 3;
     */
    value: LastNameQuery;
    case: "lastNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.NickNameQuery nick_name_query = 4;
     */
    value: NickNameQuery;
    case: "nickNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.DisplayNameQuery display_name_query = 5;
     */
    value: DisplayNameQuery;
    case: "displayNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.EmailQuery email_query = 6;
     */
    value: EmailQuery;
    case: "emailQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.StateQuery state_query = 7;
     */
    value: StateQuery;
    case: "stateQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.TypeQuery type_query = 8;
     */
    value: TypeQuery;
    case: "typeQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.LoginNameQuery login_name_query = 9;
     */
    value: LoginNameQuery;
    case: "loginNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.InUserIDQuery in_user_ids_query = 10;
     */
    value: InUserIDQuery;
    case: "inUserIdsQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.OrQuery or_query = 11;
     */
    value: OrQuery;
    case: "orQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.AndQuery and_query = 12;
     */
    value: AndQuery;
    case: "andQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.NotQuery not_query = 13;
     */
    value: NotQuery;
    case: "notQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.InUserEmailsQuery in_user_emails_query = 14;
     */
    value: InUserEmailsQuery;
    case: "inUserEmailsQuery";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<SearchQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.SearchQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery;

  static equals(a: SearchQuery | PlainMessage<SearchQuery> | undefined, b: SearchQuery | PlainMessage<SearchQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.OrQuery
 */
export declare class OrQuery extends Message<OrQuery> {
  /**
   * @generated from field: repeated zitadel.user.v1.SearchQuery queries = 1;
   */
  queries: SearchQuery[];

  constructor(data?: PartialMessage<OrQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.OrQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrQuery;

  static equals(a: OrQuery | PlainMessage<OrQuery> | undefined, b: OrQuery | PlainMessage<OrQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.AndQuery
 */
export declare class AndQuery extends Message<AndQuery> {
  /**
   * @generated from field: repeated zitadel.user.v1.SearchQuery queries = 1;
   */
  queries: SearchQuery[];

  constructor(data?: PartialMessage<AndQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.AndQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AndQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AndQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AndQuery;

  static equals(a: AndQuery | PlainMessage<AndQuery> | undefined, b: AndQuery | PlainMessage<AndQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.NotQuery
 */
export declare class NotQuery extends Message<NotQuery> {
  /**
   * @generated from field: zitadel.user.v1.SearchQuery query = 1;
   */
  query?: SearchQuery;

  constructor(data?: PartialMessage<NotQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.NotQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotQuery;

  static equals(a: NotQuery | PlainMessage<NotQuery> | undefined, b: NotQuery | PlainMessage<NotQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.InUserIDQuery
 */
export declare class InUserIDQuery extends Message<InUserIDQuery> {
  /**
   * @generated from field: repeated string user_ids = 1;
   */
  userIds: string[];

  constructor(data?: PartialMessage<InUserIDQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.InUserIDQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InUserIDQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InUserIDQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InUserIDQuery;

  static equals(a: InUserIDQuery | PlainMessage<InUserIDQuery> | undefined, b: InUserIDQuery | PlainMessage<InUserIDQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.InUserEmailsQuery
 */
export declare class InUserEmailsQuery extends Message<InUserEmailsQuery> {
  /**
   * @generated from field: repeated string user_emails = 1;
   */
  userEmails: string[];

  constructor(data?: PartialMessage<InUserEmailsQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.InUserEmailsQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InUserEmailsQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InUserEmailsQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InUserEmailsQuery;

  static equals(a: InUserEmailsQuery | PlainMessage<InUserEmailsQuery> | undefined, b: InUserEmailsQuery | PlainMessage<InUserEmailsQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserNameQuery
 */
export declare class UserNameQuery extends Message<UserNameQuery> {
  /**
   * @generated from field: string user_name = 1;
   */
  userName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<UserNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserNameQuery;

  static equals(a: UserNameQuery | PlainMessage<UserNameQuery> | undefined, b: UserNameQuery | PlainMessage<UserNameQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.FirstNameQuery
 */
export declare class FirstNameQuery extends Message<FirstNameQuery> {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<FirstNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.FirstNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FirstNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FirstNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FirstNameQuery;

  static equals(a: FirstNameQuery | PlainMessage<FirstNameQuery> | undefined, b: FirstNameQuery | PlainMessage<FirstNameQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.LastNameQuery
 */
export declare class LastNameQuery extends Message<LastNameQuery> {
  /**
   * @generated from field: string last_name = 1;
   */
  lastName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<LastNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.LastNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LastNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LastNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LastNameQuery;

  static equals(a: LastNameQuery | PlainMessage<LastNameQuery> | undefined, b: LastNameQuery | PlainMessage<LastNameQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.NickNameQuery
 */
export declare class NickNameQuery extends Message<NickNameQuery> {
  /**
   * @generated from field: string nick_name = 1;
   */
  nickName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<NickNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.NickNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NickNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NickNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NickNameQuery;

  static equals(a: NickNameQuery | PlainMessage<NickNameQuery> | undefined, b: NickNameQuery | PlainMessage<NickNameQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.DisplayNameQuery
 */
export declare class DisplayNameQuery extends Message<DisplayNameQuery> {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<DisplayNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.DisplayNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisplayNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisplayNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisplayNameQuery;

  static equals(a: DisplayNameQuery | PlainMessage<DisplayNameQuery> | undefined, b: DisplayNameQuery | PlainMessage<DisplayNameQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.EmailQuery
 */
export declare class EmailQuery extends Message<EmailQuery> {
  /**
   * @generated from field: string email_address = 1;
   */
  emailAddress: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<EmailQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.EmailQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmailQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmailQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmailQuery;

  static equals(a: EmailQuery | PlainMessage<EmailQuery> | undefined, b: EmailQuery | PlainMessage<EmailQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.LoginNameQuery
 */
export declare class LoginNameQuery extends Message<LoginNameQuery> {
  /**
   * @generated from field: string login_name = 1;
   */
  loginName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<LoginNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.LoginNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginNameQuery;

  static equals(a: LoginNameQuery | PlainMessage<LoginNameQuery> | undefined, b: LoginNameQuery | PlainMessage<LoginNameQuery> | undefined): boolean;
}

/**
 * UserStateQuery always equals
 *
 * @generated from message zitadel.user.v1.StateQuery
 */
export declare class StateQuery extends Message<StateQuery> {
  /**
   * @generated from field: zitadel.user.v1.UserState state = 1;
   */
  state: UserState;

  constructor(data?: PartialMessage<StateQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.StateQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StateQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StateQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StateQuery;

  static equals(a: StateQuery | PlainMessage<StateQuery> | undefined, b: StateQuery | PlainMessage<StateQuery> | undefined): boolean;
}

/**
 * UserTypeQuery always equals
 *
 * @generated from message zitadel.user.v1.TypeQuery
 */
export declare class TypeQuery extends Message<TypeQuery> {
  /**
   * @generated from field: zitadel.user.v1.Type type = 1;
   */
  type: Type;

  constructor(data?: PartialMessage<TypeQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.TypeQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TypeQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TypeQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TypeQuery;

  static equals(a: TypeQuery | PlainMessage<TypeQuery> | undefined, b: TypeQuery | PlainMessage<TypeQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.AuthFactor
 */
export declare class AuthFactor extends Message<AuthFactor> {
  /**
   * @generated from field: zitadel.user.v1.AuthFactorState state = 1;
   */
  state: AuthFactorState;

  /**
   * @generated from oneof zitadel.user.v1.AuthFactor.type
   */
  type: {
    /**
     * @generated from field: zitadel.user.v1.AuthFactorOTP otp = 2;
     */
    value: AuthFactorOTP;
    case: "otp";
  } | {
    /**
     * @generated from field: zitadel.user.v1.AuthFactorU2F u2f = 3;
     */
    value: AuthFactorU2F;
    case: "u2f";
  } | {
    /**
     * @generated from field: zitadel.user.v1.AuthFactorOTPSMS otp_sms = 4;
     */
    value: AuthFactorOTPSMS;
    case: "otpSms";
  } | {
    /**
     * @generated from field: zitadel.user.v1.AuthFactorOTPEmail otp_email = 5;
     */
    value: AuthFactorOTPEmail;
    case: "otpEmail";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<AuthFactor>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.AuthFactor";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthFactor;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthFactor;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthFactor;

  static equals(a: AuthFactor | PlainMessage<AuthFactor> | undefined, b: AuthFactor | PlainMessage<AuthFactor> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.AuthFactorOTP
 */
export declare class AuthFactorOTP extends Message<AuthFactorOTP> {
  constructor(data?: PartialMessage<AuthFactorOTP>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.AuthFactorOTP";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthFactorOTP;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthFactorOTP;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthFactorOTP;

  static equals(a: AuthFactorOTP | PlainMessage<AuthFactorOTP> | undefined, b: AuthFactorOTP | PlainMessage<AuthFactorOTP> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.AuthFactorOTPSMS
 */
export declare class AuthFactorOTPSMS extends Message<AuthFactorOTPSMS> {
  constructor(data?: PartialMessage<AuthFactorOTPSMS>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.AuthFactorOTPSMS";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthFactorOTPSMS;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthFactorOTPSMS;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthFactorOTPSMS;

  static equals(a: AuthFactorOTPSMS | PlainMessage<AuthFactorOTPSMS> | undefined, b: AuthFactorOTPSMS | PlainMessage<AuthFactorOTPSMS> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.AuthFactorOTPEmail
 */
export declare class AuthFactorOTPEmail extends Message<AuthFactorOTPEmail> {
  constructor(data?: PartialMessage<AuthFactorOTPEmail>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.AuthFactorOTPEmail";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthFactorOTPEmail;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthFactorOTPEmail;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthFactorOTPEmail;

  static equals(a: AuthFactorOTPEmail | PlainMessage<AuthFactorOTPEmail> | undefined, b: AuthFactorOTPEmail | PlainMessage<AuthFactorOTPEmail> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.AuthFactorU2F
 */
export declare class AuthFactorU2F extends Message<AuthFactorU2F> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<AuthFactorU2F>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.AuthFactorU2F";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthFactorU2F;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthFactorU2F;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthFactorU2F;

  static equals(a: AuthFactorU2F | PlainMessage<AuthFactorU2F> | undefined, b: AuthFactorU2F | PlainMessage<AuthFactorU2F> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.WebAuthNKey
 */
export declare class WebAuthNKey extends Message<WebAuthNKey> {
  /**
   * @generated from field: bytes public_key = 1;
   */
  publicKey: Uint8Array;

  constructor(data?: PartialMessage<WebAuthNKey>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.WebAuthNKey";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WebAuthNKey;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WebAuthNKey;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WebAuthNKey;

  static equals(a: WebAuthNKey | PlainMessage<WebAuthNKey> | undefined, b: WebAuthNKey | PlainMessage<WebAuthNKey> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.WebAuthNVerification
 */
export declare class WebAuthNVerification extends Message<WebAuthNVerification> {
  /**
   * @generated from field: bytes public_key_credential = 1;
   */
  publicKeyCredential: Uint8Array;

  /**
   * @generated from field: string token_name = 2;
   */
  tokenName: string;

  constructor(data?: PartialMessage<WebAuthNVerification>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.WebAuthNVerification";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WebAuthNVerification;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WebAuthNVerification;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WebAuthNVerification;

  static equals(a: WebAuthNVerification | PlainMessage<WebAuthNVerification> | undefined, b: WebAuthNVerification | PlainMessage<WebAuthNVerification> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.WebAuthNToken
 */
export declare class WebAuthNToken extends Message<WebAuthNToken> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.user.v1.AuthFactorState state = 2;
   */
  state: AuthFactorState;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  constructor(data?: PartialMessage<WebAuthNToken>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.WebAuthNToken";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WebAuthNToken;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WebAuthNToken;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WebAuthNToken;

  static equals(a: WebAuthNToken | PlainMessage<WebAuthNToken> | undefined, b: WebAuthNToken | PlainMessage<WebAuthNToken> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.Membership
 */
export declare class Membership extends Message<Membership> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: repeated string roles = 3;
   */
  roles: string[];

  /**
   * @generated from field: string display_name = 4;
   */
  displayName: string;

  /**
   * @generated from oneof zitadel.user.v1.Membership.type
   */
  type: {
    /**
     * @generated from field: bool iam = 5;
     */
    value: boolean;
    case: "iam";
  } | {
    /**
     * @generated from field: string org_id = 6;
     */
    value: string;
    case: "orgId";
  } | {
    /**
     * @generated from field: string project_id = 7;
     */
    value: string;
    case: "projectId";
  } | {
    /**
     * @generated from field: string project_grant_id = 8;
     */
    value: string;
    case: "projectGrantId";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<Membership>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.Membership";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Membership;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Membership;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Membership;

  static equals(a: Membership | PlainMessage<Membership> | undefined, b: Membership | PlainMessage<Membership> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.MembershipQuery
 */
export declare class MembershipQuery extends Message<MembershipQuery> {
  /**
   * @generated from oneof zitadel.user.v1.MembershipQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.user.v1.MembershipOrgQuery org_query = 1;
     */
    value: MembershipOrgQuery;
    case: "orgQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.MembershipProjectQuery project_query = 2;
     */
    value: MembershipProjectQuery;
    case: "projectQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.MembershipProjectGrantQuery project_grant_query = 3;
     */
    value: MembershipProjectGrantQuery;
    case: "projectGrantQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.MembershipIAMQuery iam_query = 4;
     */
    value: MembershipIAMQuery;
    case: "iamQuery";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<MembershipQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.MembershipQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MembershipQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MembershipQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MembershipQuery;

  static equals(a: MembershipQuery | PlainMessage<MembershipQuery> | undefined, b: MembershipQuery | PlainMessage<MembershipQuery> | undefined): boolean;
}

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipOrgQuery
 */
export declare class MembershipOrgQuery extends Message<MembershipOrgQuery> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  constructor(data?: PartialMessage<MembershipOrgQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.MembershipOrgQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MembershipOrgQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MembershipOrgQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MembershipOrgQuery;

  static equals(a: MembershipOrgQuery | PlainMessage<MembershipOrgQuery> | undefined, b: MembershipOrgQuery | PlainMessage<MembershipOrgQuery> | undefined): boolean;
}

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipProjectQuery
 */
export declare class MembershipProjectQuery extends Message<MembershipProjectQuery> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  constructor(data?: PartialMessage<MembershipProjectQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.MembershipProjectQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MembershipProjectQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MembershipProjectQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MembershipProjectQuery;

  static equals(a: MembershipProjectQuery | PlainMessage<MembershipProjectQuery> | undefined, b: MembershipProjectQuery | PlainMessage<MembershipProjectQuery> | undefined): boolean;
}

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipProjectGrantQuery
 */
export declare class MembershipProjectGrantQuery extends Message<MembershipProjectGrantQuery> {
  /**
   * @generated from field: string project_grant_id = 1;
   */
  projectGrantId: string;

  constructor(data?: PartialMessage<MembershipProjectGrantQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.MembershipProjectGrantQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MembershipProjectGrantQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MembershipProjectGrantQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MembershipProjectGrantQuery;

  static equals(a: MembershipProjectGrantQuery | PlainMessage<MembershipProjectGrantQuery> | undefined, b: MembershipProjectGrantQuery | PlainMessage<MembershipProjectGrantQuery> | undefined): boolean;
}

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipIAMQuery
 */
export declare class MembershipIAMQuery extends Message<MembershipIAMQuery> {
  /**
   * @generated from field: bool iam = 1;
   */
  iam: boolean;

  constructor(data?: PartialMessage<MembershipIAMQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.MembershipIAMQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MembershipIAMQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MembershipIAMQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MembershipIAMQuery;

  static equals(a: MembershipIAMQuery | PlainMessage<MembershipIAMQuery> | undefined, b: MembershipIAMQuery | PlainMessage<MembershipIAMQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.Session
 */
export declare class Session extends Message<Session> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string agent_id = 2;
   */
  agentId: string;

  /**
   * @generated from field: zitadel.user.v1.SessionState auth_state = 3;
   */
  authState: SessionState;

  /**
   * @generated from field: string user_id = 4;
   */
  userId: string;

  /**
   * @generated from field: string user_name = 5;
   */
  userName: string;

  /**
   * @generated from field: string login_name = 7;
   */
  loginName: string;

  /**
   * @generated from field: string display_name = 8;
   */
  displayName: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 9;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string avatar_url = 10;
   */
  avatarUrl: string;

  constructor(data?: PartialMessage<Session>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.Session";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Session;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Session;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Session;

  static equals(a: Session | PlainMessage<Session> | undefined, b: Session | PlainMessage<Session> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.RefreshToken
 */
export declare class RefreshToken extends Message<RefreshToken> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string client_id = 3;
   */
  clientId: string;

  /**
   * @generated from field: google.protobuf.Timestamp auth_time = 4;
   */
  authTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp idle_expiration = 5;
   */
  idleExpiration?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expiration = 6;
   */
  expiration?: Timestamp;

  /**
   * @generated from field: repeated string scopes = 7;
   */
  scopes: string[];

  /**
   * @generated from field: repeated string audience = 8;
   */
  audience: string[];

  constructor(data?: PartialMessage<RefreshToken>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.RefreshToken";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RefreshToken;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RefreshToken;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RefreshToken;

  static equals(a: RefreshToken | PlainMessage<RefreshToken> | undefined, b: RefreshToken | PlainMessage<RefreshToken> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.PersonalAccessToken
 */
export declare class PersonalAccessToken extends Message<PersonalAccessToken> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: google.protobuf.Timestamp expiration_date = 3;
   */
  expirationDate?: Timestamp;

  /**
   * @generated from field: repeated string scopes = 4;
   */
  scopes: string[];

  constructor(data?: PartialMessage<PersonalAccessToken>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.PersonalAccessToken";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PersonalAccessToken;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PersonalAccessToken;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PersonalAccessToken;

  static equals(a: PersonalAccessToken | PlainMessage<PersonalAccessToken> | undefined, b: PersonalAccessToken | PlainMessage<PersonalAccessToken> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrant
 */
export declare class UserGrant extends Message<UserGrant> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: repeated string role_keys = 3;
   */
  roleKeys: string[];

  /**
   * @generated from field: zitadel.user.v1.UserGrantState state = 4;
   */
  state: UserGrantState;

  /**
   * @generated from field: string user_id = 5;
   */
  userId: string;

  /**
   * @generated from field: string user_name = 6;
   */
  userName: string;

  /**
   * @generated from field: string first_name = 7;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 8;
   */
  lastName: string;

  /**
   * @generated from field: string email = 9;
   */
  email: string;

  /**
   * @generated from field: string display_name = 10;
   */
  displayName: string;

  /**
   * @generated from field: string org_id = 11;
   */
  orgId: string;

  /**
   * @generated from field: string org_name = 12;
   */
  orgName: string;

  /**
   * @generated from field: string org_domain = 13;
   */
  orgDomain: string;

  /**
   * @generated from field: string project_id = 14;
   */
  projectId: string;

  /**
   * @generated from field: string project_name = 15;
   */
  projectName: string;

  /**
   * @generated from field: string project_grant_id = 16;
   */
  projectGrantId: string;

  /**
   * @generated from field: string avatar_url = 17;
   */
  avatarUrl: string;

  /**
   * @generated from field: string preferred_login_name = 18;
   */
  preferredLoginName: string;

  /**
   * @generated from field: zitadel.user.v1.Type user_type = 19;
   */
  userType: Type;

  /**
   * @generated from field: string granted_org_id = 20;
   */
  grantedOrgId: string;

  /**
   * @generated from field: string granted_org_name = 21;
   */
  grantedOrgName: string;

  /**
   * @generated from field: string granted_org_domain = 22;
   */
  grantedOrgDomain: string;

  constructor(data?: PartialMessage<UserGrant>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrant";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrant;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrant;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrant;

  static equals(a: UserGrant | PlainMessage<UserGrant> | undefined, b: UserGrant | PlainMessage<UserGrant> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantQuery
 */
export declare class UserGrantQuery extends Message<UserGrantQuery> {
  /**
   * @generated from oneof zitadel.user.v1.UserGrantQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.user.v1.UserGrantProjectIDQuery project_id_query = 1;
     */
    value: UserGrantProjectIDQuery;
    case: "projectIdQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantUserIDQuery user_id_query = 2;
     */
    value: UserGrantUserIDQuery;
    case: "userIdQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantWithGrantedQuery with_granted_query = 3;
     */
    value: UserGrantWithGrantedQuery;
    case: "withGrantedQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantRoleKeyQuery role_key_query = 4;
     */
    value: UserGrantRoleKeyQuery;
    case: "roleKeyQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantProjectGrantIDQuery project_grant_id_query = 5;
     */
    value: UserGrantProjectGrantIDQuery;
    case: "projectGrantIdQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantUserNameQuery user_name_query = 6;
     */
    value: UserGrantUserNameQuery;
    case: "userNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantFirstNameQuery first_name_query = 7;
     */
    value: UserGrantFirstNameQuery;
    case: "firstNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantLastNameQuery last_name_query = 8;
     */
    value: UserGrantLastNameQuery;
    case: "lastNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantEmailQuery email_query = 9;
     */
    value: UserGrantEmailQuery;
    case: "emailQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantOrgNameQuery org_name_query = 10;
     */
    value: UserGrantOrgNameQuery;
    case: "orgNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantOrgDomainQuery org_domain_query = 11;
     */
    value: UserGrantOrgDomainQuery;
    case: "orgDomainQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantProjectNameQuery project_name_query = 12;
     */
    value: UserGrantProjectNameQuery;
    case: "projectNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantDisplayNameQuery display_name_query = 13;
     */
    value: UserGrantDisplayNameQuery;
    case: "displayNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantUserTypeQuery user_type_query = 14;
     */
    value: UserGrantUserTypeQuery;
    case: "userTypeQuery";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<UserGrantQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantQuery;

  static equals(a: UserGrantQuery | PlainMessage<UserGrantQuery> | undefined, b: UserGrantQuery | PlainMessage<UserGrantQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantProjectIDQuery
 */
export declare class UserGrantProjectIDQuery extends Message<UserGrantProjectIDQuery> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  constructor(data?: PartialMessage<UserGrantProjectIDQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantProjectIDQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantProjectIDQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantProjectIDQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantProjectIDQuery;

  static equals(a: UserGrantProjectIDQuery | PlainMessage<UserGrantProjectIDQuery> | undefined, b: UserGrantProjectIDQuery | PlainMessage<UserGrantProjectIDQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantUserIDQuery
 */
export declare class UserGrantUserIDQuery extends Message<UserGrantUserIDQuery> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  constructor(data?: PartialMessage<UserGrantUserIDQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantUserIDQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantUserIDQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantUserIDQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantUserIDQuery;

  static equals(a: UserGrantUserIDQuery | PlainMessage<UserGrantUserIDQuery> | undefined, b: UserGrantUserIDQuery | PlainMessage<UserGrantUserIDQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantWithGrantedQuery
 */
export declare class UserGrantWithGrantedQuery extends Message<UserGrantWithGrantedQuery> {
  /**
   * @generated from field: bool with_granted = 1;
   */
  withGranted: boolean;

  constructor(data?: PartialMessage<UserGrantWithGrantedQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantWithGrantedQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantWithGrantedQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantWithGrantedQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantWithGrantedQuery;

  static equals(a: UserGrantWithGrantedQuery | PlainMessage<UserGrantWithGrantedQuery> | undefined, b: UserGrantWithGrantedQuery | PlainMessage<UserGrantWithGrantedQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantRoleKeyQuery
 */
export declare class UserGrantRoleKeyQuery extends Message<UserGrantRoleKeyQuery> {
  /**
   * @generated from field: string role_key = 1;
   */
  roleKey: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<UserGrantRoleKeyQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantRoleKeyQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantRoleKeyQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantRoleKeyQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantRoleKeyQuery;

  static equals(a: UserGrantRoleKeyQuery | PlainMessage<UserGrantRoleKeyQuery> | undefined, b: UserGrantRoleKeyQuery | PlainMessage<UserGrantRoleKeyQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantProjectGrantIDQuery
 */
export declare class UserGrantProjectGrantIDQuery extends Message<UserGrantProjectGrantIDQuery> {
  /**
   * @generated from field: string project_grant_id = 1;
   */
  projectGrantId: string;

  constructor(data?: PartialMessage<UserGrantProjectGrantIDQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantProjectGrantIDQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantProjectGrantIDQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantProjectGrantIDQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantProjectGrantIDQuery;

  static equals(a: UserGrantProjectGrantIDQuery | PlainMessage<UserGrantProjectGrantIDQuery> | undefined, b: UserGrantProjectGrantIDQuery | PlainMessage<UserGrantProjectGrantIDQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantUserNameQuery
 */
export declare class UserGrantUserNameQuery extends Message<UserGrantUserNameQuery> {
  /**
   * @generated from field: string user_name = 1;
   */
  userName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<UserGrantUserNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantUserNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantUserNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantUserNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantUserNameQuery;

  static equals(a: UserGrantUserNameQuery | PlainMessage<UserGrantUserNameQuery> | undefined, b: UserGrantUserNameQuery | PlainMessage<UserGrantUserNameQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantFirstNameQuery
 */
export declare class UserGrantFirstNameQuery extends Message<UserGrantFirstNameQuery> {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<UserGrantFirstNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantFirstNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantFirstNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantFirstNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantFirstNameQuery;

  static equals(a: UserGrantFirstNameQuery | PlainMessage<UserGrantFirstNameQuery> | undefined, b: UserGrantFirstNameQuery | PlainMessage<UserGrantFirstNameQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantLastNameQuery
 */
export declare class UserGrantLastNameQuery extends Message<UserGrantLastNameQuery> {
  /**
   * @generated from field: string last_name = 1;
   */
  lastName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<UserGrantLastNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantLastNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantLastNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantLastNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantLastNameQuery;

  static equals(a: UserGrantLastNameQuery | PlainMessage<UserGrantLastNameQuery> | undefined, b: UserGrantLastNameQuery | PlainMessage<UserGrantLastNameQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantEmailQuery
 */
export declare class UserGrantEmailQuery extends Message<UserGrantEmailQuery> {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<UserGrantEmailQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantEmailQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantEmailQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantEmailQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantEmailQuery;

  static equals(a: UserGrantEmailQuery | PlainMessage<UserGrantEmailQuery> | undefined, b: UserGrantEmailQuery | PlainMessage<UserGrantEmailQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantOrgNameQuery
 */
export declare class UserGrantOrgNameQuery extends Message<UserGrantOrgNameQuery> {
  /**
   * @generated from field: string org_name = 1;
   */
  orgName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<UserGrantOrgNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantOrgNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantOrgNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantOrgNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantOrgNameQuery;

  static equals(a: UserGrantOrgNameQuery | PlainMessage<UserGrantOrgNameQuery> | undefined, b: UserGrantOrgNameQuery | PlainMessage<UserGrantOrgNameQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantOrgDomainQuery
 */
export declare class UserGrantOrgDomainQuery extends Message<UserGrantOrgDomainQuery> {
  /**
   * @generated from field: string org_domain = 1;
   */
  orgDomain: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<UserGrantOrgDomainQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantOrgDomainQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantOrgDomainQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantOrgDomainQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantOrgDomainQuery;

  static equals(a: UserGrantOrgDomainQuery | PlainMessage<UserGrantOrgDomainQuery> | undefined, b: UserGrantOrgDomainQuery | PlainMessage<UserGrantOrgDomainQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantProjectNameQuery
 */
export declare class UserGrantProjectNameQuery extends Message<UserGrantProjectNameQuery> {
  /**
   * @generated from field: string project_name = 1;
   */
  projectName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<UserGrantProjectNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantProjectNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantProjectNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantProjectNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantProjectNameQuery;

  static equals(a: UserGrantProjectNameQuery | PlainMessage<UserGrantProjectNameQuery> | undefined, b: UserGrantProjectNameQuery | PlainMessage<UserGrantProjectNameQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantDisplayNameQuery
 */
export declare class UserGrantDisplayNameQuery extends Message<UserGrantDisplayNameQuery> {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<UserGrantDisplayNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantDisplayNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantDisplayNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantDisplayNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantDisplayNameQuery;

  static equals(a: UserGrantDisplayNameQuery | PlainMessage<UserGrantDisplayNameQuery> | undefined, b: UserGrantDisplayNameQuery | PlainMessage<UserGrantDisplayNameQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.user.v1.UserGrantUserTypeQuery
 */
export declare class UserGrantUserTypeQuery extends Message<UserGrantUserTypeQuery> {
  /**
   * @generated from field: zitadel.user.v1.Type type = 1;
   */
  type: Type;

  constructor(data?: PartialMessage<UserGrantUserTypeQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.user.v1.UserGrantUserTypeQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGrantUserTypeQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGrantUserTypeQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGrantUserTypeQuery;

  static equals(a: UserGrantUserTypeQuery | PlainMessage<UserGrantUserTypeQuery> | undefined, b: UserGrantUserTypeQuery | PlainMessage<UserGrantUserTypeQuery> | undefined): boolean;
}

